{
  if (url.startsWith("offline:")) {
    return new OfflineConnection(url);
  }
  driver=StringUtils.trimToNull(driver);
  if (driver == null) {
    driver=DatabaseFactory.getInstance().findDefaultDriver(url);
  }
  try {
    Driver driverObject;
    DatabaseFactory databaseFactory=DatabaseFactory.getInstance();
    if (databaseClass != null) {
      databaseFactory.clearRegistry();
      databaseFactory.register((Database)Class.forName(databaseClass,true,resourceAccessor.toClassLoader()).newInstance());
    }
    try {
      if (driver == null) {
        driver=databaseFactory.findDefaultDriver(url);
      }
      if (driver == null) {
        throw new RuntimeException("Driver class was not specified and could not be determined from the url (" + url + ")");
      }
      driverObject=(Driver)Class.forName(driver,true,resourceAccessor.toClassLoader()).newInstance();
    }
 catch (    Exception e) {
      throw new RuntimeException("Cannot find database driver: " + e.getMessage());
    }
    Properties driverProperties;
    if (propertyProviderClass == null) {
      driverProperties=new Properties();
    }
 else {
      driverProperties=(Properties)Class.forName(propertyProviderClass,true,resourceAccessor.toClassLoader()).newInstance();
    }
    if (username != null) {
      driverProperties.put("user",username);
    }
    if (password != null) {
      driverProperties.put("password",password);
    }
    if (null != driverPropertiesFile) {
      File propertiesFile=new File(driverPropertiesFile);
      if (propertiesFile.exists()) {
        FileInputStream inputStream=new FileInputStream(propertiesFile);
        try {
          driverProperties.load(inputStream);
        }
  finally {
          inputStream.close();
        }
      }
 else {
        throw new RuntimeException("Can't open JDBC Driver specific properties from the file: '" + driverPropertiesFile + "'");
      }
    }
    Connection connection=driverObject.connect(url,driverProperties);
    if (connection == null) {
      throw new DatabaseException("Connection could not be created to " + url + " with driver "+ driverObject.getClass().getName()+ ".  Possibly the wrong driver for the given database URL");
    }
    return new JdbcConnection(connection);
  }
 catch (  Exception e) {
    throw new DatabaseException(e);
  }
}
