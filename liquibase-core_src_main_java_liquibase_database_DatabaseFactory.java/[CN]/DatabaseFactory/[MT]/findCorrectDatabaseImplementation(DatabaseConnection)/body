{
  SortedSet<Database> foundDatabases=new TreeSet<Database>(new Comparator<Database>(){
    public int compare(    Database o1,    Database o2){
      return -1 * new Integer(o1.getPriority()).compareTo(o2.getPriority());
    }
  }
);
  for (  Database implementedDatabase : getImplementedDatabases()) {
    if (implementedDatabase.isCorrectDatabaseImplementation(connection)) {
      foundDatabases.add(implementedDatabase);
    }
  }
  if (foundDatabases.size() == 0) {
    LogFactory.getLogger().warning("Unknown database: " + connection.getDatabaseProductName());
    UnsupportedDatabase unsupportedDB=new UnsupportedDatabase();
    unsupportedDB.setConnection(connection);
    return unsupportedDB;
  }
  Database returnDatabase;
  try {
    returnDatabase=foundDatabases.iterator().next().getClass().newInstance();
  }
 catch (  Exception e) {
    throw new UnexpectedLiquibaseException(e);
  }
  returnDatabase.setConnection(connection);
  return returnDatabase;
}
