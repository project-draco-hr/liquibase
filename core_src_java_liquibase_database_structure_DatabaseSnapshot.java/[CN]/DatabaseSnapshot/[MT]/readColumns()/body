{
  updateListeners("Reading columns for " + database.toString() + " ...");
  Statement selectStatement=database.getConnection().createStatement();
  ResultSet rs=databaseMetaData.getColumns(database.getCatalogName(),database.getSchemaName(),null,null);
  while (rs.next()) {
    Column columnInfo=new Column();
    String tableName=rs.getString("TABLE_NAME");
    String columnName=rs.getString("COLUMN_NAME");
    String schemaName=rs.getString("TABLE_SCHEM");
    String catalogName=rs.getString("TABLE_CAT");
    if (database.isSystemTable(catalogName,schemaName,tableName) || database.isLiquibaseTable(tableName)) {
      continue;
    }
    Table table=tablesMap.get(tableName);
    if (table == null) {
      View view=viewsMap.get(tableName);
      if (view == null) {
        log.info("Could not find table or view " + tableName + " for column "+ columnName);
        continue;
      }
 else {
        columnInfo.setView(view);
        view.getColumns().add(columnInfo);
      }
    }
 else {
      columnInfo.setTable(table);
      table.getColumns().add(columnInfo);
    }
    columnInfo.setName(columnName);
    columnInfo.setDataType(rs.getInt("DATA_TYPE"));
    columnInfo.setColumnSize(rs.getInt("COLUMN_SIZE"));
    columnInfo.setDecimalDigits(rs.getInt("DECIMAL_DIGITS"));
    columnInfo.setTypeName(rs.getString("TYPE_NAME"));
    Object defaultValue=rs.getObject("COLUMN_DEF");
    try {
      columnInfo.setDefaultValue(database.convertDatabaseValueToJavaObject(defaultValue,columnInfo.getDataType(),columnInfo.getColumnSize(),columnInfo.getDecimalDigits()));
    }
 catch (    ParseException e) {
      throw new JDBCException(e);
    }
    int nullable=rs.getInt("NULLABLE");
    if (nullable == DatabaseMetaData.columnNoNulls) {
      columnInfo.setNullable(false);
    }
 else     if (nullable == DatabaseMetaData.columnNullable) {
      columnInfo.setNullable(true);
    }
    columnInfo.setPrimaryKey(isPrimaryKey(columnInfo));
    ResultSet selectRS=null;
    try {
      selectRS=selectStatement.executeQuery("SELECT " + columnName + " FROM "+ tableName+ " WHERE 1 = 0");
      ResultSetMetaData meta=selectRS.getMetaData();
      columnInfo.setAutoIncrement(meta.isAutoIncrement(1));
    }
  finally {
      if (selectRS != null) {
        selectRS.close();
      }
    }
    columnsMap.put(tableName + "." + columnName,columnInfo);
  }
  rs.close();
  selectStatement.close();
}
