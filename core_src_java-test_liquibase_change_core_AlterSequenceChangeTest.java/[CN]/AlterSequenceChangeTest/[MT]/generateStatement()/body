{
  AlterSequenceChange refactoring=new AlterSequenceChange();
  refactoring.setSchemaName("SCHEMA_NAME");
  refactoring.setSequenceName("SEQ_NAME");
  refactoring.setMinValue(new BigInteger("100"));
  refactoring.setMaxValue(new BigInteger("1000"));
  refactoring.setIncrementBy(new BigInteger("50"));
  refactoring.setOrdered(true);
  SqlStatement[] sqlStatements=refactoring.generateStatements(new MockDatabase());
  assertEquals(1,sqlStatements.length);
  assertTrue(sqlStatements[0] instanceof AlterSequenceStatement);
  assertEquals("SCHEMA_NAME",((AlterSequenceStatement)sqlStatements[0]).getSchemaName());
  assertEquals("SEQ_NAME",((AlterSequenceStatement)sqlStatements[0]).getSequenceName());
  assertEquals(new Integer(100),((AlterSequenceStatement)sqlStatements[0]).getMinValue());
  assertEquals(new Integer(1000),((AlterSequenceStatement)sqlStatements[0]).getMaxValue());
  assertEquals(new Integer(50),((AlterSequenceStatement)sqlStatements[0]).getIncrementBy());
  assertEquals(true,((AlterSequenceStatement)sqlStatements[0]).getOrdered());
}
