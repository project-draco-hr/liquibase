{
  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
  factory.setNamespaceAware(true);
  DocumentBuilder documentBuilder;
  try {
    documentBuilder=factory.newDocumentBuilder();
  }
 catch (  ParserConfigurationException e) {
    throw new RuntimeException(e);
  }
  documentBuilder.setEntityResolver(new LiquibaseEntityResolver());
  Document doc=documentBuilder.newDocument();
  Element changeLogElement=doc.createElementNS(LiquibaseSerializable.STANDARD_OBJECTS_NAMESPACE,"databaseChangeLog");
  changeLogElement.setAttribute("xmlns",LiquibaseSerializable.STANDARD_OBJECTS_NAMESPACE);
  changeLogElement.setAttribute("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
  changeLogElement.setAttribute("xmlns:ext",LiquibaseSerializable.GENERIC_EXTENSION_NAMESPACE);
  changeLogElement.setAttribute("xsi:schemaLocation",LiquibaseSerializable.STANDARD_OBJECTS_NAMESPACE + " http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-" + XMLChangeLogSAXParser.getSchemaVersion()+ ".xsd\n"+ LiquibaseSerializable.GENERIC_EXTENSION_NAMESPACE+ " http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd");
  doc.appendChild(changeLogElement);
  setCurrentChangeLogFileDOM(doc);
  for (  ChangeSet changeSet : changeSets) {
    doc.getDocumentElement().appendChild(createNode(changeSet));
  }
  new DefaultXmlWriter().write(doc,out);
}
