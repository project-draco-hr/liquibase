{
  if (value == null) {
    return;
  }
  if (value instanceof Collection) {
    for (    Object child : (Collection)value) {
      setValueOnNode(node,objectNamespace,objectName,child,serializationType,parentNamespace);
    }
  }
 else   if (value instanceof Map) {
    for (    Map.Entry entry : (Set<Map.Entry>)((Map)value).entrySet()) {
      Element mapNode=currentChangeLogFileDOM.createElementNS(LiquibaseSerializable.STANDARD_CHANGELOG_NAMESPACE,qualifyName(objectName,objectNamespace,parentNamespace));
      setValueOnNode(mapNode,objectNamespace,(String)entry.getKey(),entry.getValue(),serializationType,objectNamespace);
      node.appendChild(mapNode);
    }
  }
 else   if (value instanceof LiquibaseSerializable) {
    node.appendChild(createNode((LiquibaseSerializable)value));
  }
 else   if (value instanceof Object[]) {
    if (serializationType.equals(LiquibaseSerializable.SerializationType.NESTED_OBJECT)) {
      String namespace=LiquibaseSerializable.STANDARD_CHANGELOG_NAMESPACE;
      Element newNode=createNode(namespace,objectName,"");
      for (      Object child : (Object[])value) {
        setValueOnNode(newNode,namespace,objectName,child,serializationType,parentNamespace);
      }
      node.appendChild(newNode);
    }
 else {
      for (      Object child : (Object[])value) {
        setValueOnNode(node,objectNamespace,objectName,child,serializationType,parentNamespace);
      }
    }
  }
 else {
    if (serializationType.equals(LiquibaseSerializable.SerializationType.NESTED_OBJECT)) {
      String namespace=LiquibaseSerializable.STANDARD_CHANGELOG_NAMESPACE;
      node.appendChild(createNode(namespace,objectName,value.toString()));
    }
 else     if (serializationType.equals(LiquibaseSerializable.SerializationType.DIRECT_VALUE)) {
      node.setTextContent(value.toString());
    }
 else {
      node.setAttribute(qualifyName(objectName,objectNamespace,parentNamespace),value.toString());
    }
  }
}
