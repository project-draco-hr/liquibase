{
  if (!(databaseObject1 instanceof ForeignKey && databaseObject2 instanceof ForeignKey)) {
    return false;
  }
  ForeignKey thisForeignKey=(ForeignKey)databaseObject1;
  ForeignKey otherForeignKey=(ForeignKey)databaseObject2;
  if (thisForeignKey.getName() != null && databaseObject2.getName() != null) {
    if (chain.isSameObject(thisForeignKey,databaseObject2,accordingTo)) {
      return true;
    }
  }
  boolean columnsTheSame;
  if (accordingTo.isCaseSensitive()) {
    columnsTheSame=StringUtils.trimToEmpty(((ForeignKey)databaseObject1).getForeignKeyColumns()).equals(StringUtils.trimToEmpty(((ForeignKey)databaseObject2).getForeignKeyColumns())) && StringUtils.trimToEmpty(((ForeignKey)databaseObject1).getPrimaryKeyColumns()).equals(StringUtils.trimToEmpty(((ForeignKey)databaseObject2).getPrimaryKeyColumns()));
  }
 else {
    String foreignKeyColumnsDB1=((ForeignKey)databaseObject1).getForeignKeyColumns();
    String foreignKeyColumnsDB2=((ForeignKey)databaseObject2).getForeignKeyColumns();
    String primaryKeyColumnsDB1=((ForeignKey)databaseObject1).getPrimaryKeyColumns();
    String primaryKeyColumnsDB2=((ForeignKey)databaseObject2).getPrimaryKeyColumns();
    if (foreignKeyColumnsDB1 == null || primaryKeyColumnsDB1 == null | foreignKeyColumnsDB2 == null || primaryKeyColumnsDB2 == null)     return false;
    columnsTheSame=foreignKeyColumnsDB1.equalsIgnoreCase(foreignKeyColumnsDB2) && primaryKeyColumnsDB1.equalsIgnoreCase(primaryKeyColumnsDB2);
  }
  return columnsTheSame && DatabaseObjectComparatorFactory.getInstance().isSameObject(thisForeignKey.getForeignKeyTable(),otherForeignKey.getForeignKeyTable(),accordingTo) && DatabaseObjectComparatorFactory.getInstance().isSameObject(thisForeignKey.getPrimaryKeyTable(),otherForeignKey.getPrimaryKeyTable(),accordingTo);
}
