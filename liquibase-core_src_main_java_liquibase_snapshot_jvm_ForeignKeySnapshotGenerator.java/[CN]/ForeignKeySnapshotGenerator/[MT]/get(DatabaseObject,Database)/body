{
  Schema schema;
  Table relation=null;
  if (container instanceof Schema) {
    schema=(Schema)container;
  }
 else   if (container instanceof Table) {
    relation=(Table)container;
    schema=relation.getSchema();
  }
 else {
    return new ForeignKey[0];
  }
  updateListeners("Reading foreign keys for " + database.toString() + " ...");
  List<ForeignKey> returnList=new ArrayList<ForeignKey>();
  ResultSet importedKeyMetadataResultSet=null;
  try {
    List<String> tables=new ArrayList<String>();
    if (relation == null) {
      tables.addAll(listAllTables(new CatalogAndSchema(schema.getCatalogName(),schema.getName()),database));
    }
 else {
      tables.add(relation.getName());
    }
    for (    String tableName : tables) {
      importedKeyMetadataResultSet=getMetaData(database).getImportedKeys(database.getJdbcCatalogName(schema),database.getJdbcSchemaName(schema),tableName);
      while (importedKeyMetadataResultSet.next()) {
        ForeignKey newFk=readForeignKey(importedKeyMetadataResultSet,database);
        if (newFk != null) {
          returnList.add(newFk);
        }
      }
    }
  }
 catch (  Exception e) {
    throw new DatabaseException(e);
  }
 finally {
    if (importedKeyMetadataResultSet != null) {
      try {
        importedKeyMetadataResultSet.close();
      }
 catch (      SQLException ignored) {
      }
    }
  }
  return returnList.toArray(new ForeignKey[returnList.size()]);
}
