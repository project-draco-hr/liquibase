{
  if (database instanceof InformixDatabase) {
    return new CreateViewGeneratorInformix().generateSql(statement,database,sqlGeneratorChain);
  }
  String createClause;
  List<Sql> sql=new ArrayList<Sql>();
  if (database instanceof FirebirdDatabase) {
    if (statement.isReplaceIfExists()) {
      createClause="RECREATE VIEW";
    }
 else {
      createClause="RECREATE VIEW";
    }
  }
 else   if (database instanceof SybaseASADatabase && statement.getSelectQuery().toLowerCase().startsWith("create view")) {
    return new Sql[]{new UnparsedSql(statement.getSelectQuery())};
  }
 else   if (database instanceof MSSQLDatabase) {
    if (statement.isReplaceIfExists()) {
      CatalogAndSchema schema=new CatalogAndSchema(statement.getCatalogName(),statement.getSchemaName()).customize(database);
      sql.add(new UnparsedSql("IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[" + schema.getSchemaName() + "].["+ statement.getViewName()+ "]'))\n"+ "    EXEC sp_executesql N'CREATE VIEW ["+ schema.getSchemaName()+ "].["+ statement.getViewName()+ "] AS SELECT ''This is a code stub which will be replaced by an Alter Statement'' as [code_stub]'"));
      createClause="ALTER VIEW";
    }
 else {
      createClause="CREATE VIEW";
    }
  }
 else   if (database instanceof PostgresDatabase) {
    if (statement.isReplaceIfExists()) {
      sql.add(new UnparsedSql("DROP VIEW IF EXISTS " + database.escapeViewName(statement.getCatalogName(),statement.getSchemaName(),statement.getViewName())));
    }
    createClause="CREATE VIEW";
  }
 else {
    createClause="CREATE " + (statement.isReplaceIfExists() ? "OR REPLACE " : "") + "VIEW";
  }
  sql.add(new UnparsedSql(createClause + " " + database.escapeViewName(statement.getCatalogName(),statement.getSchemaName(),statement.getViewName())+ " AS "+ statement.getSelectQuery(),getAffectedView(statement)));
  return sql.toArray(new Sql[sql.size()]);
}
