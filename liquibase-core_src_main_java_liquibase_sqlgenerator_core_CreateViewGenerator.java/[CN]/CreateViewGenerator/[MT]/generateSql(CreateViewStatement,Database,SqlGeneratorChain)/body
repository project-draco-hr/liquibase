{
  if (database instanceof InformixDatabase) {
    return new CreateViewGeneratorInformix().generateSql(statement,database,sqlGeneratorChain);
  }
  List<Sql> sql=new ArrayList<Sql>();
  StringClauses viewDefinition=SqlParser.parse(statement.getSelectQuery());
  if (!statement.isFullDefinition()) {
    viewDefinition.prepend("AS").prepend(database.escapeViewName(statement.getCatalogName(),statement.getSchemaName(),statement.getViewName())).prepend("VIEW").prepend("CREATE");
  }
  if (statement.isReplaceIfExists()) {
    if (database instanceof FirebirdDatabase) {
      viewDefinition.replaceIfExists("CREATE","RECREATE");
    }
 else     if (database instanceof SybaseASADatabase && statement.getSelectQuery().toLowerCase().startsWith("create view")) {
    }
 else     if (database instanceof MSSQLDatabase) {
      CatalogAndSchema schema=new CatalogAndSchema(statement.getCatalogName(),statement.getSchemaName()).customize(database);
      sql.add(new UnparsedSql("IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[" + schema.getSchemaName() + "].["+ statement.getViewName()+ "]'))\n"+ "    EXEC sp_executesql N'CREATE VIEW ["+ schema.getSchemaName()+ "].["+ statement.getViewName()+ "] AS SELECT ''This is a code stub which will be replaced by an Alter Statement'' as [code_stub]'"));
      viewDefinition.replaceIfExists("CREATE","ALTER");
    }
 else     if (database instanceof PostgresDatabase) {
      sql.add(new UnparsedSql("DROP VIEW IF EXISTS " + database.escapeViewName(statement.getCatalogName(),statement.getSchemaName(),statement.getViewName())));
    }
 else {
      if (!viewDefinition.contains("replace")) {
        viewDefinition.replace("CREATE","CREATE OR REPLACE");
      }
    }
  }
  sql.add(new UnparsedSql(viewDefinition.toString(),getAffectedView(statement)));
  return sql.toArray(new Sql[sql.size()]);
}
