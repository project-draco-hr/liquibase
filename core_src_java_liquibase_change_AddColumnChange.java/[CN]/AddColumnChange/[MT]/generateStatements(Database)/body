{
  List<SqlStatement> sql=new ArrayList<SqlStatement>();
  for (  ColumnConfig aColumn : getColumns()) {
    Set<ColumnConstraint> constraints=new HashSet<ColumnConstraint>();
    if (aColumn.getConstraints() != null) {
      if (aColumn.getConstraints().isNullable() != null && !aColumn.getConstraints().isNullable()) {
        constraints.add(new NotNullConstraint());
      }
      if (aColumn.getConstraints().isPrimaryKey() != null && aColumn.getConstraints().isPrimaryKey()) {
        constraints.add(new PrimaryKeyConstraint(aColumn.getConstraints().getPrimaryKeyName()));
      }
    }
    if (aColumn.isAutoIncrement() != null && aColumn.isAutoIncrement()) {
      constraints.add(new AutoIncrementConstraint(aColumn.getName()));
    }
    AddColumnStatement addColumnStatement=new AddColumnStatement(getSchemaName(),getTableName(),aColumn.getName(),aColumn.getType(),aColumn.getDefaultValueObject(),constraints.toArray(new ColumnConstraint[constraints.size()]));
    sql.add(addColumnStatement);
    if (database instanceof DB2Database) {
      sql.add(new ReorganizeTableStatement(getSchemaName(),getTableName()));
    }
    if (aColumn.getValueObject() != null) {
      UpdateStatement updateStatement=new UpdateStatement(getSchemaName(),getTableName());
      updateStatement.addNewColumnValue(aColumn.getName(),aColumn.getValueObject());
      sql.add(updateStatement);
    }
  }
  return sql.toArray(new SqlStatement[sql.size()]);
}
