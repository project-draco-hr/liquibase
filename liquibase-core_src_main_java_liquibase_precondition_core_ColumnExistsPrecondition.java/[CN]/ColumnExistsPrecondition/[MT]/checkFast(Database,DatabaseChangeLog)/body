{
  Statement statement=null;
  try {
    statement=((JdbcConnection)database.getConnection()).createStatement();
    String schemaName=getSchemaName();
    if (schemaName == null) {
      schemaName=database.getDefaultSchemaName();
    }
    String tableName=getTableName();
    String columnName=getColumnName();
    if (database instanceof PostgresDatabase) {
      String sql="SELECT 1 FROM pg_attribute a WHERE EXISTS (SELECT 1 FROM pg_class JOIN pg_catalog.pg_namespace ns ON ns.oid = pg_class.relnamespace WHERE lower(ns.nspname)='" + schemaName.toLowerCase() + "' AND lower(relname) = lower('"+ tableName+ "') AND pg_class.oid = a.attrelid) AND lower(a.attname) = lower('"+ columnName+ "');";
      try {
        ResultSet rs=statement.executeQuery(sql);
        try {
          if (rs.next()) {
            return;
          }
 else {
            throw new PreconditionFailedException(format("Column %s.%s.%s does not exist",schemaName,tableName,columnName),changeLog,this);
          }
        }
  finally {
          rs.close();
        }
      }
 catch (      SQLException e) {
        throw new PreconditionErrorException(e,changeLog,this);
      }
    }
    try {
      String sql=format("select t.%s from %s.%s t where 0=1",database.escapeColumnNameList(columnName),database.escapeObjectName(schemaName,Schema.class),database.escapeObjectName(tableName,Table.class));
      statement.executeQuery(sql).close();
      return;
    }
 catch (    SQLException e) {
      throw new PreconditionFailedException(format("Column %s.%s.%s does not exist",schemaName,tableName,columnName),changeLog,this);
    }
  }
 catch (  DatabaseException e) {
    throw new PreconditionErrorException(e,changeLog,this);
  }
 finally {
    JdbcUtils.closeStatement(statement);
  }
}
