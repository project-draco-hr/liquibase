{
  Class<? extends ChangeLogParser>[] classes;
  changelogParserComparator=new Comparator<ChangeLogParser>(){
    public int compare(    ChangeLogParser o1,    ChangeLogParser o2){
      return Integer.valueOf(o2.getPriority()).compareTo(o1.getPriority());
    }
  }
;
  parsers=new ArrayList<ChangeLogParser>();
  try {
    classes=ServiceLocator.getInstance().findClasses(ChangeLogParser.class);
    for (    Class<? extends ChangeLogParser> clazz : classes) {
      register((ChangeLogParser)clazz.getConstructor().newInstance());
    }
  }
 catch (  Exception e) {
    throw new UnexpectedLiquibaseException(e);
  }
}
