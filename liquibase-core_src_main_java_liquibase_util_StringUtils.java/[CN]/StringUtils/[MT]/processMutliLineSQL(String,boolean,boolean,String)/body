{
  if (endDelimiter != null && StringUtils.trimToNull(endDelimiter.toLowerCase().replace("\\r","").replace("\\n","").replace(";","").replace(" ","").replace("go","")) == null) {
    endDelimiter=null;
  }
  boolean useDefaultDelimiter=endDelimiter == null;
  StringClauses[] parsedList=SqlParser.parse(multiLineSQL,splitStatements,true,!stripComments,!splitStatements);
  List<String> returnArray=new ArrayList<String>();
  String currentString="";
  for (  StringClauses parsed : parsedList) {
    if (useDefaultDelimiter) {
      currentString=parsed.toString();
    }
 else {
      for (      Object piece : parsed.toArray(false)) {
        if (splitStatements && piece instanceof String && ((String)piece).matches(endDelimiter)) {
          currentString=StringUtils.trimToNull(currentString);
          if (currentString != null) {
            returnArray.add(currentString);
          }
          currentString="";
        }
 else {
          currentString+=piece;
        }
      }
    }
    if (useDefaultDelimiter) {
      currentString=StringUtils.trimToNull(currentString);
      if (currentString != null) {
        returnArray.add(currentString);
      }
    }
 else {
      currentString+=";";
    }
  }
  if (!useDefaultDelimiter) {
    currentString=StringUtils.trimToNull(currentString);
    if (currentString != null && !currentString.equals(";")) {
      returnArray.add(currentString);
    }
  }
  return returnArray.toArray(new String[returnArray.size()]);
}
