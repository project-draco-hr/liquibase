{
  StringClauses parsed=SqlParser.parse(multiLineSQL,true,!stripComments);
  List<String> returnArray=new ArrayList<String>();
  StringBuilder currentString=new StringBuilder();
  String previousPiece=null;
  boolean previousDelimiter=false;
  for (  Object piece : parsed.toArray(true)) {
    if (splitStatements && piece instanceof String && isDelimiter((String)piece,previousPiece,endDelimiter)) {
      String trimmedString=StringUtils.trimToNull(currentString.toString());
      if (trimmedString != null) {
        returnArray.add(trimmedString);
      }
      currentString=new StringBuilder();
      previousDelimiter=true;
    }
 else {
      if (!previousDelimiter || StringUtils.trimToNull((String)piece) != null) {
        if (!currentString.equals("") || StringUtils.trimToNull((String)piece) != null) {
          currentString.append(piece);
        }
      }
      previousDelimiter=false;
    }
    previousPiece=(String)piece;
  }
  String trimmedString=StringUtils.trimToNull(currentString.toString());
  if (trimmedString != null) {
    returnArray.add(trimmedString);
  }
  return returnArray.toArray(new String[returnArray.size()]);
}
