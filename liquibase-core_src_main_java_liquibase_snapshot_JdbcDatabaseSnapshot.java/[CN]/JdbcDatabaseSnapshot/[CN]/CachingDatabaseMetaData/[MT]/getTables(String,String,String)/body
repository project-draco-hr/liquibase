{
  return getResultSetCache("getTables").get(new ResultSetCache.SingleResultSetExtractor(database){
    @Override public ResultSetCache.RowData rowKeyParameters(    CachedRow row){
      return new ResultSetCache.RowData(row.getString("TABLE_CAT"),row.getString("TABLE_SCHEM"),database,row.getString("TABLE_NAME"));
    }
    @Override public ResultSetCache.RowData wantedKeyParameters(){
      return new ResultSetCache.RowData(catalogName,schemaName,database,table);
    }
    @Override public List<CachedRow> fastFetchQuery() throws SQLException, DatabaseException {
      CatalogAndSchema catalogAndSchema=new CatalogAndSchema(catalogName,schemaName).customize(database);
      if (database instanceof OracleDatabase) {
        return queryOracle(catalogAndSchema,table);
      }
      String catalog=((AbstractJdbcDatabase)database).getJdbcCatalogName(catalogAndSchema);
      String schema=((AbstractJdbcDatabase)database).getJdbcSchemaName(catalogAndSchema);
      return extract(databaseMetaData.getTables(catalog,schema,table,new String[]{"TABLE"}));
    }
    @Override public List<CachedRow> bulkFetchQuery() throws SQLException, DatabaseException {
      CatalogAndSchema catalogAndSchema=new CatalogAndSchema(catalogName,schemaName).customize(database);
      if (database instanceof OracleDatabase) {
        return queryOracle(catalogAndSchema,null);
      }
      String catalog=((AbstractJdbcDatabase)database).getJdbcCatalogName(catalogAndSchema);
      String schema=((AbstractJdbcDatabase)database).getJdbcSchemaName(catalogAndSchema);
      return extract(databaseMetaData.getTables(catalog,schema,null,new String[]{"TABLE"}));
    }
    private List<CachedRow> queryOracle(    CatalogAndSchema catalogAndSchema,    String tableName) throws DatabaseException, SQLException {
      String ownerName=database.correctObjectName(catalogAndSchema.getCatalogName(),Schema.class);
      String sql="SELECT null as TABLE_CAT, a.OWNER as TABLE_SCHEM, a.TABLE_NAME as TABLE_NAME, a.TEMPORARY as TEMPORARY, a.DURATION as DURATION, 'TABLE' as TABLE_TYPE, c.COMMENTS as REMARKS " + "from ALL_TABLES a " + "join ALL_TAB_COMMENTS c on a.TABLE_NAME=c.table_name and a.owner=c.owner "+ "WHERE a.OWNER='" + ownerName + "'";
      if (tableName != null) {
        sql+=" AND a.TABLE_NAME='" + tableName + "'";
      }
      return executeAndExtract(sql,database);
    }
  }
);
}
