{
  return getResultSetCache("getUniqueConstraints").get(new ResultSetCache.SingleResultSetExtractor(database){
    @Override public ResultSetCache.RowData rowKeyParameters(    CachedRow row){
      return new ResultSetCache.RowData(row.getString("TABLE_CAT"),row.getString("TABLE_SCHEM"),database,row.getString("TABLE_NAME"));
    }
    @Override public ResultSetCache.RowData wantedKeyParameters(){
      return new ResultSetCache.RowData(catalogName,schemaName,database,tableName);
    }
    @Override public List<CachedRow> fastFetchQuery() throws SQLException, DatabaseException {
      CatalogAndSchema catalogAndSchema=database.correctSchema(new CatalogAndSchema(catalogName,schemaName));
      return executeAndExtract(createSql(((AbstractJdbcDatabase)database).getJdbcCatalogName(catalogAndSchema),((AbstractJdbcDatabase)database).getJdbcSchemaName(catalogAndSchema),tableName),JdbcDatabaseSnapshot.this.getDatabase());
    }
    @Override public List<CachedRow> bulkFetchQuery() throws SQLException, DatabaseException {
      CatalogAndSchema catalogAndSchema=database.correctSchema(new CatalogAndSchema(catalogName,schemaName));
      return executeAndExtract(createSql(((AbstractJdbcDatabase)database).getJdbcCatalogName(catalogAndSchema),((AbstractJdbcDatabase)database).getJdbcSchemaName(catalogAndSchema),null),JdbcDatabaseSnapshot.this.getDatabase());
    }
    private String createSql(    String catalogName,    String schemaName,    String tableName) throws SQLException {
      Database database=JdbcDatabaseSnapshot.this.getDatabase();
      String sql;
      if (database instanceof MySQLDatabase || database instanceof HsqlDatabase) {
        sql="select CONSTRAINT_NAME, TABLE_NAME " + "from " + database.getSystemSchema() + ".table_constraints "+ "where constraint_schema='"+ database.correctObjectName(catalogName,Catalog.class)+ "' "+ "and constraint_type='UNIQUE'";
        if (tableName != null) {
          sql+=" and table_name='" + database.correctObjectName(tableName,Table.class) + "'";
        }
      }
 else       if (database instanceof PostgresDatabase) {
        sql="select CONSTRAINT_NAME, TABLE_NAME " + "from " + database.getSystemSchema() + ".table_constraints "+ "where constraint_catalog='"+ database.correctObjectName(catalogName,Catalog.class)+ "' "+ "and constraint_schema='"+ database.correctObjectName(schemaName,Schema.class)+ "' "+ "and constraint_type='UNIQUE'";
        if (tableName != null) {
          sql+=" and table_name='" + database.correctObjectName(tableName,Table.class) + "'";
        }
      }
 else       if (database instanceof MSSQLDatabase) {
        sql="select CONSTRAINT_NAME, TABLE_NAME from INFORMATION_SCHEMA.TABLE_CONSTRAINTS " + "where CONSTRAINT_TYPE = 'Unique' " + "and CONSTRAINT_SCHEMA='" + database.correctObjectName(schemaName,Schema.class) + "'";
        if (tableName != null) {
          sql+=" and TABLE_NAME='" + database.correctObjectName(tableName,Table.class) + "'";
        }
      }
 else       if (database instanceof OracleDatabase) {
        CatalogAndSchema catalogAndSchema=database.correctSchema(new CatalogAndSchema(catalogName,schemaName));
        String ownerName=database.correctObjectName(((OracleDatabase)database).getJdbcSchemaName(catalogAndSchema),Catalog.class);
        sql="select uc.constraint_name, uc.table_name,uc.status,uc.deferrable,uc.deferred,ui.tablespace_name from all_constraints uc, all_indexes ui " + "where uc.constraint_type='U' and uc.index_name = ui.index_name " + "and uc.owner = '" + ownerName + "' "+ "and ui.table_owner = '"+ ownerName+ "' ";
        if (tableName != null) {
          sql+=" and uc.table_name = '" + database.correctObjectName(tableName,Table.class) + "'";
        }
      }
 else       if (database instanceof DB2Database) {
        sql="select distinct k.constname as constraint_name, t.tabname as TABLE_NAME from syscat.keycoluse k, syscat.tabconst t " + "where k.constname = t.constname " + "and t.tabschema = '" + database.correctObjectName(catalogName,Catalog.class) + "' "+ "and t.type='U'";
        if (tableName != null) {
          sql+=" and t.tabname = '" + database.correctObjectName(tableName,Table.class) + "'";
        }
      }
 else       if (database instanceof FirebirdDatabase) {
        sql="SELECT RDB$INDICES.RDB$INDEX_NAME AS CONSTRAINT_NAME, RDB$INDICES.RDB$RELATION_NAME AS TABLE_NAME FROM RDB$INDICES " + "LEFT JOIN RDB$RELATION_CONSTRAINTS ON RDB$RELATION_CONSTRAINTS.RDB$INDEX_NAME = RDB$INDICES.RDB$INDEX_NAME " + "WHERE RDB$INDICES.RDB$UNIQUE_FLAG IS NOT NULL "+ "AND RDB$RELATION_CONSTRAINTS.RDB$CONSTRAINT_TYPE != 'PRIMARY KEY' "+ "AND NOT(RDB$INDICES.RDB$INDEX_NAME LIKE 'RDB$%')";
        if (tableName != null) {
          sql+=" AND RDB$INDICES.RDB$RELATION_NAME='" + database.correctObjectName(tableName,Table.class) + "'";
        }
      }
 else       if (database instanceof DerbyDatabase) {
        sql="select c.constraintname as CONSTRAINT_NAME, tablename AS TABLE_NAME " + "from sys.systables t, sys.sysconstraints c, sys.sysschemas s " + "where s.schemaname='" + database.correctObjectName(catalogName,Catalog.class) + "' "+ "and t.tableid = c.tableid "+ "and t.schemaid=s.schemaid "+ "and c.type = 'U'";
        if (tableName != null) {
          sql+=" AND t.tablename = '" + database.correctObjectName(tableName,Table.class) + "'";
        }
      }
 else       if (database instanceof InformixDatabase) {
        sql="select sysindexes.idxname, sysindexes.idxtype, systables.tabname " + "from sysindexes, systables " + "where sysindexes.tabid = systables.tabid "+ "and sysindexes.idxtype ='U'";
        if (tableName != null) {
          sql+=" AND systables.tabname = '" + database.correctObjectName(tableName,Table.class) + "'";
        }
      }
 else       if (database instanceof SybaseDatabase) {
        LogFactory.getLogger().warning("Finding unique constraints not currently supported for Sybase");
        return null;
      }
 else {
        sql="select CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME " + "from " + database.getSystemSchema() + ".constraints "+ "where constraint_schema='"+ database.correctObjectName(schemaName,Schema.class)+ "' "+ "and constraint_catalog='"+ database.correctObjectName(catalogName,Catalog.class)+ "' "+ "and constraint_type='UNIQUE'";
        if (tableName != null) {
          sql+=" and table_name='" + database.correctObjectName(tableName,Table.class) + "'";
        }
      }
      return sql;
    }
  }
);
}
