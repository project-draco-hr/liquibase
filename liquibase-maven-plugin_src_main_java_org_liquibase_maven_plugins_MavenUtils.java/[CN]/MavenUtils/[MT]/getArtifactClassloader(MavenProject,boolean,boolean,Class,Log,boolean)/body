{
  if (verbose) {
    log.info("Loading artfacts into URLClassLoader");
  }
  Set<URI> uris=new HashSet<URI>();
  Set dependencies=project.getArtifacts();
  if (dependencies != null && !dependencies.isEmpty()) {
    for (Iterator it=dependencies.iterator(); it.hasNext(); ) {
      addArtifact(uris,(Artifact)it.next(),log,verbose);
    }
  }
 else {
    log.info("there are no resolved artifacts for the Maven project.");
  }
  if (includeArtifact) {
    Artifact a=project.getArtifact();
    if (a.getFile() != null) {
      addArtifact(uris,a,log,verbose);
    }
 else {
      addFile(uris,new File(project.getBuild().getOutputDirectory()),log,verbose);
    }
  }
  if (includeTestOutputDirectory) {
    addFile(uris,new File(project.getBuild().getTestOutputDirectory()),log,verbose);
  }
  if (verbose) {
    log.info(LOG_SEPARATOR);
  }
  List<URI> uriList=new ArrayList<URI>(uris);
  URL[] urlArray=new URL[uris.size()];
  for (int i=0; i < uris.size(); i++) {
    urlArray[i]=uriList.get(i).toURL();
  }
  return new URLClassLoader(urlArray,clazz.getClassLoader());
}
