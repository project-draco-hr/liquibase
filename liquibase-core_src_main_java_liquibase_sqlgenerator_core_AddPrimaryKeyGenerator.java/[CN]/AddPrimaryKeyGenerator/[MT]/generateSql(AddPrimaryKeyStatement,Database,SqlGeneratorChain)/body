{
  String sql;
  if (statement.getConstraintName() == null || database instanceof MySQLDatabase || database instanceof SybaseASADatabase) {
    sql="ALTER TABLE " + database.escapeTableName(statement.getCatalogName(),statement.getSchemaName(),statement.getTableName()) + " ADD PRIMARY KEY ("+ database.escapeColumnNameList(statement.getColumnNames())+ ")";
  }
 else {
    sql="ALTER TABLE " + database.escapeTableName(statement.getCatalogName(),statement.getSchemaName(),statement.getTableName()) + " ADD CONSTRAINT "+ database.escapeConstraintName(statement.getConstraintName())+ " PRIMARY KEY";
    if (database instanceof MSSQLDatabase && !statement.isClustered()) {
      if (statement.isClustered()) {
        sql+=" CLUSTERED";
      }
 else {
        sql+=" NONCLUSTERED";
      }
    }
    sql+=" (" + database.escapeColumnNameList(statement.getColumnNames()) + ")";
  }
  if (StringUtils.trimToNull(statement.getTablespace()) != null && database.supportsTablespaces()) {
    if (database instanceof MSSQLDatabase) {
      sql+=" ON " + statement.getTablespace();
    }
 else     if (database instanceof DB2Database || database instanceof SybaseASADatabase) {
      ;
    }
 else {
      sql+=" USING INDEX TABLESPACE " + statement.getTablespace();
    }
  }
  if (database instanceof OracleDatabase && statement.getForIndexName() != null) {
    sql+=" USING INDEX " + database.escapeObjectName(statement.getForIndexCatalogName(),statement.getForIndexSchemaName(),statement.getForIndexName(),Index.class);
  }
  if (database instanceof PostgresDatabase && statement.isClustered() != null && statement.isClustered() && statement.getConstraintName() != null) {
    return new Sql[]{new UnparsedSql(sql,getAffectedPrimaryKey(statement)),new UnparsedSql("CLUSTER " + database.escapeTableName(statement.getCatalogName(),statement.getSchemaName(),statement.getTableName()) + " USING "+ database.escapeObjectName(statement.getConstraintName(),PrimaryKey.class))};
  }
 else {
    return new Sql[]{new UnparsedSql(sql,getAffectedPrimaryKey(statement))};
  }
}
