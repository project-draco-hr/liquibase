{
  List<String> sql=new ArrayList<String>();
  String alterTable="ALTER TABLE " + getTableName() + " ADD "+ getColumn().getName()+ " "+ database.getColumnType(getColumn());
  if (column.getConstraints() != null && column.getConstraints().isNullable() != null && !column.getConstraints().isNullable()) {
    alterTable+=" NOT NULL";
  }
 else {
    alterTable+=" NULL";
  }
  sql.add(alterTable);
  if (database instanceof DB2Database) {
    sql.add("CALL SYSPROC.ADMIN_CMD ('REORG TABLE " + getTableName() + "')");
  }
  if (getColumn().getDefaultValue() != null || getColumn().getDefaultValueBoolean() != null || getColumn().getDefaultValueDate() != null || getColumn().getDefaultValueNumeric() != null) {
    AddDefaultValueChange change=new AddDefaultValueChange();
    change.setTableName(getTableName());
    change.setColumnName(getColumn().getName());
    change.setDefaultValue(getColumn().getDefaultValue());
    change.setDefaultValueNumeric(getColumn().getDefaultValueNumeric());
    change.setDefaultValueDate(getColumn().getDefaultValueDate());
    change.setDefaultValueBoolean(getColumn().getDefaultValueBoolean());
    sql.addAll(Arrays.asList(change.generateStatements(database)));
  }
  if (getColumn().getConstraints() != null) {
    if (getColumn().getConstraints().isPrimaryKey() != null && getColumn().getConstraints().isPrimaryKey()) {
      AddPrimaryKeyChange change=new AddPrimaryKeyChange();
      change.setTableName(getTableName());
      change.setColumnNames(getColumn().getName());
      sql.addAll(Arrays.asList(change.generateStatements(database)));
    }
    if (getColumn().getConstraints().isNullable() != null && !getColumn().getConstraints().isNullable()) {
      AddNotNullConstraintChange change=new AddNotNullConstraintChange();
      change.setTableName(getTableName());
      change.setColumnName(getColumn().getName());
      change.setColumnDataType(getColumn().getType());
      sql.addAll(Arrays.asList(change.generateStatements(database)));
    }
  }
  return sql.toArray(new String[sql.size()]);
}
