{
  String shouldRunProperty=System.getProperty(Migrator.SHOULD_RUN_SYSTEM_PROPERTY);
  if (shouldRunProperty != null && !Boolean.valueOf(shouldRunProperty)) {
    log("Migrator did not run because '" + Migrator.SHOULD_RUN_SYSTEM_PROPERTY + "' system property was set to false");
    return;
  }
  Migrator migrator=null;
  try {
    migrator=createMigrator();
    migrator.setContexts(getContexts());
    migrator.setMode(Migrator.EXECUTE_MODE);
    if (isPromptOnNonLocalDatabase() && !migrator.isSaveToRunMigration()) {
      if (JOptionPane.showConfirmDialog(null,"You are running a database refactoring against a non-local database.\n" + "Database URL is: " + migrator.getDatabase().getConnectionURL() + "\n"+ "Username is: "+ migrator.getDatabase().getConnectionUsername()+ "\n\n"+ "Area you sure you want to do this?","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE) == JOptionPane.NO_OPTION) {
        throw new MigrationFailedException("Chose not to run against non-production database");
      }
    }
    if (isDropFirst()) {
      migrator.setShouldDropDatabaseObjectsFirst(isRebuildDatabase());
    }
    migrator.migrate();
  }
 catch (  Exception e) {
    throw new BuildException(e);
  }
 finally {
    if (migrator != null && migrator.getDatabase() != null && migrator.getDatabase().getConnection() != null) {
      try {
        migrator.getDatabase().getConnection().close();
      }
 catch (      SQLException e) {
        throw new BuildException(e);
      }
    }
  }
}
