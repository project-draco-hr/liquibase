{
  List<String> configs=commandLine.getArgList().subList(2,commandLine.getArgList().size());
  if (configs.size() == 0) {
    mainApp.fatal("No database configurations specified");
  }
  mainApp.out("Vagrant Machine Setup:");
  mainApp.out(StringUtils.indent("Local Path: " + vagrantInfo.boxDir.getAbsolutePath()));
  mainApp.out(StringUtils.indent("Config Name: " + vagrantInfo.configName));
  mainApp.out(StringUtils.indent("Database Config(s): " + StringUtils.join(configs,", ")));
  Collection<ConnectionSupplier> databases=null;
  try {
    databases=ConnectionConfigurationFactory.getInstance().findConfigurations(configs);
  }
 catch (  ConnectionConfigurationFactory.UnknownDatabaseException e) {
    mainApp.fatal(e);
  }
  for (  ConnectionSupplier connectionConfig : databases) {
    if (vagrantInfo.boxName == null) {
      vagrantInfo.boxName=connectionConfig.getVagrantBoxName();
    }
 else {
      if (!vagrantInfo.boxName.equals(connectionConfig.getVagrantBoxName())) {
        throw new UnexpectedLiquibaseException("Configuration " + connectionConfig + " needs vagrant box "+ connectionConfig.getVagrantBoxName()+ ", not "+ vagrantInfo.boxName+ " like other configurations");
      }
    }
    if (vagrantInfo.hostName == null) {
      vagrantInfo.hostName=connectionConfig.getHostname();
    }
 else {
      if (!vagrantInfo.hostName.equals(connectionConfig.getHostname())) {
        throw new UnexpectedLiquibaseException("Configuration " + connectionConfig + " does not match previously defined hostname "+ vagrantInfo.hostName);
      }
    }
  }
  mainApp.out(StringUtils.indent("Vagrant Box: " + vagrantInfo.boxName));
  mainApp.out(StringUtils.indent("Hostname: " + vagrantInfo.hostName));
  mainApp.out("");
  for (  ConnectionSupplier config : databases) {
    mainApp.out("Database Configuration For '" + config.toString() + "':");
    mainApp.out(StringUtils.indent(config.getDescription()));
    mainApp.out("");
  }
  writeVagrantFile(vagrantInfo);
  writePuppetFiles(vagrantInfo,databases);
  mainApp.out("Vagrant Box " + vagrantInfo.configName + " created. To start the box, run 'liquibase-sdk vagrant up "+ vagrantInfo.configName+ "'");
}
