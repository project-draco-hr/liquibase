{
  List<String> statements=new ArrayList<String>();
  String createTablesSQL="CREATE TABLE " + getNewTableName() + " AS SELECT DISTINCT "+ getExistingColumnName()+ " AS "+ getNewColumnName()+ " FROM "+ getExistingTableName()+ " WHERE "+ getExistingColumnName()+ " IS NOT NULL";
  if (database instanceof MSSQLDatabase) {
    createTablesSQL="SELECT DISTINCT " + getExistingColumnName() + " AS "+ getNewColumnName()+ " INTO "+ getNewTableName()+ " FROM "+ getExistingTableName()+ " WHERE "+ getExistingColumnName()+ " IS NOT NULL";
  }
  statements.add(createTablesSQL);
  AddNotNullConstraintChange addNotNullChange=new AddNotNullConstraintChange();
  addNotNullChange.setTableName(getNewTableName());
  addNotNullChange.setColumnName(getNewColumnName());
  addNotNullChange.setColumnDataType(getNewColumnDataType());
  statements.addAll(Arrays.asList(addNotNullChange.generateStatements(database)));
  AddPrimaryKeyChange addPKChange=new AddPrimaryKeyChange();
  addPKChange.setTableName(getNewTableName());
  addPKChange.setColumnNames(getNewColumnName());
  statements.addAll(Arrays.asList(addPKChange.generateStatements(database)));
  AddForeignKeyConstraintChange addFKChange=new AddForeignKeyConstraintChange();
  addFKChange.setBaseTableName(getExistingTableName());
  addFKChange.setBaseColumnNames(getExistingColumnName());
  addFKChange.setReferencedTableName(getNewTableName());
  addFKChange.setReferencedColumnNames(getNewColumnName());
  addFKChange.setConstraintName(getFinalConstraintName());
  statements.addAll(Arrays.asList(addFKChange.generateStatements(database)));
  return statements.toArray(new String[statements.size()]);
}
