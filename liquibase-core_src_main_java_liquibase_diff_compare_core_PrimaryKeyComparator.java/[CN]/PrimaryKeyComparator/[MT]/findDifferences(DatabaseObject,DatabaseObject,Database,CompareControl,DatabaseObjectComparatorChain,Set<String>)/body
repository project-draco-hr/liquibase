{
  exclude.add("name");
  exclude.add("backingIndex");
  exclude.add("columns");
  ObjectDifferences differences=chain.findDifferences(databaseObject1,databaseObject2,accordingTo,compareControl,exclude);
  differences.compare("columns",databaseObject1,databaseObject2,new ObjectDifferences.CompareFunction(){
    @Override public boolean areEqual(    Object referenceValue,    Object compareToValue){
      List<Column> referenceList=(List)referenceValue;
      List<Column> compareList=(List)compareToValue;
      if (referenceList.size() != compareList.size()) {
        return false;
      }
      for (int i=0; i < referenceList.size(); i++) {
        if (!StringUtils.trimToEmpty((referenceList.get(i)).getName()).equalsIgnoreCase(StringUtils.trimToEmpty(compareList.get(i).getName()))) {
          return false;
        }
      }
      return true;
    }
  }
);
  return differences;
}
