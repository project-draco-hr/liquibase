{
  for (  Column column : getMissingColumns()) {
    if (!shouldModifyColumn(column)) {
      continue;
    }
    AddColumnChange change=new AddColumnChange();
    change.setTableName(column.getTable().getName());
    change.setSchemaName(column.getTable().getSchema());
    ColumnConfig columnConfig=new ColumnConfig();
    columnConfig.setName(column.getName());
    String dataType=TypeConverterFactory.getInstance().findTypeConverter(database).convertToDatabaseTypeString(column,database);
    columnConfig.setType(dataType);
    Object defaultValue=column.getDefaultValue();
    if (defaultValue != null) {
      String defaultValueString=TypeConverterFactory.getInstance().findTypeConverter(database).getDataType(defaultValue).convertObjectToString(defaultValue,database);
      if (defaultValueString != null) {
        defaultValueString=defaultValueString.replaceFirst("'","").replaceAll("'$","");
      }
      columnConfig.setDefaultValue(defaultValueString);
    }
    if (column.getRemarks() != null) {
      columnConfig.setRemarks(column.getRemarks());
    }
    ConstraintsConfig constraintsConfig=columnConfig.getConstraints();
    if (column.isNullable() != null && !column.isNullable()) {
      if (constraintsConfig == null) {
        constraintsConfig=new ConstraintsConfig();
      }
      constraintsConfig.setNullable(false);
    }
    if (column.isUnique()) {
      if (constraintsConfig == null) {
        constraintsConfig=new ConstraintsConfig();
      }
      constraintsConfig.setUnique(true);
    }
    if (constraintsConfig != null) {
      columnConfig.setConstraints(constraintsConfig);
    }
    change.addColumn(columnConfig);
    changes.add(generateChangeSet(change));
  }
}
