{
  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
  DocumentBuilder documentBuilder=factory.newDocumentBuilder();
  documentBuilder.setEntityResolver(new LiquibaseEntityResolver());
  Document doc=documentBuilder.newDocument();
  Element changeLogElement=doc.createElementNS(XMLChangeLogSAXParser.getDatabaseChangeLogNameSpace(),"databaseChangeLog");
  changeLogElement.setAttribute("xmlns",XMLChangeLogSAXParser.getDatabaseChangeLogNameSpace());
  changeLogElement.setAttribute("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
  changeLogElement.setAttribute("xsi:schemaLocation","http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-" + XMLChangeLogSAXParser.getSchemaVersion() + ".xsd");
  doc.appendChild(changeLogElement);
  List<ChangeSet> changeSets=new ArrayList<ChangeSet>();
  addMissingTableChanges(changeSets,targetDatabase);
  addMissingColumnChanges(changeSets,targetDatabase);
  addChangedColumnChanges(changeSets);
  addMissingPrimaryKeyChanges(changeSets);
  addUnexpectedPrimaryKeyChanges(changeSets);
  addUnexpectedForeignKeyChanges(changeSets);
  addMissingUniqueConstraintChanges(changeSets);
  addMissingIndexChanges(changeSets);
  addUnexpectedUniqueConstraintChanges(changeSets);
  if (diffData) {
    addInsertDataChanges(changeSets,dataDir);
  }
  addMissingForeignKeyChanges(changeSets);
  addUnexpectedIndexChanges(changeSets);
  addUnexpectedColumnChanges(changeSets);
  addMissingSequenceChanges(changeSets);
  addUnexpectedSequenceChanges(changeSets);
  addMissingViewChanges(changeSets);
  addUnexpectedViewChanges(changeSets);
  addChangedViewChanges(changeSets);
  addUnexpectedTableChanges(changeSets);
  XMLChangeLogSerializer changeLogSerializer=new XMLChangeLogSerializer();
  changeLogSerializer.setCurrentChangeLogFileDOM(doc);
  for (  ChangeSet changeSet : changeSets) {
    doc.getDocumentElement().appendChild(changeLogSerializer.createNode(changeSet));
  }
  xmlWriter.write(doc,out);
  out.flush();
}
