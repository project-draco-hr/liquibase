{
  String methodName="set" + propertyName.substring(0,1).toUpperCase(Locale.ENGLISH) + propertyName.substring(1);
  Method[] methods;
  methods=methodCache.get(object.getClass());
  if (methods == null) {
    methods=object.getClass().getMethods();
    methodCache.put(object.getClass(),methods);
  }
  for (  Method method : methods) {
    if (method.getName().equals(methodName)) {
      Class<?> parameterType=method.getParameterTypes()[0];
      if (method.getParameterTypes().length == 1) {
        if (parameterType.equals(Boolean.class) || parameterType.equals(boolean.class)) {
          method.invoke(object,Boolean.valueOf(propertyValue));
          return;
        }
 else         if (parameterType.equals(String.class)) {
          method.invoke(object,propertyValue);
          return;
        }
 else         if (parameterType.equals(Integer.class)) {
          method.invoke(object,Integer.valueOf(propertyValue));
          return;
        }
 else         if (parameterType.equals(Long.class)) {
          method.invoke(object,Long.valueOf(propertyValue));
          return;
        }
 else         if (parameterType.equals(BigInteger.class)) {
          method.invoke(object,new BigInteger(propertyValue));
          return;
        }
 else         if (parameterType.equals(DatabaseFunction.class)) {
          method.invoke(object,new DatabaseFunction(propertyValue));
          return;
        }
      }
    }
  }
  throw new RuntimeException("Property '" + propertyName + "' not found on object type "+ object.getClass().getName());
}
