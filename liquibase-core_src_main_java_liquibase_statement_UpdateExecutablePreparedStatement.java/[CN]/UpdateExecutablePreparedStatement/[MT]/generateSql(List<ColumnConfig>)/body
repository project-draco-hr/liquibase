{
  StringBuilder sql=new StringBuilder("UPDATE ").append(database.escapeTableName(getCatalogName(),getSchemaName(),getTableName()));
  StringBuilder params=new StringBuilder(" SET ");
  for (  ColumnConfig column : getColumns()) {
    params.append(database.escapeColumnName(getCatalogName(),getSchemaName(),getTableName(),column.getName()));
    params.append(" = ");
    params.append("?, ");
    cols.add(column);
  }
  params.deleteCharAt(params.lastIndexOf(" "));
  params.deleteCharAt(params.lastIndexOf(","));
  sql.append(params);
  if (getWhereClause() != null) {
    String fixedWhereClause="WHERE " + getWhereClause().trim();
    Matcher matcher=Pattern.compile(":name|\\?|:value").matcher(fixedWhereClause);
    StringBuffer sb=new StringBuffer();
    Iterator<String> columnNameIter=getWhereColumnNames().iterator();
    Iterator<Object> paramIter=getWhereParameters().iterator();
    while (matcher.find()) {
      if (matcher.group().equals(":name")) {
        while (columnNameIter.hasNext()) {
          String columnName=columnNameIter.next();
          if (columnName == null) {
            continue;
          }
          matcher.appendReplacement(sb,Matcher.quoteReplacement(database.escapeObjectName(columnName,Column.class)));
          break;
        }
      }
 else       if (paramIter.hasNext()) {
        Object param=paramIter.next();
        matcher.appendReplacement(sb,Matcher.quoteReplacement(DataTypeFactory.getInstance().fromObject(param,database).objectToSql(param,database)));
      }
    }
    matcher.appendTail(sb);
    fixedWhereClause=sb.toString();
    sql.append(" ").append(fixedWhereClause);
  }
  return sql.toString();
}
