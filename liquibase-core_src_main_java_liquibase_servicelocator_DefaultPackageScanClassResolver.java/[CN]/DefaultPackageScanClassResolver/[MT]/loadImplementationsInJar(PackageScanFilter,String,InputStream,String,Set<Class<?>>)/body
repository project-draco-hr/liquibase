{
  JarInputStream jarStream=null;
  try {
    if (!classesByJarUrl.containsKey(urlPath)) {
      Set<String> names=new HashSet<String>();
      jarStream=new JarInputStream(stream);
      JarEntry entry;
      while ((entry=jarStream.getNextJarEntry()) != null) {
        String name=entry.getName();
        if (name != null) {
          name=name.trim();
          if (!entry.isDirectory() && name.endsWith(".class")) {
            names.add(name);
          }
        }
      }
      classesByJarUrl.put(urlPath,names);
    }
    for (    String name : classesByJarUrl.get(urlPath)) {
      if (name.startsWith(parent)) {
        addIfMatching(test,name,classes);
      }
    }
  }
 catch (  IOException ioe) {
    log.warning("Cannot search jar file '" + urlPath + "' for classes matching criteria: "+ test+ " due to an IOException: "+ ioe.getMessage(),ioe);
  }
 finally {
    try {
      if (jarStream != null) {
        jarStream.close();
      }
    }
 catch (    IOException ignore) {
    }
  }
}
