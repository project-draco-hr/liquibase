{
  String liquibaseSchema=null;
  liquibaseSchema=database.getLiquibaseSchemaName();
  UpdateStatement updateStatement=new UpdateStatement(liquibaseSchema,database.getDatabaseChangeLogTableName());
  updateStatement.addNewColumnValue("TAG",statement.getTag());
  if (database instanceof MySQLDatabase) {
    try {
      long version=Long.parseLong(database.getDatabaseProductVersion().substring(0,1));
      if (version < 5) {
        return new Sql[]{new UnparsedSql("UPDATE DATABASECHANGELOG C LEFT JOIN (SELECT MAX(DATEEXECUTED) as MAXDATE FROM (SELECT DATEEXECUTED FROM `DATABASECHANGELOG`) AS X) D ON C.DATEEXECUTED = D.MAXDATE SET C.TAG = '" + statement.getTag() + "' WHERE D.MAXDATE IS NOT NULL")};
      }
    }
 catch (    Throwable e) {
      ;
    }
    updateStatement.setWhereClause("DATEEXECUTED = (SELECT MAX(DATEEXECUTED) FROM (SELECT DATEEXECUTED FROM " + database.escapeTableName(liquibaseSchema,database.getDatabaseChangeLogTableName()) + ") AS X)");
  }
 else {
    updateStatement.setWhereClause("DATEEXECUTED = (SELECT MAX(DATEEXECUTED) FROM " + database.escapeTableName(liquibaseSchema,database.getDatabaseChangeLogTableName()) + ")");
  }
  return SqlGeneratorFactory.getInstance().generateSql(updateStatement,database);
}
