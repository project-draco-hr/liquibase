{
  getLog().info(MavenUtils.LOG_SEPARATOR);
  String shouldRunProperty=System.getProperty(Migrator.SHOULD_RUN_SYSTEM_PROPERTY);
  if (shouldRunProperty != null && !Boolean.valueOf(shouldRunProperty).booleanValue()) {
    getLog().warn("Migrator did not run because '" + Migrator.SHOULD_RUN_SYSTEM_PROPERTY + "' system property was set to false");
    return;
  }
  ClassLoader artifactClassLoader=getMavenArtifactClassLoader();
  configureFieldsAndValues(getFileOpener(artifactClassLoader));
  displayMojoSettings();
  checkRequiredParametersAreSpecified();
  Connection connection=null;
  try {
    connection=MavenUtils.getDatabaseConnection(artifactClassLoader,driver,url,username,password);
    Migrator migrator=createMigrator(getFileOpener(artifactClassLoader));
    configureMigrator(migrator,connection);
    getLog().info("Executing on Database: " + url);
    if (isPromptOnNonLocalDatabase() && !migrator.isSafeToRunMigration()) {
      if (migrator.swingPromptForNonLocalDatabase()) {
        throw new LiquibaseException("User decided not to run against non-local database");
      }
    }
    performLiquibaseTask(migrator);
  }
 catch (  LiquibaseException e) {
    releaseConnection(connection);
    throw new MojoFailureException(e.getMessage());
  }
  releaseConnection(connection);
  getLog().info(MavenUtils.LOG_SEPARATOR);
  getLog().info("");
}
