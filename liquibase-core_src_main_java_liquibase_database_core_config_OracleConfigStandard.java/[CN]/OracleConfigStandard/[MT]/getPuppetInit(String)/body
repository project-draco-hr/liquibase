{
  return "Package <| |> -> Oradb::Installdb <| |>\n" + "\n" + "oradb::installdb{ '" + getVersion() + "_Linux-x86-64':\n"+ "        version      => '"+ getVersion()+ "',\n"+ "        file         => 'linuxamd64_12c_database',\n"+ "        databaseType => 'SE',\n"+ "        oracleBase   => '"+ getOracleBase()+ "',\n"+ "        oracleHome   => '"+ getOracleHome()+ "',\n"+ "        user         => '"+ getInstallUsername()+ "',\n"+ "        group        => 'dba',\n"+ "        downloadDir  => '/install/oracle/',\n"+ "        puppetDownloadMntPoint  => '/install/oracle/'\n"+ "}\n"+ "\n"+ "oradb::database{ '"+ getSID()+ "':\n"+ "                  oracleBase              => '"+ getOracleBase()+ "',\n"+ "                  oracleHome              => '"+ getOracleHome()+ "',\n"+ "                  version                 => '"+ getShortVersion()+ "',\n"+ "                  user                    => '"+ getInstallUsername()+ "',\n"+ "                  group                   => 'dba',\n"+ "                  downloadDir             => '/install/oracle/',\n"+ "                  action                  => 'create',\n"+ "                  dbName                  => '"+ getSID()+ "',\n"+ "                  dbDomain                => '"+ getDatabaseDomain()+ "',\n"+ "                  sysPassword             => '"+ getSysPassword()+ "',\n"+ "                  systemPassword          => '"+ getSystemPassword()+ "',\n"+ "                  dataFileDestination     => '"+ getOracleBase()+ "/oradata',\n"+ "                  recoveryAreaDestination => '"+ getOracleBase()+ "/flash_recovery_area',\n"+ "                  characterSet            => '"+ getCharacterSet()+ "',\n"+ "                  nationalCharacterSet    => '"+ getNationalCharacterSet()+ "',\n"+ "                  initParams              => '"+ getInitParams()+ "',\n"+ "                  sampleSchema            => 'FALSE',\n"+ "                  memoryPercentage        => '"+ getMemoryPercentage()+ "',\n"+ "                  memoryTotal             => '"+ getMemoryTotal()+ "',\n"+ "                  databaseType            => \"MULTIPURPOSE\",\n"+ "                  require                 => Oradb::InstallDb['"+ getVersion()+ "_Linux-x86-64'],\n"+ "}\n"+ "\n"+ "oradb::listener{'start listener':\n"+ "        oracleBase   => '"+ getOracleBase()+ "',\n"+ "        oracleHome   => '"+ getOracleHome()+ "',\n"+ "        user         => '"+ getInstallUsername()+ "',\n"+ "        group        => 'dba',\n"+ "        action       => 'start',\n"+ "        require      => Oradb::Database['"+ getSID()+ "'],\n"+ "   }\n"+ "\n"+ "oradb::autostartdatabase{ 'autostart oracle':\n"+ "                   oracleHome              => '"+ getOracleHome()+ "',\n"+ "                   user                    => '"+ getInstallUsername()+ "',\n"+ "                   dbName                  => '"+ getSID()+ "',\n"+ "                   require                 => Oradb::Database['"+ getSID()+ "'],\n"+ "}\n"+ "file { '~/oracle-init.sh':\n"+ "    require      => Oradb::Autostartdatabase['autostart oracle'],\n"+ "    mode => '755',\n"+ "    content => \"#!/bin/sh\n"+ "\n"+ "export ORACLE_HOME="+ getOracleHome()+ ";\n"+ "export ORACLE_SID="+ getSID()+ ";\n"+ "echo \\\"create user "+ getDatabaseUsername()+ " identified by "+ getDatabasePassword()+ ";\n"+ "grant all privileges to "+ getDatabaseUsername()+ ";\n"+ "create user "+ getAlternateUsername()+ " identified by "+ getAlternateUserPassword()+ ";\n"+ "grant all privileges to "+ getAlternateUsername()+ ";\n"+ "create tablespace "+ getAlternateTablespace()+ " datafile '"+ getOracleBase()+ "/oradata/"+ getSID()+ "/"+ getAlternateTablespace()+ ".dbf' SIZE 5M autoextend on next 5M;    \\\" | "+ getOracleHome()+ "/bin/sqlplus / as sysdba; \n"+ "touch ~/database-init.ran;\n"+ "\",\n"+ "}\n"+ "\n"+ "exec { 'execute oracle setup scripts':\n"+ "    require      => [File['~/database-init.sh'], Oradb::Autostartdatabase['autostart oracle']],\n"+ "    path => ['/bin','/usr/bin'],\n"+ "    command => '~/database-init.sh',\n"+ "    user => '"+ getInstallUsername()+ "',\n"+ "    creates => '~/database-init.ran',\n"+ "}\n";
}
