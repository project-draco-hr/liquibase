{
  InsertExecutablePreparedStatement statement=new InsertExecutablePreparedStatement(new MockDatabase(),changeSet,"catalog","schema","table",columns);
  PreparedStatement stmt=createMock(PreparedStatement.class);
  final Capture<Integer> index=new Capture<Integer>();
  final Capture<Reader> reader=new Capture<Reader>();
  final Capture<Long> length=new Capture<Long>();
  stmt.setCharacterStream(capture(index),capture(reader),capture(length));
  expectLastCall().andAnswer(new IAnswer<Object>(){
    @Override public Object answer() throws Throwable {
      Assert.assertEquals(new Integer(1),index.getValue());
      Assert.assertNotNull(reader.getValue());
      Assert.assertTrue(reader.getValue() instanceof BufferedReader);
      Assert.assertEquals(new Long(39),length.getValue());
      return null;
    }
  }
);
  expect(stmt.execute()).andReturn(true);
  replay(stmt);
  JdbcConnection connection=createMock(JdbcConnection.class);
  expect(connection.prepareStatement("INSERT INTO schema.table(null) VALUES(?)")).andReturn(stmt);
  replay(connection);
  statement.execute(new PreparedStatementFactory(connection));
}
