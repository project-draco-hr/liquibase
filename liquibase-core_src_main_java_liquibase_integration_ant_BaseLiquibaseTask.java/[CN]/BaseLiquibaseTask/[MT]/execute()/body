{
  super.execute();
  log("Starting Liquibase.",Project.MSG_INFO);
  classLoader=getProject().createClassLoader(classpath);
  classLoader.setParent(this.getClass().getClassLoader());
  classLoader.setThreadContextLoader();
  validateParameters();
  Database database=null;
  try {
    ResourceAccessor resourceAccessor=createResourceAccessor(classLoader);
    database=createDatabaseFromType(databaseType);
    String changeLogFilePath=getChangeLogFilePath();
    liquibase=new Liquibase(changeLogFilePath,resourceAccessor,database);
    if (changeLogParameters != null) {
      changeLogParameters.applyParameters(liquibase);
    }
    if (isPromptOnNonLocalDatabase() && !liquibase.isSafeToRunUpdate() && UIFactory.getInstance().getFacade().promptForNonLocalDatabase(liquibase.getDatabase())) {
      log("User chose not to run task against a non-local database.",Project.MSG_INFO);
      return;
    }
    if (shouldRun()) {
      executeWithLiquibaseClassloader();
    }
  }
 catch (  LiquibaseException e) {
    throw new BuildException("Unable to initialize Liquibase. " + e.toString(),e);
  }
 finally {
    closeDatabase(database);
    classLoader.resetThreadContextLoader();
    classLoader.cleanup();
    classLoader=null;
  }
}
