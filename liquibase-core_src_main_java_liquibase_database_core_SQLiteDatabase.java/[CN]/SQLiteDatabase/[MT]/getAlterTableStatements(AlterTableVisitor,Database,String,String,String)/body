{
  List<SqlStatement> statements=new ArrayList<SqlStatement>();
  Table table=null;
  try {
    table=SnapshotGeneratorFactory.getInstance().createSnapshot((Table)new Table().setName(tableName).setSchema(new Schema(new Catalog(null),null)),database);
    List<ColumnConfig> createColumns=new ArrayList<ColumnConfig>();
    List<ColumnConfig> copyColumns=new ArrayList<ColumnConfig>();
    if (table != null) {
      for (      Column column : table.getColumns()) {
        ColumnConfig new_column=new ColumnConfig(column);
        if (alterTableVisitor.createThisColumn(new_column)) {
          createColumns.add(new_column);
        }
        ColumnConfig copy_column=new ColumnConfig(column);
        if (alterTableVisitor.copyThisColumn(copy_column)) {
          copyColumns.add(copy_column);
        }
      }
    }
    for (    ColumnConfig column : alterTableVisitor.getColumnsToAdd()) {
      if (alterTableVisitor.createThisColumn(column)) {
        createColumns.add(column);
      }
      if (alterTableVisitor.copyThisColumn(column)) {
        copyColumns.add(column);
      }
    }
    List<Index> newIndices=new ArrayList<Index>();
    for (    Index index : SnapshotGeneratorFactory.getInstance().createSnapshot(new CatalogAndSchema(catalogName,schemaName),database,new SnapshotControl(database,Index.class)).get(Index.class)) {
      if (index.getTable().getName().equalsIgnoreCase(tableName)) {
        if (alterTableVisitor.createThisIndex(index)) {
          newIndices.add(index);
        }
      }
    }
    String temp_table_name=tableName + "_temporary";
    statements.addAll(Arrays.asList(new RenameTableStatement(catalogName,schemaName,tableName,temp_table_name)));
    CreateTableChange ct_change_tmp=new CreateTableChange();
    ct_change_tmp.setSchemaName(schemaName);
    ct_change_tmp.setTableName(tableName);
    for (    ColumnConfig column : createColumns) {
      ct_change_tmp.addColumn(column);
    }
    statements.addAll(Arrays.asList(ct_change_tmp.generateStatements(database)));
    statements.addAll(Arrays.asList(new CopyRowsStatement(temp_table_name,tableName,copyColumns)));
    statements.addAll(Arrays.asList(new DropTableStatement(catalogName,schemaName,temp_table_name,false)));
    statements.addAll(Arrays.asList(new ReindexStatement(catalogName,schemaName,tableName)));
    for (    Index index_config : newIndices) {
      statements.addAll(Arrays.asList(new CreateIndexStatement(index_config.getName(),catalogName,schemaName,tableName,index_config.isUnique(),index_config.getAssociatedWithAsString(),index_config.getColumns().toArray(new String[index_config.getColumns().size()]))));
    }
    return statements;
  }
 catch (  InvalidExampleException e) {
    throw new UnexpectedLiquibaseException(e);
  }
}
