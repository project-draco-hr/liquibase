{
  Change change=new AbstractChange("test","Test Refactoring"){
    public SqlStatement[] generateStatements(    Database database){
      return new SqlStatement[]{new RawSqlStatement("GENERATED STATEMENT")};
    }
    public String getConfirmationMessage(){
      return null;
    }
    public Element createNode(    Document changeLogFileDOM){
      return null;
    }
    public Set<DatabaseObject> getAffectedDatabaseObjects(){
      return null;
    }
    public void validate(    Database database) throws InvalidChangeDefinitionException {
    }
  }
;
  StringWriter stringWriter=new StringWriter();
  OracleDatabase database=new OracleDatabase();
  change.saveStatements(database,stringWriter);
  assertEquals("GENERATED STATEMENT;" + StreamUtil.getLineSeparator() + StreamUtil.getLineSeparator(),stringWriter.getBuffer().toString());
}
