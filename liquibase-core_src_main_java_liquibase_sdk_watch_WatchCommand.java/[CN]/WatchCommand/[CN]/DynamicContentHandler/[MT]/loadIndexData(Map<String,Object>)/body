{
  try {
    DatabaseSnapshot snapshot=SnapshotGeneratorFactory.getInstance().createSnapshot(database.getDefaultSchema(),database,new SnapshotControl(database));
    StringBuilder buffer=new StringBuilder();
    Database database=snapshot.getDatabase();
    buffer.append("<div class='panel panel-primary'>");
    buffer.append("<div class='panel-heading'><h2 style='margin-top:0px; margin-bottom:0px'>").append(StringUtils.escapeHtml(database.getConnection().getURL())).append("</h2></div>\n");
    buffer.append("<div class='panel-body'>");
    buffer.append("<strong>Database type:</strong> ").append(StringUtils.escapeHtml(database.getDatabaseProductName())).append("<br>\n");
    buffer.append("<strong>Database version:</strong> ").append(StringUtils.escapeHtml(database.getDatabaseProductVersion())).append("<br>\n");
    buffer.append("<strong>Database user:</strong> ").append(StringUtils.escapeHtml(database.getConnection().getConnectionUserName())).append("<br>\n");
    Set<Schema> schemas=snapshot.get(Schema.class);
    if (schemas.size() > 1) {
      throw new UnexpectedLiquibaseException("Can only display one schema");
    }
    Schema schema=schemas.iterator().next();
    if (database.supportsSchemas()) {
      buffer.append("<strong>Catalog & Schema:</strong> ").append(schema.getCatalogName()).append(" / ").append(schema.getName()).append("<br>\n");
    }
 else {
      buffer.append("<strong>Catalog:</strong> ").append(schema.getCatalogName()).append("<br>\n");
    }
    buffer.append("</div>\n");
    buffer.append("</div>\n");
    SnapshotControl snapshotControl=snapshot.getSnapshotControl();
    List<Class> includedTypes=sort(snapshotControl.getTypesToInclude());
    StringBuilder catalogBuffer=new StringBuilder();
    StringBuilder detailsBuilder=new StringBuilder();
    catalogBuffer.append("<ul class='nav nav-tabs' id='tabs'>\n");
    catalogBuffer.append("<li><a href='#databasechangelog-tab' data-toggle='tab'>DatabaseChangeLog</a></li>\n");
    for (    Class type : includedTypes) {
      if (schema.getDatabaseObjects(type).size() > 0) {
        catalogBuffer.append("<li><a href='#").append(type.getSimpleName()).append("-tab' data-toggle='tab'>").append(type.getSimpleName()).append("(s)</a></li>\n");
      }
    }
    catalogBuffer.append("</ul>\n");
    catalogBuffer.append("<div class='tab-content' style='margin-bottom:20px;'>\n");
    catalogBuffer.append("<div class='tab-pane' style='border: 1px #ddd solid; border-top:none' id='databasechangelog-tab'>\n");
    writeDatabaseChangeLogTab(context);
    detailsBuilder.append(context.get("changeLogDetails"));
    catalogBuffer.append(context.get("changeLog"));
    catalogBuffer.append("</div>");
    for (    Class type : includedTypes) {
      List<? extends DatabaseObject> databaseObjects=sort(schema.getDatabaseObjects(type));
      if (databaseObjects.size() > 0) {
        catalogBuffer.append("<div class='tab-pane' style='border: 1px #ddd solid; border-top:none' id='").append(type.getSimpleName()).append("-tab'>\n");
        catalogBuffer.append("<div style='padding:10px; font-color:black'><ol>\n");
        StringBuilder typeBuffer=new StringBuilder();
        for (        DatabaseObject databaseObject : databaseObjects) {
          String id=databaseObject.getClass().getName() + "-" + databaseObject.getName();
          id=cleanHtmlId(id);
          typeBuffer.append("<li><a style='color:black' class='object-name' href='#" + id + "'>").append(StringUtils.escapeHtml(databaseObject.getName())).append("</a></li>\n");
          detailsBuilder.append(wrapDetails(id,type.getSimpleName() + " " + databaseObject.getName(),writeDatabaseObject(databaseObject,new HashSet<String>(),databaseObject.getName()))).append("\n");
        }
        catalogBuffer.append(StringUtils.indent(typeBuffer.toString(),4)).append("\n");
        catalogBuffer.append("</ol></div>\n");
        catalogBuffer.append("</div>\n");
      }
    }
    catalogBuffer.append("</div>\n");
    buffer.append(StringUtils.indent(catalogBuffer.toString(),4));
    context.put("snapshot",buffer.toString());
    context.put("details",detailsBuilder.toString());
  }
 catch (  Exception e) {
    throw new UnexpectedLiquibaseException(e);
  }
}
