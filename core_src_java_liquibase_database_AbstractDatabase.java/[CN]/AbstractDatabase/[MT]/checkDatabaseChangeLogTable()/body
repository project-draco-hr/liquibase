{
  DatabaseConnection connection=getConnection();
  ResultSet checkTableRS=null;
  ResultSet checkColumnsRS=null;
  List<SqlStatement> statementsToExecute=new ArrayList<SqlStatement>();
  boolean wroteToOutput=false;
  try {
    checkTableRS=connection.getMetaData().getTables(getCatalogName(),getSchemaName(),getDatabaseChangeLogTableName(),new String[]{"TABLE"});
    if (checkTableRS.next()) {
      changeLogTableExists=true;
      checkColumnsRS=connection.getMetaData().getColumns(getCatalogName(),getSchemaName(),getDatabaseChangeLogTableName(),null);
      boolean hasDescription=false;
      boolean hasComments=false;
      boolean hasTag=false;
      boolean hasLiquibase=false;
      while (checkColumnsRS.next()) {
        String columnName=checkColumnsRS.getString("COLUMN_NAME");
        if ("DESCRIPTION".equalsIgnoreCase(columnName)) {
          hasDescription=true;
        }
 else         if ("COMMENTS".equalsIgnoreCase(columnName)) {
          hasComments=true;
        }
 else         if ("TAG".equalsIgnoreCase(columnName)) {
          hasTag=true;
        }
 else         if ("LIQUIBASE".equalsIgnoreCase(columnName)) {
          hasLiquibase=true;
        }
      }
      if (!hasDescription) {
        statementsToExecute.add(new AddColumnStatement(null,getDatabaseChangeLogTableName(),"DESCRIPTION","VARCHAR(255)",null));
      }
      if (!hasTag) {
        statementsToExecute.add(new AddColumnStatement(null,getDatabaseChangeLogTableName(),"TAG","VARCHAR(255)",null));
      }
      if (!hasComments) {
        statementsToExecute.add(new AddColumnStatement(null,getDatabaseChangeLogTableName(),"COMMENTS","VARCHAR(255)",null));
      }
      if (!hasLiquibase) {
        statementsToExecute.add(new AddColumnStatement(null,getDatabaseChangeLogTableName(),"LIQUIBASE","VARCHAR(255)",null));
      }
    }
 else     if (!changeLogCreateAttempted) {
      changeLogCreateAttempted=true;
      getJdbcTemplate().comment("Create Database Change Log Table");
      SqlStatement createTableStatement=getCreateChangeLogSQL();
      if (!canCreateChangeLogTable()) {
        throw new JDBCException("Cannot create " + getDatabaseChangeLogTableName() + " table for your database.\n\n"+ "Please construct it manually using the following SQL as a base and re-run LiquiBase:\n\n"+ createTableStatement);
      }
      statementsToExecute.add(createTableStatement);
      log.info("Creating database history table with name: " + getDatabaseChangeLogTableName());
      changeLogTableExists=true;
    }
    for (    SqlStatement sql : statementsToExecute) {
      this.getJdbcTemplate().execute(sql);
      this.commit();
    }
  }
 catch (  SQLException e) {
    throw new JDBCException(e);
  }
 finally {
    if (checkTableRS != null) {
      try {
        checkTableRS.close();
      }
 catch (      SQLException e) {
        throw new JDBCException(e);
      }
    }
    if (checkColumnsRS != null) {
      try {
        checkColumnsRS.close();
      }
 catch (      SQLException e) {
        throw new JDBCException(e);
      }
    }
  }
}
