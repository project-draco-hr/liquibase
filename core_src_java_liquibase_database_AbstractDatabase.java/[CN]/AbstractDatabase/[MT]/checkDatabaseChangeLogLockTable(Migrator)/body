{
  DatabaseConnection connection=getConnection();
  ResultSet rs=null;
  try {
    rs=connection.getMetaData().getTables(getCatalogName(),getSchemaName(),getDatabaseChangeLogLockTableName(),new String[]{"TABLE"});
    if (!rs.next()) {
      if (!changeLogLockCreateAttempted) {
        changeLogLockCreateAttempted=true;
        SqlStatement createTableStatement=getCreateChangeLogLockSQL();
        if (migrator.getMode().equals(Migrator.Mode.EXECUTE_MODE)) {
          new JdbcTemplate(this).update(createTableStatement);
          connection.commit();
          log.info("Created database lock table with name: " + getDatabaseChangeLogLockTableName());
          changeLogLockTableExists=true;
        }
 else {
          if (!migrator.getMode().equals(Migrator.Mode.OUTPUT_FUTURE_ROLLBACK_SQL_MODE)) {
            if (!outputtedLockWarning) {
              migrator.getOutputSQLWriter().write(migrator.getDatabase().getLineComment() + "-----------------------------------------------------------------------------------------------" + StreamUtil.getLineSeparator());
              migrator.getOutputSQLWriter().write(migrator.getDatabase().getLineComment() + " " + getDatabaseChangeLogLockTableName()+ " table does not exist."+ StreamUtil.getLineSeparator());
              migrator.getOutputSQLWriter().write(migrator.getDatabase().getLineComment() + " Race conditions may cause a corrupted sql script." + StreamUtil.getLineSeparator());
              migrator.getOutputSQLWriter().write(migrator.getDatabase().getLineComment() + " Consider running: " + StreamUtil.getLineSeparator());
              migrator.getOutputSQLWriter().write(migrator.getDatabase().getLineComment() + " " + getCreateChangeLogLockSQL().getSqlStatement(this)+ ";"+ StreamUtil.getLineSeparator());
              migrator.getOutputSQLWriter().write(migrator.getDatabase().getLineComment() + " " + getChangeLogLockInsertSQL().getSqlStatement(this)+ ";"+ StreamUtil.getLineSeparator());
              migrator.getOutputSQLWriter().write(migrator.getDatabase().getLineComment() + "-----------------------------------------------------------------------------------------------" + StreamUtil.getLineSeparator()+ StreamUtil.getLineSeparator());
              outputtedLockWarning=true;
            }
            migrator.getOutputSQLWriter().append(createTableStatement.getSqlStatement(this));
            migrator.getOutputSQLWriter().append(";");
            migrator.getOutputSQLWriter().append(StreamUtil.getLineSeparator());
            migrator.getOutputSQLWriter().append(StreamUtil.getLineSeparator());
          }
        }
      }
    }
 else {
      changeLogLockTableExists=true;
    }
    rs.close();
    SqlStatement insertRowStatment=getChangeLogLockInsertSQL();
    if (changeLogLockTableExists) {
      RawSqlStatement selectStatement=new RawSqlStatement(("select count(*) from " + getDatabaseChangeLogLockTableName() + " where id=1".toUpperCase()));
      int rows=new JdbcTemplate(this).queryForInt(selectStatement);
      if (rows == 0) {
        if (migrator.getMode().equals(Migrator.Mode.EXECUTE_MODE)) {
          new JdbcTemplate(this).update(insertRowStatment);
          connection.commit();
          log.info("Inserted lock row into: " + getDatabaseChangeLogLockTableName());
        }
 else {
          migrator.getOutputSQLWriter().append(insertRowStatment.getSqlStatement(this));
          migrator.getOutputSQLWriter().append(";");
          migrator.getOutputSQLWriter().append(StreamUtil.getLineSeparator());
          migrator.getOutputSQLWriter().append(StreamUtil.getLineSeparator());
        }
        rs.close();
      }
    }
 else {
      if (migrator.getMode().equals(Migrator.Mode.EXECUTE_MODE)) {
        throw new JDBCException("Change log lock table does not exist");
      }
    }
  }
 catch (  SQLException e) {
    throw new JDBCException(e);
  }
 finally {
    if (rs != null) {
      try {
        rs.close();
      }
 catch (      SQLException e) {
        throw new JDBCException(e);
      }
    }
  }
}
