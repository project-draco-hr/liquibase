{
  boolean knowMustInsertIntoLockTable=false;
  Executor executor=ExecutorService.getExecutor(this);
  if (!doesChangeLogLockTableExist()) {
    if (!executor.executesStatements()) {
      if (((LoggingExecutor)executor).alreadyCreatedChangeLockTable()) {
        return;
      }
 else {
        ((LoggingExecutor)executor).setAlreadyCreatedChangeLockTable(true);
      }
    }
    SqlStatement createTableStatement=getCreateChangeLogLockSQL();
    executor.comment("Create Database Lock Table");
    executor.execute(createTableStatement,new ArrayList<SqlVisitor>());
    this.commit();
    log.finest("Created database lock table with name: " + escapeTableName(getDefaultSchemaName(),getDatabaseChangeLogLockTableName()));
    knowMustInsertIntoLockTable=true;
  }
  int rows=-1;
  if (!knowMustInsertIntoLockTable) {
    SqlStatement selectStatement=new SelectFromDatabaseChangeLogLockStatement("COUNT(*)");
    try {
      List<Map> returnList=executor.queryForList(selectStatement,new ArrayList<SqlVisitor>());
      if (returnList == null || returnList.size() == 0) {
        rows=0;
      }
 else {
        Map map=returnList.get(0);
        rows=Integer.parseInt(map.values().iterator().next().toString());
      }
    }
 catch (    JDBCException e) {
      throw e;
    }
  }
  if (knowMustInsertIntoLockTable || rows == 0) {
    executor.update(getChangeLogLockInsertSQL(),new ArrayList<SqlVisitor>());
    this.commit();
    log.fine("Inserted lock row into: " + escapeTableName(getDefaultSchemaName(),getDatabaseChangeLogLockTableName()));
  }
}
