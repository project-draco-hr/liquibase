{
  if (!migrator.getDatabase().doesChangeLogLockTableExist()) {
    if (migrator.getMode().equals(Migrator.Mode.EXECUTE_MODE) || migrator.getMode().equals(Migrator.Mode.EXECUTE_ROLLBACK_MODE)) {
      throw new LockException("Could not acquire lock, table does not exist");
    }
 else {
      return true;
    }
  }
  try {
    Boolean locked=null;
    try {
      locked=(Boolean)new JdbcTemplate(this).queryForObject(getSelectChangeLogLockSQL(),Boolean.class);
    }
 catch (    JDBCException e) {
      throw new LockException("Error checking database lock status",e);
    }
    if (locked) {
      return false;
    }
 else {
      UpdateStatement updateStatement=new UpdateStatement();
      updateStatement.setTableName(getDatabaseChangeLogLockTableName());
      updateStatement.addNewColumnValue("LOCKED",true,Types.BOOLEAN);
      updateStatement.addNewColumnValue("LOCKGRANTED",new Timestamp(new java.util.Date().getTime()),Types.TIMESTAMP);
      updateStatement.addNewColumnValue("LOCKEDBY",InetAddress.getLocalHost().getCanonicalHostName() + " (" + InetAddress.getLocalHost().getHostAddress()+ ")",Types.VARCHAR);
      updateStatement.setWhereClause("ID  = 1");
      if (new JdbcTemplate(this).update((PreparedSqlStatement)updateStatement) != 1) {
        throw new LockException("Did not update change log lock correctly");
      }
      getConnection().commit();
      log.info("Successfully acquired change log lock");
      return true;
    }
  }
 catch (  Exception e) {
    throw new LockException(e);
  }
}
