{
  AddColumnChange refactoring=new AddColumnChange();
  refactoring.setSchemaName("SCHEMA");
  refactoring.setTableName("TAB");
  AddColumnConfig column=new AddColumnConfig();
  column.setName("NEWCOL");
  column.setType("TYP");
  ConstraintsConfig constraints=new ConstraintsConfig();
  constraints.setNullable(Boolean.FALSE);
  column.setConstraints(constraints);
  refactoring.addColumn(column);
  column=new AddColumnConfig();
  column.setName("NEWCOL2");
  column.setType("TYP2");
  column.setConstraints(new ConstraintsConfig());
  refactoring.addColumn(column);
  testChangeOnAll(refactoring,new GenerateAllValidator(){
    public void validate(    SqlStatement[] sqlStatements,    Database database){
      if (database instanceof DB2Database) {
        assertEquals(4,sqlStatements.length);
        assertTrue(sqlStatements[0] instanceof AddColumnStatement);
        assertTrue(sqlStatements[1] instanceof ReorganizeTableStatement);
        assertTrue(sqlStatements[2] instanceof AddColumnStatement);
        assertTrue(sqlStatements[3] instanceof ReorganizeTableStatement);
      }
 else {
        assertEquals(2,sqlStatements.length);
        assertTrue(sqlStatements[0] instanceof AddColumnStatement);
        assertTrue(sqlStatements[1] instanceof AddColumnStatement);
      }
      AddColumnStatement firstAddColumnStatement=(AddColumnStatement)sqlStatements[0];
      AddColumnStatement secondAddColumnStatement=null;
      if (database instanceof DB2Database) {
        secondAddColumnStatement=(AddColumnStatement)sqlStatements[2];
      }
 else {
        secondAddColumnStatement=(AddColumnStatement)sqlStatements[1];
      }
      assertEquals("SCHEMA",firstAddColumnStatement.getSchemaName());
      assertEquals("TAB",firstAddColumnStatement.getTableName());
      assertEquals("NEWCOL",firstAddColumnStatement.getColumnName());
      assertEquals("TYP",firstAddColumnStatement.getColumnType());
      assertFalse(firstAddColumnStatement.isPrimaryKey());
      assertFalse(firstAddColumnStatement.isNullable());
      assertEquals("SCHEMA",secondAddColumnStatement.getSchemaName());
      assertEquals("TAB",secondAddColumnStatement.getTableName());
      assertEquals("NEWCOL2",secondAddColumnStatement.getColumnName());
      assertEquals("TYP2",secondAddColumnStatement.getColumnType());
      assertTrue(secondAddColumnStatement.isNullable());
    }
  }
);
}
