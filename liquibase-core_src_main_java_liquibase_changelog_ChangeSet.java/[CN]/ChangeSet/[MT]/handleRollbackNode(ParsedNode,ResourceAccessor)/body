{
  String changeSetId=rollbackNode.getChildValue(null,"changeSetId",String.class);
  if (changeSetId != null) {
    String changeSetAuthor=rollbackNode.getChildValue(null,"changeSetAuthor",String.class);
    String changeSetPath=rollbackNode.getChildValue(null,"changeSetPath",getFilePath());
    DatabaseChangeLog changeLog=DatabaseChangeLog.getRootChangeLog();
    if (changeLog == null) {
      changeLog=getChangeLog();
    }
    ChangeSet changeSet=changeLog.getChangeSet(changeSetPath,changeSetAuthor,changeSetId);
    if (changeSet == null) {
      throw new ParsedNodeException("Change set " + new ChangeSet(changeSetId,changeSetAuthor,false,false,changeSetPath,null,null,null).toString(false) + " does not exist");
    }
    for (    Change change : changeSet.getChanges()) {
      rollback.getChanges().add(change);
    }
    return;
  }
  boolean foundValue=false;
  for (  ParsedNode childNode : rollbackNode.getChildren()) {
    Change rollbackChange=toChange(childNode,resourceAccessor);
    if (rollbackChange != null) {
      addRollbackChange(rollbackChange);
      foundValue=true;
    }
  }
  Object value=rollbackNode.getValue();
  if (value != null) {
    if (value instanceof String) {
      String finalValue=StringUtils.trimToNull((String)value);
      if (finalValue != null) {
        String[] strings=StringUtils.processMutliLineSQL(finalValue,true,true,";");
        for (        String string : strings) {
          addRollbackChange(new RawSQLChange(string));
          foundValue=true;
        }
      }
    }
 else {
      throw new ParsedNodeException("Unexpected object: " + value.getClass().getName() + " '"+ value.toString()+ "'");
    }
  }
  if (!foundValue) {
    addRollbackChange(new EmptyChange());
  }
}
