{
  if (field.equals("id")) {
    return this.getId();
  }
  if (field.equals("author")) {
    return this.getAuthor();
  }
  if (field.equals("runAlways")) {
    if (this.isAlwaysRun()) {
      return true;
    }
 else {
      return null;
    }
  }
  if (field.equals("runOnChange")) {
    if (this.isRunOnChange()) {
      return true;
    }
 else {
      return null;
    }
  }
  if (field.equals("failOnError")) {
    return this.getFailOnError();
  }
  if (field.equals("context")) {
    if (!this.getContexts().isEmpty()) {
      return this.getContexts().toString().replaceFirst("^\\(","").replaceFirst("\\)$","");
    }
 else {
      return null;
    }
  }
  if (field.equals("labels")) {
    if (this.getLabels() != null && !this.getLabels().isEmpty()) {
      return StringUtils.join(this.getLabels().getLabels(),", ");
    }
 else {
      return null;
    }
  }
  if (field.equals("dbms")) {
    if (this.getDbmsSet() != null && this.getDbmsSet().size() > 0) {
      StringBuffer dbmsString=new StringBuffer();
      for (      String dbms : this.getDbmsSet()) {
        dbmsString.append(dbms).append(",");
      }
      return dbmsString.toString().replaceFirst(",$","");
    }
 else {
      return null;
    }
  }
  if (field.equals("comment")) {
    return StringUtils.trimToNull(this.getComments());
  }
  if (field.equals("objectQuotingStrategy")) {
    return this.getObjectQuotingStrategy().toString();
  }
  if (field.equals("changes")) {
    return getChanges();
  }
  if (field.equals("created")) {
    return getCreated();
  }
  if (field.equals("rollback")) {
    if (this.getRollBackChanges() != null && this.getRollBackChanges().length > 0) {
      return this.getRollBackChanges();
    }
 else {
      return null;
    }
  }
  throw new UnexpectedLiquibaseException("Unexpected field request on changeSet: " + field);
}
