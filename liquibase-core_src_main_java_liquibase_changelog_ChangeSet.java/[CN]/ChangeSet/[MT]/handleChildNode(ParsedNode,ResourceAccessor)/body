{
  if (child.getName().equals("rollback")) {
    handleRollbackNode(child,resourceAccessor);
  }
 else   if (child.getName().equals("validCheckSum")) {
    addValidCheckSum(child.getValue(String.class));
  }
 else   if (child.getName().equals("modifySql")) {
    String dbmsString=StringUtils.trimToNull(child.getChildValue(null,"dbms",String.class));
    String contextString=StringUtils.trimToNull(child.getChildValue(null,"context",String.class));
    boolean applyToRollback=child.getChildValue(null,"applyToRollback",false);
    Set<String> dbms=new HashSet<String>();
    if (dbmsString != null) {
      dbms.addAll(StringUtils.splitAndTrim(dbmsString,","));
    }
    ContextExpression context=null;
    if (contextString != null) {
      context=new ContextExpression(contextString);
    }
    List<ParsedNode> potentialVisitors=new ArrayList<ParsedNode>(child.getChildren());
    Object childValue=child.getValue();
    if (childValue instanceof ParsedNode) {
      potentialVisitors.add(child);
    }
 else     if (childValue instanceof Collection) {
      for (      Object nested : (Collection)childValue) {
        if (nested instanceof ParsedNode) {
          potentialVisitors.add((ParsedNode)nested);
        }
      }
    }
    for (    ParsedNode node : potentialVisitors) {
      SqlVisitor sqlVisitor=SqlVisitorFactory.getInstance().create(node.getName());
      if (sqlVisitor != null) {
        sqlVisitor.setApplyToRollback(applyToRollback);
        if (dbms.size() > 0) {
          sqlVisitor.setApplicableDbms(dbms);
        }
        sqlVisitor.setContexts(context);
        try {
          sqlVisitor.load(node,resourceAccessor);
        }
 catch (        ParsedNodeException e) {
          e.printStackTrace();
        }
        addSqlVisitor(sqlVisitor);
      }
    }
  }
 else   if (child.getName().equals("preConditions")) {
    this.preconditions=new PreconditionContainer();
    try {
      this.preconditions.load(child,resourceAccessor);
    }
 catch (    ParsedNodeException e) {
      e.printStackTrace();
    }
  }
 else {
    addChange(toChange(child,resourceAccessor));
  }
}
