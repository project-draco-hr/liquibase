{
  List<Sql> sql=new ArrayList<Sql>();
  SQLiteDatabase.AlterTableVisitor rename_alter_visitor=new SQLiteDatabase.AlterTableVisitor(){
    public ColumnConfig[] getColumnsToAdd(){
      return new ColumnConfig[]{new ColumnConfig().setName(statement.getColumnName()).setType(statement.getColumnType()).setAutoIncrement(statement.isAutoIncrement())};
    }
    public boolean copyThisColumn(    ColumnConfig column){
      return !column.getName().equals(statement.getColumnName());
    }
    public boolean createThisColumn(    ColumnConfig column){
      return true;
    }
    public boolean createThisIndex(    Index index){
      return true;
    }
  }
;
  try {
    List<SqlStatement> alterTableStatements=SQLiteDatabase.getAlterTableStatements(rename_alter_visitor,database,statement.getCatalogName(),statement.getSchemaName(),statement.getTableName());
    sql.addAll(Arrays.asList(SqlGeneratorFactory.getInstance().generateSql(alterTableStatements.toArray(new SqlStatement[alterTableStatements.size()]),database)));
  }
 catch (  DatabaseException e) {
    System.err.println(e);
    e.printStackTrace();
  }
  return sql.toArray(new Sql[sql.size()]);
}
