{
  String preconditionName=preconditionMap.keySet().iterator().next();
  Precondition precondition=PreconditionFactory.getInstance().create(preconditionName);
  try {
    Object children=preconditionMap.get(preconditionName);
    if (children instanceof Map) {
      for (      Map.Entry<String,Object> param : ((Map<String,Object>)children).entrySet()) {
        if (precondition instanceof CustomPreconditionWrapper && param.getKey().equals("params")) {
          List<Map<String,Object>> params=(List<Map<String,Object>>)param.getValue();
          for (          Map paramMap : params) {
            paramMap=(Map<String,Object>)paramMap.get("param");
            ((CustomPreconditionWrapper)precondition).setParam(paramMap.get("name").toString(),paramMap.get("value").toString());
          }
        }
 else {
          ObjectUtil.setProperty(precondition,param.getKey(),param.getValue().toString());
        }
      }
    }
 else {
      for (      Map<String,Object> child : (Collection<Map<String,Object>>)children) {
        ((PreconditionLogic)precondition).addNestedPrecondition(parsePrecondition(child));
      }
    }
  }
 catch (  Throwable e) {
    throw new ChangeLogParseException("Error parsing precondition '" + preconditionName + "'",e);
  }
  return precondition;
}
