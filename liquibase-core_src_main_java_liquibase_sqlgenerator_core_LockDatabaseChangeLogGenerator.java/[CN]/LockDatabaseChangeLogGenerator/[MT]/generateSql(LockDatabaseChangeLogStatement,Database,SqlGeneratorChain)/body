{
  String liquibaseSchema=database.getLiquibaseSchemaName();
  String liquibaseCatalog=database.getLiquibaseCatalogName();
  InetAddress localHost;
  try {
    localHost=NetUtil.getLocalHost();
  }
 catch (  Exception e) {
    throw new UnexpectedLiquibaseException(e);
  }
  UpdateStatement updateStatement=new UpdateStatement(liquibaseCatalog,liquibaseSchema,database.getDatabaseChangeLogLockTableName());
  updateStatement.addNewColumnValue("LOCKED",true);
  updateStatement.addNewColumnValue("LOCKGRANTED",new Timestamp(new java.util.Date().getTime()));
  updateStatement.addNewColumnValue("LOCKEDBY",localHost.getHostName() + " (" + localHost.getHostAddress()+ ")");
  updateStatement.setWhereClause(database.escapeColumnName(liquibaseCatalog,liquibaseSchema,database.getDatabaseChangeLogTableName(),"ID") + " = 1 AND " + database.escapeColumnName(liquibaseCatalog,liquibaseSchema,database.getDatabaseChangeLogTableName(),"LOCKED")+ " = "+ DataTypeFactory.getInstance().fromDescription("boolean").objectToString(false,database));
  return SqlGeneratorFactory.getInstance().generateSql(updateStatement,database);
}
