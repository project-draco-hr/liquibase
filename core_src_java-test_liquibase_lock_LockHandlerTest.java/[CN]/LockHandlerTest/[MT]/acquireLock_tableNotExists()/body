{
  Database database=createMock(Database.class);
  JdbcTemplate template=createMock(JdbcTemplate.class);
  RawSqlStatement selectLockStatement=new RawSqlStatement("SELECT LOCK");
  expect(database.getJdbcTemplate()).andReturn(template).anyTimes();
  expect(database.getSelectChangeLogLockSQL()).andReturn(selectLockStatement);
  expect(database.getDefaultSchemaName()).andReturn("DEF");
  expect(database.getDatabaseChangeLogLockTableName()).andReturn("LOCK_TAB");
  template.comment("Lock Database");
  expectLastCall();
  expect(template.queryForObject(eq(selectLockStatement),eq(Boolean.class),isA(List.class))).andReturn(Boolean.FALSE);
  database.checkDatabaseChangeLogLockTable();
  expectLastCall();
  expect(template.update(isA(UpdateStatement.class),isA(List.class))).andReturn(1);
  database.commit();
  expectLastCall();
  replay(database);
  replay(template);
  LockHandler handler=LockHandler.getInstance(database);
  assertTrue(handler.acquireLock());
  verify(database);
  verify(template);
}
