{
  Database database=createMock(Database.class);
  JdbcTemplate template=createMock(JdbcTemplate.class);
  expect(database.getJdbcTemplate()).andReturn(template).anyTimes();
  expect(database.doesChangeLogLockTableExist()).andReturn(true);
  expect(database.getDefaultSchemaName()).andReturn("default_schema");
  expect(database.getDatabaseChangeLogLockTableName()).andReturn("lock_table");
  expectLastCall();
  expect(database.escapeTableName("default_schema","lock_table")).andReturn("default_schema.lock_table");
  List<Map> locksList=new ArrayList<Map>();
  expect(template.queryForList(isA(SqlStatement.class),isA(List.class))).andReturn(locksList);
  replay(database);
  replay(template);
  LockHandler handler=LockHandler.getInstance(database);
  DatabaseChangeLogLock[] locks=handler.listLocks();
  assertEquals(0,locks.length);
  verify(database);
  verify(template);
}
