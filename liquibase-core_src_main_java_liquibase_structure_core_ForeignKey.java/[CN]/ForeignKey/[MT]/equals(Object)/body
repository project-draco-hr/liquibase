{
  if (this == o)   return true;
  if (o == null || getClass() != o.getClass())   return false;
  ForeignKey that=(ForeignKey)o;
  if (getForeignKeyColumns() == null) {
    return this.getName().equalsIgnoreCase(that.getName());
  }
  StringUtils.StringUtilsFormatter formatter=new StringUtils.StringUtilsFormatter<Column>(){
    @Override public String toString(    Column obj){
      return obj.toString(false);
    }
  }
;
  return (StringUtils.join(getForeignKeyColumns(),",",formatter).equalsIgnoreCase(StringUtils.join(that.getForeignKeyColumns(),",",formatter)) && (getForeignKeyTable() != null && that.getForeignKeyTable() != null && getForeignKeyTable().equals(that.getForeignKeyTable())) && (StringUtils.join(getPrimaryKeyColumns(),",",formatter).equalsIgnoreCase(StringUtils.join(that.getPrimaryKeyColumns(),",",formatter)))&& (getPrimaryKeyTable() != null && that.getPrimaryKeyTable() != null && getPrimaryKeyTable().equals(that.getPrimaryKeyTable())));
}
