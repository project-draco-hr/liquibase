{
  DataType returnTypeName=null;
  if (dataTypeName.equalsIgnoreCase("BIGINT")) {
    returnTypeName=getBigIntType();
  }
 else   if (dataTypeName.equalsIgnoreCase("NUMBER")) {
    returnTypeName=getNumberType();
  }
 else   if (dataTypeName.equalsIgnoreCase("BLOB")) {
    returnTypeName=getBlobType();
  }
 else   if (dataTypeName.equalsIgnoreCase("BOOLEAN")) {
    returnTypeName=getBooleanType();
  }
 else   if (dataTypeName.equalsIgnoreCase("CHAR")) {
    returnTypeName=getCharType();
  }
 else   if (dataTypeName.equalsIgnoreCase("CLOB")) {
    returnTypeName=getClobType();
  }
 else   if (dataTypeName.equalsIgnoreCase("CURRENCY")) {
    returnTypeName=getCurrencyType();
  }
 else   if (dataTypeName.equalsIgnoreCase("DATE") || dataTypeName.equalsIgnoreCase(getDateType().getDataTypeName())) {
    returnTypeName=getDateType();
  }
 else   if (dataTypeName.equalsIgnoreCase("DATETIME") || dataTypeName.equalsIgnoreCase(getDateTimeType().getDataTypeName())) {
    returnTypeName=getDateTimeType();
  }
 else   if (dataTypeName.equalsIgnoreCase("DOUBLE")) {
    returnTypeName=getDoubleType();
  }
 else   if (dataTypeName.equalsIgnoreCase("FLOAT")) {
    returnTypeName=getFloatType();
  }
 else   if (dataTypeName.equalsIgnoreCase("INT")) {
    returnTypeName=getIntType();
  }
 else   if (dataTypeName.equalsIgnoreCase("INTEGER")) {
    returnTypeName=getIntType();
  }
 else   if (dataTypeName.equalsIgnoreCase("LONGVARBINARY")) {
    returnTypeName=getBlobType();
  }
 else   if (dataTypeName.equalsIgnoreCase("LONGVARCHAR")) {
    returnTypeName=getClobType();
  }
 else   if (dataTypeName.equalsIgnoreCase("SMALLINT")) {
    returnTypeName=getSmallIntType();
  }
 else   if (dataTypeName.equalsIgnoreCase("TEXT")) {
    returnTypeName=getClobType();
  }
 else   if (dataTypeName.equalsIgnoreCase("TIME") || dataTypeName.equalsIgnoreCase(getTimeType().getDataTypeName())) {
    returnTypeName=getTimeType();
  }
 else   if (dataTypeName.toUpperCase().contains("TIMESTAMP")) {
    returnTypeName=getDateTimeType();
  }
 else   if (dataTypeName.equalsIgnoreCase("TINYINT")) {
    returnTypeName=getTinyIntType();
  }
 else   if (dataTypeName.equalsIgnoreCase("UUID")) {
    returnTypeName=getUUIDType();
  }
 else   if (dataTypeName.equalsIgnoreCase("VARCHAR")) {
    returnTypeName=getVarcharType();
  }
 else   if (dataTypeName.equalsIgnoreCase("NVARCHAR")) {
    returnTypeName=getNVarcharType();
  }
 else {
    if (columnTypeString.startsWith("java.sql.Types")) {
      returnTypeName=getTypeFromMetaData(dataTypeName);
    }
 else {
      return new CustomType(columnTypeString,0,2);
    }
  }
  if (returnTypeName == null) {
    throw new UnexpectedLiquibaseException("Could not determine " + dataTypeName + " for "+ this.getClass().getName());
  }
  addPrecisionToType(precision,returnTypeName);
  return returnTypeName;
}
