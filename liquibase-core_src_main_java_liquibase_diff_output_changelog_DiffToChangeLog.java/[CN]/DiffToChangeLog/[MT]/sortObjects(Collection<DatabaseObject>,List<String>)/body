{
  if (dependencyOrder.size() > 0) {
    List<DatabaseObject> toSort=new ArrayList<DatabaseObject>();
    List<DatabaseObject> toNotSort=new ArrayList<DatabaseObject>();
    for (    DatabaseObject obj : missingObjects) {
      if (!(obj instanceof Column) && obj.getSchema() != null) {
        String name=obj.getSchema().getName() + "." + obj.getName();
        if (dependencyOrder.contains(name)) {
          toSort.add(obj);
        }
 else {
          toNotSort.add(obj);
        }
      }
 else {
        toNotSort.add(obj);
      }
    }
    Collections.sort(toSort,new Comparator<DatabaseObject>(){
      @Override public int compare(      DatabaseObject o1,      DatabaseObject o2){
        Integer o1Order=dependencyOrder.indexOf(o1.getSchema().getName() + "." + o1.getName());
        int o2Order=dependencyOrder.indexOf(o1.getSchema().getName() + "." + o2.getName());
        return o1Order.compareTo(o2Order);
      }
    }
);
    toSort.addAll(toNotSort);
    return toSort;
  }
  return null;
}
