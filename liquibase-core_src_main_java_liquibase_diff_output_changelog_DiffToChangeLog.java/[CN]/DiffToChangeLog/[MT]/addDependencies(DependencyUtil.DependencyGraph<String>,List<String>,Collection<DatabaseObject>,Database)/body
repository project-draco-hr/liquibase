{
  if (database instanceof DB2Database) {
    Executor executor=ExecutorService.getInstance().getExecutor(database);
    List<Map<String,?>> rs=executor.queryForList(new RawSqlStatement("select TABSCHEMA, TABNAME, BSCHEMA, BNAME from syscat.tabdep where (" + StringUtils.join(schemas," OR ",new StringUtils.StringUtilsFormatter<String>(){
      @Override public String toString(      String obj){
        return "TABSCHEMA='" + obj + "'";
      }
    }
) + ")"));
    for (    Map<String,?> row : rs) {
      String tabName=StringUtils.trimToNull((String)row.get("TABSCHEMA")) + "." + StringUtils.trimToNull((String)row.get("TABNAME"));
      String bName=StringUtils.trimToNull((String)row.get("BSCHEMA")) + "." + StringUtils.trimToNull((String)row.get("BNAME"));
      graph.add(bName,tabName);
    }
  }
 else   if (database instanceof MSSQLDatabase && database.getDatabaseMajorVersion() >= 9) {
    Executor executor=ExecutorService.getInstance().getExecutor(database);
    String sql="select object_schema_name(referencing_id) as referencing_schema_name, object_name(referencing_id) as referencing_name, object_name(referenced_id) as referenced_name, object_schema_name(referenced_id) as referenced_schema_name  from sys.sql_expression_dependencies depz where (" + StringUtils.join(schemas," OR ",new StringUtils.StringUtilsFormatter<String>(){
      @Override public String toString(      String obj){
        return "object_schema_name(referenced_id)='" + obj + "'";
      }
    }
) + ")";
    sql+=" UNION select object_schema_name(object_id) as referencing_schema_name, object_name(object_id) as referencing_name, object_name(parent_object_id) as referenced_name, object_schema_name(parent_object_id) as referenced_schema_name " + "from sys.objects " + "where parent_object_id > 0 "+ "and is_ms_shipped=0 "+ "and (" + StringUtils.join(schemas," OR ",new StringUtils.StringUtilsFormatter<String>(){
      @Override public String toString(      String obj){
        return "object_schema_name(object_id)='" + obj + "'";
      }
    }
) + ")";
    sql+=" UNION select object_schema_name(fk.object_id) as referencing_schema_name, fk.name as referencing_name, i.name as referenced_name, object_schema_name(i.object_id) as referenced_schema_name " + "from sys.foreign_keys fk " + "join sys.indexes i on fk.referenced_object_id=i.object_id and fk.key_index_id=i.index_id "+ "where fk.is_ms_shipped=0 "+ "and (" + StringUtils.join(schemas," OR ",new StringUtils.StringUtilsFormatter<String>(){
      @Override public String toString(      String obj){
        return "object_schema_name(fk.object_id)='" + obj + "'";
      }
    }
) + ")";
    sql+=" UNION select object_schema_name(i.object_id) as referencing_schema_name, object_name(i.object_id) as referencing_name, s.name as referenced_name, null as referenced_schema_name " + "from sys.indexes i " + "join sys.partition_schemes s on i.data_space_id = s.data_space_id";
    sql+=" UNION select null as referencing_schema_name, s.name as referencing_name, f.name as referenced_name, null as referenced_schema_name from sys.partition_functions f " + "join sys.partition_schemes s on s.function_id=f.function_id";
    sql+=" UNION select select null as referencing_schema_name, s.name as referencing_name, fg.name, null as referenced_schema_name from sys.partition_schemes s " + "join sys.destination_data_spaces ds on s.data_space_id=ds.partition_scheme_id " + "join sys.filegroups fg on ds.data_space_id=fg.data_space_id";
    List<Map<String,?>> rs=executor.queryForList(new RawSqlStatement(sql));
    if (rs.size() > 0) {
      for (      Map<String,?> row : rs) {
        String bName=StringUtils.trimToNull((String)row.get("REFERENCED_SCHEMA_NAME")) + "." + StringUtils.trimToNull((String)row.get("REFERENCED_NAME"));
        String tabName=StringUtils.trimToNull((String)row.get("REFERENCING_SCHEMA_NAME")) + "." + StringUtils.trimToNull((String)row.get("REFERENCING_NAME"));
        graph.add(bName,tabName);
      }
    }
  }
}
