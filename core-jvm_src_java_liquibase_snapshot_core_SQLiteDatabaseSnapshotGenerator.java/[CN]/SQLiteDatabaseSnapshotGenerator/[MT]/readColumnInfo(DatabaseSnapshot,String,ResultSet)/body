{
  Database database=snapshot.getDatabase();
  Column columnInfo=new Column();
  String tableName=rs.getString("TABLE_NAME");
  String columnName=rs.getString("COLUMN_NAME");
  String schemaName=rs.getString("TABLE_SCHEM");
  String catalogName=rs.getString("TABLE_CAT");
  String upperCaseTableName=tableName.toUpperCase(Locale.ENGLISH);
  if (database.isSystemTable(catalogName,schemaName,upperCaseTableName) || database.isLiquibaseTable(upperCaseTableName)) {
    return null;
  }
  Table table=snapshot.getTable(tableName);
  if (table == null) {
    View view=snapshot.getView(tableName);
    if (view == null) {
      log.info("Could not find table or view " + tableName + " for column "+ columnName);
      return null;
    }
 else {
      columnInfo.setView(view);
      view.getColumns().add(columnInfo);
    }
  }
 else {
    columnInfo.setTable(table);
    table.getColumns().add(columnInfo);
  }
  columnInfo.setName(columnName);
  columnInfo.setDataType(rs.getInt("DATA_TYPE"));
  columnInfo.setColumnSize(rs.getInt("COLUMN_SIZE"));
  columnInfo.setDecimalDigits(rs.getInt("DECIMAL_POINTS"));
  Object defaultValue=rs.getObject("COLUMN_DEF");
  try {
    columnInfo.setDefaultValue(database.convertDatabaseValueToJavaObject(defaultValue,columnInfo.getDataType(),columnInfo.getColumnSize(),columnInfo.getDecimalDigits()));
  }
 catch (  ParseException e) {
    throw new DatabaseException(e);
  }
  int nullable=rs.getInt("NULLABLE");
  if (nullable == DatabaseMetaData.columnNoNulls) {
    columnInfo.setNullable(false);
  }
 else   if (nullable == DatabaseMetaData.columnNullable) {
    columnInfo.setNullable(true);
  }
  columnInfo.setPrimaryKey(snapshot.isPrimaryKey(columnInfo));
  columnInfo.setAutoIncrement(isColumnAutoIncrement(database,schema,tableName,columnName));
  columnInfo.setTypeName(database.getColumnType(rs.getString("TYPE_NAME"),columnInfo.isAutoIncrement()));
  return columnInfo;
}
