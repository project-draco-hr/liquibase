{
  if (expectedSql != null) {
    for (    Database database : TestContext.getInstance().getAllDatabases()) {
      if (shouldTestDatabase(database,includeDatabases,excludeDatabases)) {
        testedDatabases.add(database.getClass());
        if (database.getConnection() != null) {
          database.checkDatabaseChangeLogTable();
          database.checkDatabaseChangeLogLockTable();
        }
        Sql[] sql=SqlGeneratorFactory.getInstance().generateSql(statementUnderTest,database);
        assertNotNull("Null SQL for " + database,sql);
        assertEquals("Unexpected number of  SQL statements for " + database,expectedSql.length,sql.length);
        int index=0;
        for (        String convertedSql : expectedSql) {
          convertedSql=replaceEscaping(convertedSql,database);
          convertedSql=replaceDatabaseClauses(convertedSql,database);
          convertedSql=replaceStandardTypes(convertedSql,database);
          assertEquals("Incorrect SQL for " + database.getClass().getName(),convertedSql.toLowerCase(),sql[index].toSql().toLowerCase());
          index++;
        }
      }
    }
  }
  resetAvailableDatabases();
  for (  Database availableDatabase : TestContext.getInstance().getAvailableDatabases()) {
    Statement statement=((JdbcConnection)availableDatabase.getConnection()).getUnderlyingConnection().createStatement();
    if (shouldTestDatabase(availableDatabase,includeDatabases,excludeDatabases)) {
      String sqlToRun=SqlGeneratorFactory.getInstance().generateSql(statementUnderTest,availableDatabase)[0].toSql();
      try {
        statement.execute(sqlToRun);
      }
 catch (      Exception e) {
        System.out.println("Failed to execute against " + availableDatabase.getTypeName() + ": "+ sqlToRun);
        throw e;
      }
    }
  }
}
