{
  String originalDefinition=StringUtils.trimToEmpty(getRawDefinition());
  if (database instanceof MSSQLDatabase) {
    if (!LiquibaseConfiguration.getInstance().getProperty(GlobalConfiguration.class,GlobalConfiguration.CONVERT_DATA_TYPES).getValue(Boolean.class) && originalDefinition.toLowerCase().startsWith("text")) {
      return new DatabaseDataType(database.escapeDataTypeName("text"));
    }
  }
  if (database instanceof FirebirdDatabase) {
    return new DatabaseDataType("BLOB SUB_TYPE TEXT");
  }
 else   if (database instanceof SybaseASADatabase) {
    return new DatabaseDataType("LONG VARCHAR");
  }
 else   if (database instanceof MSSQLDatabase) {
    if (originalDefinition.equalsIgnoreCase("text") || originalDefinition.equals("[text]") || originalDefinition.matches("(?i)text .+")|| originalDefinition.matches("\\[text\\] .+")) {
      DatabaseDataType type=new DatabaseDataType(database.escapeDataTypeName("text"));
      type.addAdditionalInformation(getAdditionalInformation());
      return type;
    }
    if (originalDefinition.equalsIgnoreCase("ntext") || originalDefinition.equals("[ntext]") || originalDefinition.matches("(?i)ntext .+")|| originalDefinition.matches("\\[ntext\\] .+")) {
      DatabaseDataType type=new DatabaseDataType(database.escapeDataTypeName("ntext"));
      type.addAdditionalInformation(getAdditionalInformation());
      return type;
    }
    if (originalDefinition.equalsIgnoreCase("nclob")) {
      try {
        if (database.getDatabaseMajorVersion() <= 8) {
          DatabaseDataType type=new DatabaseDataType(database.escapeDataTypeName("ntext"));
          type.addAdditionalInformation(getAdditionalInformation());
          return type;
        }
      }
 catch (      DatabaseException ignore) {
      }
      return new DatabaseDataType(database.escapeDataTypeName("nvarchar"),"MAX");
    }
    try {
      if (database.getDatabaseMajorVersion() <= 8) {
        DatabaseDataType type=new DatabaseDataType(database.escapeDataTypeName("text"));
        type.addAdditionalInformation(getAdditionalInformation());
        return type;
      }
    }
 catch (    DatabaseException ignore) {
    }
    return new DatabaseDataType(database.escapeDataTypeName("varchar"),"MAX");
  }
 else   if (database instanceof MySQLDatabase) {
    if (originalDefinition.toLowerCase().startsWith("text")) {
      return new DatabaseDataType("TEXT");
    }
 else     if (originalDefinition.toLowerCase().startsWith("tinytext")) {
      return new DatabaseDataType("TINYTEXT");
    }
 else     if (originalDefinition.toLowerCase().startsWith("mediumtext")) {
      return new DatabaseDataType("MEDIUMTEXT");
    }
 else {
      return new DatabaseDataType("LONGTEXT");
    }
  }
 else   if (database instanceof H2Database || database instanceof HsqlDatabase) {
    if (originalDefinition.toLowerCase().startsWith("longvarchar") || originalDefinition.startsWith("java.sql.Types.LONGVARCHAR")) {
      return new DatabaseDataType("LONGVARCHAR");
    }
 else {
      return new DatabaseDataType("CLOB");
    }
  }
 else   if (database instanceof PostgresDatabase || database instanceof SQLiteDatabase || database instanceof SybaseDatabase) {
    return new DatabaseDataType("TEXT");
  }
 else   if (database instanceof OracleDatabase) {
    if (originalDefinition.equalsIgnoreCase("nclob")) {
      return new DatabaseDataType("NCLOB");
    }
    return new DatabaseDataType("CLOB");
  }
 else   if (database instanceof InformixDatabase) {
    if (originalDefinition.toLowerCase().startsWith("text")) {
      return new DatabaseDataType("TEXT");
    }
  }
  return super.toDatabaseDataType(database);
}
