{
  String alterTable="ALTER TABLE " + database.escapeTableName(statement.getSchemaName(),statement.getTableName()) + " ADD "+ database.escapeColumnName(statement.getSchemaName(),statement.getTableName(),statement.getColumnName())+ " "+ TypeConverterFactory.getInstance().findTypeConverter(database).getDataType(statement.getColumnType(),statement.isAutoIncrement());
  alterTable+=getDefaultClause(statement,database);
  if (primaryKeyBeforeNotNull(database)) {
    if (statement.isPrimaryKey()) {
      alterTable+=" PRIMARY KEY";
    }
  }
  if (statement.isAutoIncrement()) {
    alterTable+=" " + database.getAutoIncrementClause();
  }
  if (!statement.isNullable()) {
    alterTable+=" NOT NULL";
  }
  if (!primaryKeyBeforeNotNull(database)) {
    if (statement.isPrimaryKey()) {
      alterTable+=" PRIMARY KEY";
    }
  }
  if (statement.isUnique()) {
    alterTable+=" UNIQUE ";
  }
  alterTable+=getDefaultClause(statement,database);
  List<Sql> returnSql=new ArrayList<Sql>();
  returnSql.add(new UnparsedSql(alterTable,new Column().setTable(new Table(statement.getTableName()).setSchema(statement.getSchemaName())).setName(statement.getColumnName())));
  addForeignKeyStatements(statement,database,returnSql);
  return returnSql.toArray(new Sql[returnSql.size()]);
}
