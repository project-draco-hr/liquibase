{
  boolean createdTable=false;
  Executor executor=ExecutorService.getInstance().getExecutor(database);
  if (!hasDatabaseChangeLogLockTable()) {
    executor.comment("Create Database Lock Table");
    executor.execute(new CreateDatabaseChangeLogLockTableStatement());
    database.commit();
    LogFactory.getLogger().debug("Created database lock table with name: " + database.escapeTableName(database.getLiquibaseCatalogName(),database.getLiquibaseSchemaName(),database.getDatabaseChangeLogLockTableName()));
    createdTable=true;
  }
  if (!isDatabaseChangeLogLockTableInitialized(createdTable)) {
    executor.comment("Initialize Database Lock Table");
    executor.execute(new InitializeDatabaseChangeLogLockTableStatement());
    database.commit();
  }
  if (executor.updatesDatabase() && database instanceof DerbyDatabase && ((DerbyDatabase)database).supportsBooleanDataType()) {
    String lockTable=database.escapeTableName(database.getLiquibaseCatalogName(),database.getLiquibaseSchemaName(),database.getDatabaseChangeLogLockTableName());
    Object obj=executor.queryForObject(new RawSqlStatement("select min(locked) as test from " + lockTable + " fetch first row only"),Object.class);
    if (!(obj instanceof Boolean)) {
      executor.execute(new DropTableStatement(database.getLiquibaseCatalogName(),database.getLiquibaseSchemaName(),database.getDatabaseChangeLogLockTableName(),false));
      executor.execute(new CreateDatabaseChangeLogLockTableStatement());
      executor.execute(new InitializeDatabaseChangeLogLockTableStatement());
    }
  }
}
