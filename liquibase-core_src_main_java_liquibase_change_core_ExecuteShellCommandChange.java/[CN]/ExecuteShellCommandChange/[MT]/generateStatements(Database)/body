{
  boolean shouldRun=true;
  if (os != null && os.size() > 0) {
    String currentOS=System.getProperty("os.name");
    if (!os.contains(currentOS)) {
      shouldRun=false;
      LogFactory.getLogger().info("Not executing on os " + currentOS + " when "+ os+ " was specified");
    }
  }
  boolean nonExecutedMode=false;
  Executor executor=ExecutorService.getInstance().getExecutor(database);
  if (executor instanceof LoggingExecutor) {
    nonExecutedMode=true;
  }
  if (shouldRun && !nonExecutedMode) {
    return new SqlStatement[]{new RuntimeStatement(){
      @Override public Sql[] generate(      Database database){
        try {
          executeCommand(database);
        }
 catch (        Exception e) {
          throw new UnexpectedLiquibaseException("Error executing command: " + e.getLocalizedMessage(),e);
          e.printStackTrace();
          throw new UnexpectedLiquibaseException("Error executing command: " + e,e);
        }
        return null;
      }
    }
};
  }
  if (nonExecutedMode) {
    return new SqlStatement[]{new CommentStatement(getCommandString())};
  }
  return new SqlStatement[0];
}
