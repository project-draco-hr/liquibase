{
  StringBuilder sb=new StringBuilder();
  sb.append("ALTER TABLE ").append(database.escapeTableName(statement.getBaseTableSchemaName(),statement.getBaseTableName())).append(" ADD CONSTRAINT ");
  if (!(database instanceof InformixDatabase)) {
    sb.append(database.escapeConstraintName(statement.getConstraintName()));
  }
  sb.append(" FOREIGN KEY (").append(database.escapeColumnNameList(statement.getBaseColumnNames())).append(") REFERENCES ").append(database.escapeTableName(statement.getReferencedTableSchemaName(),statement.getReferencedTableName())).append("(").append(database.escapeColumnNameList(statement.getReferencedColumnNames())).append(")");
  if (statement.getOnUpdate() != null) {
    if ((database instanceof OracleDatabase) && statement.getOnUpdate().equalsIgnoreCase("RESTRICT")) {
    }
 else     if (database instanceof InformixDatabase) {
    }
 else {
      sb.append(" ON UPDATE ").append(statement.getOnUpdate());
    }
  }
  if (statement.getOnDelete() != null) {
    if ((database instanceof OracleDatabase) && (statement.getOnDelete().equalsIgnoreCase("RESTRICT") || statement.getOnDelete().equalsIgnoreCase("NO ACTION"))) {
    }
 else     if ((database instanceof MSSQLDatabase) && statement.getOnDelete().equalsIgnoreCase("RESTRICT")) {
    }
 else     if (database instanceof InformixDatabase && !(statement.getOnDelete().equalsIgnoreCase("CASCADE"))) {
    }
 else {
      sb.append(" ON DELETE ").append(statement.getOnDelete());
    }
  }
  if (statement.isDeferrable() || statement.isInitiallyDeferred()) {
    if (statement.isDeferrable()) {
      sb.append(" DEFERRABLE");
    }
    if (statement.isInitiallyDeferred()) {
      sb.append(" INITIALLY DEFERRED");
    }
  }
  if (database instanceof InformixDatabase) {
    sb.append(" CONSTRAINT ");
    sb.append(database.escapeConstraintName(statement.getConstraintName()));
  }
  return new Sql[]{new UnparsedSql(sb.toString())};
}
