{
  String alterTable="ALTER TABLE " + database.escapeTableName(statement.getCatalogName(),statement.getSchemaName(),statement.getTableName()) + " ADD "+ database.escapeColumnName(statement.getCatalogName(),statement.getSchemaName(),statement.getTableName(),statement.getColumnName())+ " "+ DataTypeFactory.getInstance().fromDescription(statement.getColumnType() + (statement.isAutoIncrement() ? "{autoIncrement:true}" : "")).toDatabaseDataType(database);
  if (statement.isAutoIncrement() && database.supportsAutoIncrement()) {
    AutoIncrementConstraint autoIncrementConstraint=statement.getAutoIncrementConstraint();
    alterTable+=" " + database.getAutoIncrementClause(autoIncrementConstraint.getStartWith(),autoIncrementConstraint.getIncrementBy());
  }
  if (!statement.isNullable()) {
    alterTable+=" NOT NULL";
  }
 else {
    if (database instanceof SybaseDatabase || database instanceof SybaseASADatabase) {
      alterTable+=" NULL";
    }
  }
  if (statement.isPrimaryKey()) {
    alterTable+=" PRIMARY KEY";
  }
  if (statement.isUnique()) {
    alterTable+=" UNIQUE ";
  }
  alterTable+=getDefaultClause(statement,database);
  List<Sql> returnSql=new ArrayList<Sql>();
  returnSql.add(new UnparsedSql(alterTable,getAffectedColumn(statement)));
  addForeignKeyStatements(statement,database,returnSql);
  return returnSql.toArray(new Sql[returnSql.size()]);
}
