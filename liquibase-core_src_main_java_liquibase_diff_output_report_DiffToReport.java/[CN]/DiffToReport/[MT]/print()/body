{
  out.println("Reference Database: " + diffResult.getReferenceSnapshot().getDatabase());
  out.println("Comparison Database: " + diffResult.getComparisonSnapshot().getDatabase());
  printComparison("Product Name",diffResult.getProductNameDiff(),out);
  printComparison("Product Version",diffResult.getProductVersionDiff(),out);
  TreeSet<Class<? extends DatabaseObject>> types=new TreeSet<Class<? extends DatabaseObject>>(new Comparator<Class<? extends DatabaseObject>>(){
    @Override public int compare(    Class<? extends DatabaseObject> o1,    Class<? extends DatabaseObject> o2){
      return o1.getSimpleName().compareTo(o2.getSimpleName());
    }
  }
);
  types.addAll(diffResult.getCompareControl().getComparedTypes());
  for (  Class<? extends DatabaseObject> type : types) {
    printSetComparison("Missing " + getTypeName(type),diffResult.getMissingObjects(type),out);
    printSetComparison("Unexpected " + getTypeName(type),diffResult.getUnexpectedObjects(type),out);
    printChangedComparison("Changed " + getTypeName(type),diffResult.getChangedObjects(type),out);
  }
}
