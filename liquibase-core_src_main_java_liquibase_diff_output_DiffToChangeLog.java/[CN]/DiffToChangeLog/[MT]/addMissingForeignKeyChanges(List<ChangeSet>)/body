{
  for (  ForeignKey fk : diffResult.getObjectDiff(ForeignKey.class).getMissing()) {
    AddForeignKeyConstraintChange change=new AddForeignKeyConstraintChange();
    change.setConstraintName(fk.getName());
    change.setReferencedTableName(fk.getPrimaryKeyTable().getName());
    if (diffOutputConfig.isIncludeCatalog()) {
      change.setReferencedTableCatalogName(fk.getPrimaryKeyTable().getSchema().getCatalogName());
    }
    if (diffOutputConfig.isIncludeSchema()) {
      change.setReferencedTableSchemaName(fk.getPrimaryKeyTable().getSchema().getName());
    }
    change.setReferencedColumnNames(fk.getPrimaryKeyColumns());
    change.setBaseTableName(fk.getForeignKeyTable().getName());
    if (diffOutputConfig.isIncludeCatalog()) {
      change.setBaseTableCatalogName(fk.getForeignKeyTable().getSchema().getCatalogName());
    }
    if (diffOutputConfig.isIncludeSchema()) {
      change.setBaseTableSchemaName(fk.getForeignKeyTable().getSchema().getName());
    }
    change.setBaseColumnNames(fk.getForeignKeyColumns());
    change.setDeferrable(fk.isDeferrable());
    change.setInitiallyDeferred(fk.isInitiallyDeferred());
    change.setOnUpdate(fk.getUpdateRule());
    change.setOnDelete(fk.getDeleteRule());
    change.setReferencesUniqueColumn(fk.getReferencesUniqueColumn());
    changes.add(generateChangeSet(change));
  }
}
