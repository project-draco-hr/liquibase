{
  try {
    if (!database.doesChangeLogLockTableExist()) {
      return new DatabaseChangeLogLock[0];
    }
    List<DatabaseChangeLogLock> allLocks=new ArrayList<DatabaseChangeLogLock>();
    SqlStatement sqlStatement=new SelectFromDatabaseChangeLogLockStatement("ID","LOCKED","LOCKGRANTED","LOCKEDBY");
    List<Map> rows=ExecutorService.getInstance().getExecutor(database).queryForList(sqlStatement);
    for (    Map columnMap : rows) {
      Object lockedValue=columnMap.get("LOCKED");
      Boolean locked;
      if (lockedValue instanceof Number) {
        locked=((Number)lockedValue).intValue() == 1;
      }
 else {
        locked=(Boolean)lockedValue;
      }
      if (locked != null && locked) {
        allLocks.add(new DatabaseChangeLogLock(((Number)columnMap.get("ID")).intValue(),(Date)columnMap.get("LOCKGRANTED"),(String)columnMap.get("LOCKEDBY")));
      }
    }
    return allLocks.toArray(new DatabaseChangeLogLock[allLocks.size()]);
  }
 catch (  Exception e) {
    throw new LockException(e);
  }
}
