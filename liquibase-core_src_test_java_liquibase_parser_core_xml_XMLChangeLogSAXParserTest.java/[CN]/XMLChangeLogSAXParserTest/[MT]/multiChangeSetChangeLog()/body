{
  DatabaseChangeLog changeLog=new XMLChangeLogSAXParser().parse("liquibase/parser/core/xml/multiChangeSetChangeLog.xml",new ChangeLogParameters(),new JUnitResourceAccessor());
  assertEquals("liquibase/parser/core/xml/multiChangeSetChangeLog.xml",changeLog.getLogicalFilePath());
  assertEquals("liquibase/parser/core/xml/multiChangeSetChangeLog.xml",changeLog.getPhysicalFilePath());
  assertEquals(0,changeLog.getPreconditions().getNestedPreconditions().size());
  assertEquals(4,changeLog.getChangeSets().size());
  ChangeSet changeSet=changeLog.getChangeSets().get(0);
  assertEquals("nvoxland",changeSet.getAuthor());
  assertEquals("1",changeSet.getId());
  assertEquals(1,changeSet.getChanges().size());
  assertEquals("liquibase/parser/core/xml/multiChangeSetChangeLog.xml",changeSet.getFilePath());
  assertNull(changeSet.getComments());
  assertFalse(changeSet.shouldAlwaysRun());
  assertFalse(changeSet.shouldRunOnChange());
  Change change=changeSet.getChanges().get(0);
  assertEquals("createTable",ChangeFactory.getInstance().getChangeMetaData(change).getName());
  assertTrue(change instanceof CreateTableChange);
  changeSet=changeLog.getChangeSets().get(1);
  assertEquals("nvoxland",changeSet.getAuthor());
  assertEquals("2",changeSet.getId());
  assertEquals(2,changeSet.getChanges().size());
  assertEquals("liquibase/parser/core/xml/multiChangeSetChangeLog.xml",changeSet.getFilePath());
  assertEquals("Testing add column",changeSet.getComments());
  assertTrue(changeSet.shouldAlwaysRun());
  assertTrue(changeSet.shouldRunOnChange());
  assertEquals(2,changeSet.getRollBackChanges().length);
  assertTrue(changeSet.getRollBackChanges()[0] instanceof RawSQLChange);
  assertTrue(changeSet.getRollBackChanges()[1] instanceof RawSQLChange);
  change=changeSet.getChanges().get(0);
  assertEquals("addColumn",ChangeFactory.getInstance().getChangeMetaData(change).getName());
  assertTrue(change instanceof AddColumnChange);
  change=changeSet.getChanges().get(1);
  assertEquals("addColumn",ChangeFactory.getInstance().getChangeMetaData(change).getName());
  assertTrue(change instanceof AddColumnChange);
  changeSet=changeLog.getChangeSets().get(2);
  assertEquals("bob",changeSet.getAuthor());
  assertEquals("3",changeSet.getId());
  assertEquals(1,changeSet.getChanges().size());
  assertEquals("liquibase/parser/core/xml/multiChangeSetChangeLog.xml",changeSet.getFilePath());
  assertNull(changeSet.getComments());
  assertFalse(changeSet.shouldAlwaysRun());
  assertFalse(changeSet.shouldRunOnChange());
  change=changeSet.getChanges().get(0);
  assertEquals("createTable",ChangeFactory.getInstance().getChangeMetaData(change).getName());
  assertTrue(change instanceof CreateTableChange);
  changeSet=changeLog.getChangeSets().get(3);
  assertEquals(1,changeSet.getChanges().size());
  change=changeSet.getChanges().get(0);
  assertTrue(change instanceof CustomChangeWrapper);
  CustomChangeWrapper wrapper=(CustomChangeWrapper)change;
  wrapper.generateStatements(new MockDatabase());
  assertTrue(wrapper.getCustomChange() instanceof ExampleCustomSqlChange);
  ExampleCustomSqlChange exChg=(ExampleCustomSqlChange)wrapper.getCustomChange();
  assertEquals("table",exChg.getTableName());
  assertEquals("column",exChg.getColumnName());
}
