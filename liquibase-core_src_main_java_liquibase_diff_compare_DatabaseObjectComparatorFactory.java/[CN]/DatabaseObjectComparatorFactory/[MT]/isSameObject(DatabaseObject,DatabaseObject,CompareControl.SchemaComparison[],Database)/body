{
  if (object1 == null && object2 == null) {
    return true;
  }
  if (object1 instanceof Schema || object2 instanceof Schema) {
    if (object1 == null) {
      object1=new Schema();
    }
    if (object2 == null) {
      object2=new Schema();
    }
  }
 else   if (object1 instanceof Catalog || object2 instanceof Catalog) {
    if (object1 == null) {
      object1=new Catalog();
    }
    if (object2 == null) {
      object2=new Catalog();
    }
  }
  if (object1 == null || object2 == null) {
    return false;
  }
  String snapshotId1=object1.getSnapshotId();
  String snapshotId2=object2.getSnapshotId();
  if (snapshotId1 != null && snapshotId2 != null) {
    if (snapshotId1.equals(snapshotId2)) {
      return true;
    }
  }
  boolean aHashMatches=false;
  List<String> hash1=Arrays.asList(hash(object1,schemaComparisons,accordingTo));
  List<String> hash2=Arrays.asList(hash(object2,schemaComparisons,accordingTo));
  for (  String hash : hash1) {
    if (hash2.contains(hash)) {
      aHashMatches=true;
      break;
    }
  }
  if (!aHashMatches) {
    return false;
  }
  return createComparatorChain(object1.getClass(),schemaComparisons,accordingTo).isSameObject(object1,object2,accordingTo);
}
