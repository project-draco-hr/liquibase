{
  path=convertToPath(relativeTo,path);
  Enumeration<URL> fileUrls=classLoader.getResources(path);
  Set<String> returnSet=new HashSet<String>();
  if (!fileUrls.hasMoreElements() && (path.startsWith("jar:") || path.startsWith("file:"))) {
    fileUrls=new Vector<URL>(Arrays.asList(new URL(path))).elements();
  }
  while (fileUrls.hasMoreElements()) {
    URL fileUrl=fileUrls.nextElement();
    if (!fileUrl.toExternalForm().startsWith("file:")) {
      if (fileUrl.toExternalForm().startsWith("jar:file:") || fileUrl.toExternalForm().startsWith("wsjar:file:") || fileUrl.toExternalForm().startsWith("zip:")) {
        String file=fileUrl.getFile();
        String[] zipAndFile=file.split("!");
        String splitPath=zipAndFile[0];
        if (splitPath.matches("file:\\/[A-Za-z]:\\/.*")) {
          splitPath=splitPath.replaceFirst("file:\\/","");
        }
 else {
          splitPath=splitPath.replaceFirst("file:","");
        }
        splitPath=URLDecoder.decode(splitPath,"UTF-8");
        File zipfile=new File(splitPath);
        File zipFileDir=FileUtil.unzip(zipfile);
        if (path.startsWith("classpath:")) {
          path=path.replaceFirst("classpath:","");
        }
        if (path.startsWith("classpath*:")) {
          path=path.replaceFirst("classpath\\*:","");
        }
        File dirInZip=new File(zipFileDir,zipAndFile[1]);
        if (!dirInZip.exists()) {
          dirInZip=new File(zipFileDir,path);
        }
        URI fileUri=dirInZip.toURI();
        fileUrl=fileUri.toURL();
      }
    }
    try {
      File file=new File(fileUrl.toURI());
      if (file.exists()) {
        getContents(file,recursive,includeFiles,includeDirectories,path,returnSet);
      }
    }
 catch (    URISyntaxException e) {
    }
catch (    IllegalArgumentException e) {
    }
    Enumeration<URL> resources=classLoader.getResources(path);
    while (resources.hasMoreElements()) {
      String url=resources.nextElement().toExternalForm();
      url=url.replaceFirst("^\\Q" + path + "\\E","");
      returnSet.add(url);
    }
  }
  if (returnSet.size() == 0) {
    return null;
  }
  return returnSet;
}
