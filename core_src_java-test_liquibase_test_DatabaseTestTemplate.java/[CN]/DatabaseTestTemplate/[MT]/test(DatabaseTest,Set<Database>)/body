{
  for (  Database database : databasesToTestOn) {
    LockHandler.getInstance(database).reset();
    if (database.getConnection() != null) {
      LockHandler.getInstance(database).forceReleaseLock();
    }
    try {
      test.performTest(database);
    }
 catch (    ComparisonFailure e) {
      String newMessage="Database Test Failure on " + database;
      if (e.getMessage() != null) {
        newMessage+=": " + e.getMessage();
      }
      ComparisonFailure newError=new ComparisonFailure(newMessage,e.getExpected(),e.getActual());
      newError.setStackTrace(e.getStackTrace());
      throw newError;
    }
catch (    AssertionError e) {
      e.printStackTrace();
      String newMessage="Database Test Failure on " + database;
      if (e.getMessage() != null) {
        newMessage+=": " + e.getMessage();
      }
      AssertionError newError=new AssertionError(newMessage);
      newError.setStackTrace(e.getStackTrace());
      throw newError;
    }
catch (    MigrationFailedException e) {
      e.printStackTrace();
      String newMessage="Database Test Failure on " + database;
      if (e.getMessage() != null) {
        newMessage+=": " + e.getMessage();
      }
      AssertionError newError=new AssertionError(newMessage);
      newError.setStackTrace(e.getStackTrace());
      throw newError;
    }
catch (    Exception e) {
      e.printStackTrace();
      String newMessage="Database Test Exception on " + database;
      if (e.getMessage() != null) {
        newMessage+=": " + e.getMessage();
      }
      Exception newError=e.getClass().getConstructor(String.class).newInstance(newMessage);
      if (e.getCause() == null) {
        newError.setStackTrace(e.getStackTrace());
      }
 else {
        newError.setStackTrace(e.getCause().getStackTrace());
      }
      throw newError;
    }
 finally {
      if (database.getConnection() != null && !database.getAutoCommitMode()) {
        database.rollback();
      }
    }
  }
}
