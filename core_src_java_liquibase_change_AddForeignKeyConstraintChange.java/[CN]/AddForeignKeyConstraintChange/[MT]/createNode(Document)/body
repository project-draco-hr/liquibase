{
  Element node=currentChangeLogFileDOM.createElement(getTagName());
  if (getBaseTableSchemaName() != null) {
    node.setAttribute("baseTableSchemaName",getBaseTableSchemaName());
  }
  node.setAttribute("baseTableName",getBaseTableName());
  node.setAttribute("baseColumnNames",getBaseColumnNames());
  node.setAttribute("constraintName",getConstraintName());
  if (getReferencedTableSchemaName() != null) {
    node.setAttribute("referencedTableSchemaName",getReferencedTableSchemaName());
  }
  node.setAttribute("referencedTableName",getReferencedTableName());
  node.setAttribute("referencedColumnNames",getReferencedColumnNames());
  if (getDeferrable() != null) {
    node.setAttribute("deferrable",getDeferrable().toString());
  }
  if (getInitiallyDeferred() != null) {
    node.setAttribute("initiallyDeferred",getInitiallyDeferred().toString());
  }
  if (getUpdateRule() != null) {
switch (getUpdateRule()) {
case DatabaseMetaData.importedKeyCascade:
      node.setAttribute("onUpdate","CASCADE");
    break;
case DatabaseMetaData.importedKeySetNull:
  node.setAttribute("onUpdate","SET NULL");
break;
case DatabaseMetaData.importedKeySetDefault:
node.setAttribute("onUpdate","SET DEFAULT");
break;
case DatabaseMetaData.importedKeyRestrict:
node.setAttribute("onUpdate","RESTRICT");
break;
default :
node.setAttribute("onUpdate","NO ACTION");
break;
}
}
if (getDeleteRule() != null) {
switch (getDeleteRule()) {
case DatabaseMetaData.importedKeyCascade:
node.setAttribute("onDelete","CASCADE");
break;
case DatabaseMetaData.importedKeySetNull:
node.setAttribute("onDelete","SET NULL");
break;
case DatabaseMetaData.importedKeySetDefault:
node.setAttribute("onDelete","SET DEFAULT");
break;
case DatabaseMetaData.importedKeyRestrict:
node.setAttribute("onDelete","RESTRICT");
break;
default :
node.setAttribute("onDelete","NO ACTION");
break;
}
}
return node;
}
