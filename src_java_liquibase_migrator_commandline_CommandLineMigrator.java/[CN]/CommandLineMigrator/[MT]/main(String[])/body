{
  String shouldRunProperty=System.getProperty(Migrator.SHOULD_RUN_SYSTEM_PROPERTY);
  if (shouldRunProperty != null && !Boolean.valueOf(shouldRunProperty)) {
    System.out.println("Migrator did not run because '" + Migrator.SHOULD_RUN_SYSTEM_PROPERTY + "' system property was set to false");
    return;
  }
  CommandLineMigrator commandLineMigrator=new CommandLineMigrator();
  commandLineMigrator.parseOptions(args);
  File propertiesFile=new File("liquibase.properties");
  if (propertiesFile.exists()) {
    commandLineMigrator.parsePropertiesFile(new FileInputStream(propertiesFile));
  }
  if (!commandLineMigrator.checkSetup()) {
    commandLineMigrator.printHelp(System.out);
    return;
  }
  try {
    commandLineMigrator.applyDefaults();
    commandLineMigrator.configureClassLoader();
    commandLineMigrator.doMigration();
  }
 catch (  Throwable e) {
    String message=e.getMessage();
    if (e.getCause() != null) {
      message=e.getCause().getMessage();
    }
    if (message == null) {
      message="Unknown Reason";
    }
    System.out.println("Migration Failed: " + message);
    Logger.getLogger(Migrator.DEFAULT_LOG_NAME).log(Level.SEVERE,message,e);
    return;
  }
  if ("migrate".equals(commandLineMigrator.command)) {
    System.out.println("Migration successful");
  }
 else   if (commandLineMigrator.command.startsWith("rollback") && !commandLineMigrator.command.endsWith("SQL")) {
    System.out.println("Rollback successful");
  }
}
