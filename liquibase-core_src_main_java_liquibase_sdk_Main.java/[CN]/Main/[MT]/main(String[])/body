{
  Main main=new Main();
  main.header("Liquibase SDK");
  try {
    main.init(args);
    if (main.command == null) {
      throw new UserError("No command passed");
    }
    if (main.command.equals("help")) {
      main.printHelp();
      return;
    }
    LiquibaseCommand command;
    CommandLineParser commandParser=new GnuParser();
    if (main.command.equals("convert")) {
      command=new ConvertCommand(main);
      Options options=new Options();
      options.addOption(OptionBuilder.hasArg().withDescription("Original changelog").isRequired().create("src"));
      options.addOption(OptionBuilder.hasArg().withDescription("Output changelog").isRequired().create("out"));
      options.addOption(OptionBuilder.hasArg().withDescription("Classpath").create("classpath"));
      CommandLine commandArguments=commandParser.parse(options,main.commandArgs.toArray(new String[main.commandArgs.size()]));
      ((ConvertCommand)command).setSrc(commandArguments.getOptionValue("src"));
      ((ConvertCommand)command).setOut(commandArguments.getOptionValue("out"));
      ((ConvertCommand)command).setClasspath(commandArguments.getOptionValue("classpath"));
    }
 else {
      throw new UserError("Unknown command: " + main.command);
    }
    command.execute();
    main.divider();
    main.out("Command executed successfully");
  }
 catch (  UserError userError) {
    main.out("");
    main.header("ERROR EXECUTING COMMAND");
    main.out(userError.getMessage());
    main.out("");
    main.out("");
    return;
  }
catch (  Throwable exception) {
    System.out.println("Unexpected error: " + exception.getMessage());
    exception.printStackTrace();
  }
}
