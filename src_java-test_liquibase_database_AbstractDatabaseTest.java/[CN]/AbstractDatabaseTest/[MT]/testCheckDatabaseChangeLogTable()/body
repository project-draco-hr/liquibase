{
  Connection connection=createMock(Connection.class);
  DatabaseMetaData metaData=createMock(DatabaseMetaData.class);
  expect(connection.getMetaData()).andReturn(metaData).atLeastOnce();
  expect(metaData.getUserName()).andReturn("testSchema").atLeastOnce();
  ResultSet tableResultSet=createMock(ResultSet.class);
  expect(metaData.getTables(null,"testSchema","DatabaseChangeLog".toUpperCase(),null)).andReturn(tableResultSet);
  expect(tableResultSet.next()).andReturn(Boolean.FALSE);
  Statement statement=createMock(Statement.class);
  expect(connection.createStatement()).andReturn(statement);
  expect(statement.executeUpdate(("create table DatabaseChangeLog (id varchar(255) not null, author varchar(255) not null, filename varchar(255) not null, dateExecuted " + database.getDateTimeType() + " not null, md5sum varchar(32) not null, primary key(id, author, filename))").toUpperCase())).andReturn(new Integer(1));
  connection.commit();
  expectLastCall();
  statement.close();
  expectLastCall();
  tableResultSet.close();
  expectLastCall();
  replay(connection);
  replay(metaData);
  replay(tableResultSet);
  replay(statement);
  AbstractDatabase database=getDatabase();
  database.setConnection(connection);
  Migrator migrator=new Migrator(null,null);
  migrator.init(getMockConnection());
  database.checkDatabaseChangeLogTable(migrator);
  reset(connection);
  reset(metaData);
  reset(tableResultSet);
  reset(statement);
  connection=createMock(Connection.class);
  metaData=createMock(DatabaseMetaData.class);
  expect(connection.getMetaData()).andReturn(metaData).atLeastOnce();
  expect(metaData.getUserName()).andReturn("testSchema").atLeastOnce();
  tableResultSet=createMock(ResultSet.class);
  expect(metaData.getTables(null,"testSchema","DATABASECHANGELOG",null)).andReturn(tableResultSet);
  expect(tableResultSet.next()).andReturn(Boolean.TRUE);
  statement.close();
  expectLastCall();
  tableResultSet.close();
  expectLastCall();
  replay(connection);
  replay(metaData);
  replay(tableResultSet);
  replay(statement);
  database=getDatabase();
  database.setConnection(connection);
  migrator=new Migrator(null,null);
  migrator.init(getMockConnection());
}
