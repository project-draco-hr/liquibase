{
  AddColumnChange refactoring=new AddColumnChange();
  refactoring.setSchemaName("SCHEMA");
  refactoring.setTableName("TAB");
  ColumnConfig column=new ColumnConfig();
  column.setName("NEWCOL");
  column.setType("TYP");
  ConstraintsConfig constraints=new ConstraintsConfig();
  constraints.setNullable(Boolean.FALSE);
  column.setConstraints(constraints);
  refactoring.addColumn(column);
  column=new ColumnConfig();
  column.setName("NEWCOL2");
  column.setType("TYP2");
  column.setConstraints(new ConstraintsConfig());
  refactoring.addColumn(column);
  SqlStatement[] sqlStatements=refactoring.generateStatements(new MockDatabase());
  assertEquals(2,sqlStatements.length);
  assertTrue(sqlStatements[0] instanceof AddColumnStatement);
  assertTrue(sqlStatements[1] instanceof AddColumnStatement);
  assertEquals("SCHEMA",((AddColumnStatement)sqlStatements[0]).getSchemaName());
  assertEquals("TAB",((AddColumnStatement)sqlStatements[0]).getTableName());
  assertEquals("NEWCOL",((AddColumnStatement)sqlStatements[0]).getColumnName());
  assertEquals("TYP",((AddColumnStatement)sqlStatements[0]).getColumnType());
  assertFalse(((AddColumnStatement)sqlStatements[0]).isPrimaryKey());
  assertFalse(((AddColumnStatement)sqlStatements[0]).isNullable());
  assertEquals("SCHEMA",((AddColumnStatement)sqlStatements[1]).getSchemaName());
  assertEquals("TAB",((AddColumnStatement)sqlStatements[1]).getTableName());
  assertEquals("NEWCOL2",((AddColumnStatement)sqlStatements[1]).getColumnName());
  assertEquals("TYP2",((AddColumnStatement)sqlStatements[1]).getColumnType());
  assertTrue(((AddColumnStatement)sqlStatements[1]).isNullable());
}
