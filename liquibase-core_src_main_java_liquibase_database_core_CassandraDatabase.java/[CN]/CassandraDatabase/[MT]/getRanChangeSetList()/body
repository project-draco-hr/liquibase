{
  List<RanChangeSet> ranChangeSetList=new ArrayList<RanChangeSet>();
  if (hasDatabaseChangeLogTable()) {
    try {
      Statement statement=getStatement();
      ResultSet rs=statement.executeQuery("SELECT AUTHOR, COMMENTS, DATEEXECUTED, DESCRIPTION, EXECTYPE, FILENAME, ID, LIQUIBASE, MD5SUM, ORDEREXECUTED, TAG FROM DATABASECHANGELOG");
      while (rs.next()) {
        String fileName=rs.getString("FILENAME");
        String author=rs.getString("AUTHOR");
        String id=rs.getString("ID");
        String md5sum=rs.getString("MD5SUM") == null ? null : rs.getString("MD5SUM");
        String description=rs.getString("DESCRIPTION") == null ? null : rs.getString("DESCRIPTION");
        Object tmpDateExecuted=rs.getString("DATEEXECUTED");
        Date dateExecuted=null;
        if (tmpDateExecuted instanceof Date) {
          dateExecuted=(Date)tmpDateExecuted;
        }
 else {
          DateFormat df=new SimpleDateFormat("E MMM dd HH:mm:ss z yyyy");
          try {
            dateExecuted=df.parse((String)tmpDateExecuted);
          }
 catch (          Exception e) {
            LogFactory.getLogger().warning("Failed to parse date: " + tmpDateExecuted + " expected "+ df.format(new Date(0)));
            dateExecuted=null;
          }
        }
        String tag=rs.getString("TAG") == null ? null : rs.getString("TAG");
        String execType=rs.getString("EXECTYPE") == null ? null : rs.getString("EXECTYPE");
        try {
          RanChangeSet ranChangeSet=new RanChangeSet(fileName,id,author,CheckSum.parse(md5sum),dateExecuted,tag,ChangeSet.ExecType.valueOf(execType),description);
          LogFactory.getLogger().debug("Changeset already ran on cassandra Cassandra: " + ranChangeSet);
          ranChangeSetList.add(ranChangeSet);
        }
 catch (        IllegalArgumentException e) {
          LogFactory.getLogger().severe("Unknown EXECTYPE from database: " + execType);
          throw e;
        }
      }
      statement.close();
    }
 catch (    Exception e) {
      throw new UnexpectedLiquibaseException(e);
    }
  }
  LogFactory.getLogger().debug("Changesets ran: " + ranChangeSetList.size());
  return ranChangeSetList;
}
