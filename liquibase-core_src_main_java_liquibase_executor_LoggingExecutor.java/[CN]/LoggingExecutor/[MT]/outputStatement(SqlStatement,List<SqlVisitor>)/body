{
  try {
    if (SqlGeneratorFactory.getInstance().generateStatementsVolatile(sql,database)) {
      throw new DatabaseException(sql.getClass().getSimpleName() + " requires access to up to date database metadata which is not available in SQL output mode");
    }
    if (sql instanceof ExecutablePreparedStatement) {
      output.write("WARNING!: This statement uses a prepared statement which cannot be execute directly by this script. Only works in 'update' mode\n\n");
    }
    for (    String statement : applyVisitors(sql,sqlVisitors)) {
      if (statement == null) {
        continue;
      }
      output.write(statement);
      if (database instanceof MSSQLDatabase || database instanceof SybaseDatabase || database instanceof SybaseASADatabase) {
        output.write(StreamUtil.getLineSeparator());
        output.write("GO");
      }
 else {
        String endDelimiter=";";
        String potentialDelimiter=null;
        if (sql instanceof RawSqlStatement) {
          potentialDelimiter=((RawSqlStatement)sql).getEndDelimiter();
        }
 else         if (sql instanceof CreateProcedureStatement) {
          potentialDelimiter=((CreateProcedureStatement)sql).getEndDelimiter();
        }
        if (potentialDelimiter != null) {
          potentialDelimiter=potentialDelimiter.replaceFirst("\\$$","");
        }
        if (potentialDelimiter != null && potentialDelimiter.matches("[;/\\w\r\n@\\-]+")) {
          endDelimiter=potentialDelimiter;
        }
        if (!statement.endsWith(endDelimiter)) {
          output.write(endDelimiter);
        }
      }
      output.write(StreamUtil.getLineSeparator());
      output.write(StreamUtil.getLineSeparator());
    }
  }
 catch (  IOException e) {
    throw new DatabaseException(e);
  }
}
