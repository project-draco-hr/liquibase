{
  StringBuffer updateSqlString=new StringBuffer();
  UpdateGenerator update=new UpdateGenerator();
  UpdateStatement updateStatement=new UpdateStatement(insertOrUpdateStatement.getSchemaName(),insertOrUpdateStatement.getTableName());
  updateStatement.setWhereClause(whereClause + ";\n");
  String[] pkFields=insertOrUpdateStatement.getPrimaryKey().split(",");
  HashSet<String> hashPkFields=new HashSet<String>(Arrays.asList(pkFields));
  for (  String columnKey : insertOrUpdateStatement.getColumnValues().keySet()) {
    if (!hashPkFields.contains(columnKey)) {
      updateStatement.addNewColumnValue(columnKey,insertOrUpdateStatement.getColumnValue(columnKey));
    }
  }
  Sql[] updateSql=update.generateSql(updateStatement,database,sqlGeneratorChain);
  for (  Sql s : updateSql) {
    updateSqlString.append(s.toSql());
    updateSqlString.append(";");
  }
  updateSqlString.deleteCharAt(updateSqlString.lastIndexOf(";"));
  updateSqlString.append("\n");
  return updateSqlString.toString();
}
