{
  StringBuffer where=new StringBuffer();
  String[] pkColumns=insertOrUpdateStatement.getPrimaryKey().split(",");
  for (  String thisPkColumn : pkColumns) {
    where.append(database.escapeColumnName(insertOrUpdateStatement.getSchemaName(),insertOrUpdateStatement.getTableName(),thisPkColumn)).append(" = ");
    Object newValue=insertOrUpdateStatement.getColumnValues().get(thisPkColumn);
    if (newValue == null || newValue.toString().equals("NULL")) {
      where.append("NULL");
    }
 else     if (newValue instanceof String && database.shouldQuoteValue(((String)newValue))) {
      where.append("'").append(database.escapeStringForDatabase((String)newValue)).append("'");
    }
 else     if (newValue instanceof Date) {
      where.append(database.getDateLiteral(((Date)newValue)));
    }
 else     if (newValue instanceof Boolean) {
      if (((Boolean)newValue)) {
        where.append(TypeConverterFactory.getInstance().findTypeConverter(database).getBooleanType().getTrueBooleanValue());
      }
 else {
        where.append(TypeConverterFactory.getInstance().findTypeConverter(database).getBooleanType().getFalseBooleanValue());
      }
    }
 else {
      where.append(newValue);
    }
    where.append(" AND ");
  }
  where.delete(where.lastIndexOf(" AND "),where.lastIndexOf(" AND ") + " AND ".length());
  return where.toString();
}
