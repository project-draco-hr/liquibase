{
  SortedSet<SqlGenerator> validGenerators=new TreeSet<SqlGenerator>(new SqlGeneratorComparator());
  for (  SqlGenerator generator : getGenerators()) {
    Class clazz=generator.getClass();
    while (clazz != null) {
      for (      Type type : clazz.getGenericInterfaces()) {
        if (type instanceof ParameterizedType) {
          for (          Type typeClass : ((ParameterizedType)type).getActualTypeArguments()) {
            if (((Class)typeClass).isAssignableFrom(statement.getClass())) {
              if (generator.supports(statement,database)) {
                validGenerators.add(generator);
              }
            }
          }
        }
 else         if (type.equals(SqlGenerator.class)) {
          if (generator.supports(statement,database)) {
            validGenerators.add(generator);
          }
        }
      }
      clazz=clazz.getSuperclass();
    }
  }
  return validGenerators;
}
