{
  changeLogParameters.setContexts(StringUtils.splitAndTrim(contexts,","));
  LockService lockService=LockService.getInstance(database);
  lockService.waitForLock();
  try {
    DatabaseChangeLog changeLog=ChangeLogParserFactory.getInstance().getParser(changeLogFile,resourceAccessor).parse(changeLogFile,changeLogParameters,resourceAccessor);
    checkDatabaseChangeLogTable(false,changeLog);
    changeLog.validate(getStandardChangelogIterator(contexts,changeLog),database);
    ChangeLogIterator logIterator=new ChangeLogIterator(changeLog,new ActuallyExecutedChangeSetFilter(database.getRanChangeSetList()),new ContextChangeSetFilter(contexts),new DbmsChangeSetFilter(database),new CountChangeSetFilter(changesToRollback));
    logIterator.run(new RollbackVisitor(database),database);
  }
  finally {
    try {
      lockService.releaseLock();
    }
 catch (    LockException e) {
      log.severe("Error releasing lock",e);
    }
  }
}
