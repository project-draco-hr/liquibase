{
  changeLogParameters.setContexts(contexts);
  LockService lockService=LockServiceFactory.getInstance().getLockService(database);
  lockService.waitForLock();
  try {
    DatabaseChangeLog changeLog=getDatabaseChangeLog();
    checkLiquibaseTables(false,changeLog,contexts);
    changeLog.validate(database,contexts);
    ChangeLogIterator logIterator=new ChangeLogIterator(database.getRanChangeSetList(),changeLog,new AlreadyRanChangeSetFilter(database.getRanChangeSetList()),new ContextChangeSetFilter(contexts),new DbmsChangeSetFilter(database),new CountChangeSetFilter(changesToRollback));
    logIterator.run(new RollbackVisitor(database),new RuntimeEnvironment(database,contexts));
  }
  finally {
    try {
      lockService.releaseLock();
    }
 catch (    LockException e) {
      log.severe("Error releasing lock",e);
    }
  }
}
