{
  for (  Database database : TestContext.getInstance().getAvailableDatabases()) {
    DatabaseConnection connection=database.getConnection();
    Statement connectionStatement=connection.createStatement();
    if (database.supportsSchemas()) {
      database.dropDatabaseObjects(TestContext.ALT_SCHEMA);
      connection.commit();
      try {
        connectionStatement.executeUpdate("drop table " + database.escapeTableName(TestContext.ALT_SCHEMA,database.getDatabaseChangeLogLockTableName()));
      }
 catch (      SQLException e) {
        ;
      }
      connection.commit();
      try {
        connectionStatement.executeUpdate("drop table " + database.escapeTableName(TestContext.ALT_SCHEMA,database.getDatabaseChangeLogTableName()));
      }
 catch (      SQLException e) {
        ;
      }
      connection.commit();
    }
    database.dropDatabaseObjects(null);
    try {
      connectionStatement.executeUpdate("drop table " + database.escapeTableName(null,database.getDatabaseChangeLogLockTableName()));
    }
 catch (    SQLException e) {
      ;
    }
    connection.commit();
    try {
      connectionStatement.executeUpdate("drop table " + database.escapeTableName(null,database.getDatabaseChangeLogTableName()));
    }
 catch (    SQLException e) {
      ;
    }
    connection.commit();
    List<? extends SqlStatement> setupStatements=setupStatements(database);
    if (setupStatements != null) {
      for (      SqlStatement statement : setupStatements) {
        ExecutorService.getInstance().getWriteExecutor(database).execute(statement);
      }
    }
    connectionStatement.close();
  }
}
