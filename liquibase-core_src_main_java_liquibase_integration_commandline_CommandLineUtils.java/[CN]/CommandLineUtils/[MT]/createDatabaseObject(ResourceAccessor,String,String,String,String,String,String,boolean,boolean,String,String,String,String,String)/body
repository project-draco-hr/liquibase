{
  try {
    Database database=DatabaseFactory.getInstance().openDatabase(url,username,password,driver,databaseClass,driverPropertiesFile,propertyProviderClass,resourceAccessor);
    defaultCatalogName=StringUtils.trimToNull(defaultCatalogName);
    defaultSchemaName=StringUtils.trimToNull(defaultSchemaName);
    database.setDefaultCatalogName(defaultCatalogName);
    database.setDefaultSchemaName(defaultSchemaName);
    database.setOutputDefaultCatalog(outputDefaultCatalog);
    database.setOutputDefaultSchema(outputDefaultSchema);
    database.setLiquibaseCatalogName(StringUtils.trimToNull(liquibaseCatalogName));
    database.setLiquibaseSchemaName(StringUtils.trimToNull(liquibaseSchemaName));
    if ((defaultCatalogName != null || defaultSchemaName != null) && !(database.getConnection() instanceof OfflineConnection)) {
      if (database instanceof OracleDatabase) {
        String schema=defaultCatalogName;
        if (schema == null) {
          schema=defaultSchemaName;
        }
        ExecutorService.getInstance().getExecutor(database).execute(new RawSqlStatement("ALTER SESSION SET CURRENT_SCHEMA=" + schema));
      }
 else       if (database instanceof MSSQLDatabase && defaultSchemaName != null) {
        ExecutorService.getInstance().getExecutor(database).execute(new RawSqlStatement("ALTER USER " + username + " WITH DEFAULT_SCHEMA=["+ defaultSchemaName+ "]"));
      }
 else       if (database instanceof PostgresDatabase && defaultSchemaName != null) {
        ExecutorService.getInstance().getExecutor(database).execute(new RawSqlStatement("SET SEARCH_PATH TO " + defaultSchemaName));
      }
 else       if (database instanceof DB2Database) {
        String schema=defaultCatalogName;
        if (schema == null) {
          schema=defaultSchemaName;
        }
        ExecutorService.getInstance().getExecutor(database).execute(new RawSqlStatement("SET CURRENT SCHEMA " + schema));
      }
 else       if (database instanceof MySQLDatabase) {
        String schema=defaultCatalogName;
        if (schema == null) {
          schema=defaultSchemaName;
        }
        ExecutorService.getInstance().getExecutor(database).execute(new RawSqlStatement("USE " + schema));
      }
    }
    return database;
  }
 catch (  Exception e) {
    throw new DatabaseException(e);
  }
}
