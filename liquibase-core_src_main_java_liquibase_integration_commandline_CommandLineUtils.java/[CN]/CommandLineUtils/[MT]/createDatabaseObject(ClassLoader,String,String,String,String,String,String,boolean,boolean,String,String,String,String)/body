{
  driver=StringUtils.trimToNull(driver);
  if (driver == null) {
    driver=DatabaseFactory.getInstance().findDefaultDriver(url);
  }
  try {
    Driver driverObject;
    DatabaseFactory databaseFactory=DatabaseFactory.getInstance();
    if (databaseClass != null) {
      databaseFactory.clearRegistry();
      databaseFactory.register((Database)Class.forName(databaseClass,true,classLoader).newInstance());
    }
    try {
      if (driver == null) {
        driver=databaseFactory.findDefaultDriver(url);
      }
      if (driver == null) {
        throw new RuntimeException("Driver class was not specified and could not be determined from the url (" + url + ")");
      }
      driverObject=(Driver)Class.forName(driver,true,classLoader).newInstance();
    }
 catch (    Exception e) {
      throw new RuntimeException("Cannot find database driver: " + e.getMessage());
    }
    Properties driverProperties=new Properties();
    if (username != null) {
      driverProperties.put("user",username);
    }
    if (password != null) {
      driverProperties.put("password",password);
    }
    if (null != driverPropertiesFile) {
      File propertiesFile=new File(driverPropertiesFile);
      if (propertiesFile.exists()) {
        driverProperties.load(new FileInputStream(propertiesFile));
      }
 else {
        throw new RuntimeException("Can't open JDBC Driver specific properties from the file: '" + driverPropertiesFile + "'");
      }
    }
    Connection connection=driverObject.connect(url,driverProperties);
    if (connection == null) {
      throw new DatabaseException("Connection could not be created to " + url + " with driver "+ driverObject.getClass().getName()+ ".  Possibly the wrong driver for the given database URL");
    }
    Database database=databaseFactory.findCorrectDatabaseImplementation(new JdbcConnection(connection));
    database.setDefaultCatalogName(StringUtils.trimToNull(defaultCatalogName));
    database.setDefaultSchemaName(StringUtils.trimToNull(defaultSchemaName));
    database.setOutputDefaultCatalog(outputDefaultCatalog);
    database.setOutputDefaultSchema(outputDefaultSchema);
    database.setLiquibaseCatalogName(StringUtils.trimToNull(liquibaseCatalogName));
    database.setLiquibaseSchemaName(StringUtils.trimToNull(liquibaseSchemaName));
    return database;
  }
 catch (  Exception e) {
    throw new DatabaseException(e);
  }
}
