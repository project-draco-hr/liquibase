{
  String dateValue=database.getCurrentDateTimeFunction();
  ChangeSet changeSet=statement.getChangeSet();
  SqlStatement runStatement;
  try {
    if (statement.isRanBefore()) {
      runStatement=new UpdateStatement(database.getLiquibaseSchemaName(),database.getDatabaseChangeLogTableName()).addNewColumnValue("DATEEXECUTED",dateValue).addNewColumnValue("MD5SUM",changeSet.generateCheckSum().toString()).setWhereClause("ID=? AND AUTHOR=? AND FILENAME=?").addWhereParameters(changeSet.getId(),changeSet.getAuthor(),changeSet.getFilePath());
    }
 else {
      runStatement=new InsertStatement(database.getLiquibaseSchemaName(),database.getDatabaseChangeLogTableName()).addColumnValue("ID",database.escapeStringForDatabase(changeSet.getId())).addColumnValue("AUTHOR",changeSet.getAuthor()).addColumnValue("FILENAME",changeSet.getFilePath()).addColumnValue("DATEEXECUTED",new ComputedDateValue(dateValue)).addColumnValue("ORDEREXECUTED",database.getNextChangeSetSequenceValue()).addColumnValue("MD5SUM",changeSet.generateCheckSum().toString()).addColumnValue("DESCRIPTION",limitSize(changeSet.getDescription())).addColumnValue("COMMENTS",limitSize(StringUtils.trimToEmpty(changeSet.getComments()))).addColumnValue("LIQUIBASE",LiquibaseUtil.getBuildVersion());
    }
  }
 catch (  LiquibaseException e) {
    throw new UnexpectedLiquibaseException(e);
  }
  return SqlGeneratorFactory.getInstance().generateSql(runStatement,database);
}
