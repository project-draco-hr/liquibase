{
  Properties props=new Properties();
  props.load(propertiesInputStream);
  if (props.containsKey("strict")) {
    strict=Boolean.valueOf(props.getProperty("strict"));
  }
  for (  Map.Entry entry : props.entrySet()) {
    try {
      if (entry.getKey().equals("promptOnNonLocalDatabase")) {
        continue;
      }
      if (((String)entry.getKey()).startsWith("parameter.")) {
        changeLogParameters.put(((String)entry.getKey()).replaceFirst("^parameter.",""),entry.getValue());
      }
 else {
        Field field=getClass().getDeclaredField((String)entry.getKey());
        Object currentValue=field.get(this);
        if (currentValue == null) {
          String value=entry.getValue().toString().trim();
          if (field.getType().equals(Boolean.class)) {
            field.set(this,Boolean.valueOf(value));
          }
 else {
            field.set(this,value);
          }
        }
      }
    }
 catch (    NoSuchFieldException nsfe) {
      if (strict) {
        throw new CommandLineParsingException("Unknown parameter: '" + entry.getKey() + "'");
      }
 else {
        LogFactory.getInstance().getLog().info("Ignored parameter: " + entry.getKey());
      }
    }
catch (    Exception e) {
      throw new CommandLineParsingException("Unknown parameter: '" + entry.getKey() + "'");
    }
  }
}
