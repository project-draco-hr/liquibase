{
  Change[] inverses=createInverses();
  if (inverses == null) {
    throw new RollbackImpossibleException("No inverse to " + getClass().getName() + " created");
  }
  List<SqlStatement> statements=new ArrayList<SqlStatement>();
  try {
    for (    Change inverse : inverses) {
      if (!inverse.supports(database)) {
        throw new RollbackImpossibleException(inverse.getChangeMetaData().getName() + " is not supported on " + database.getShortName());
      }
      statements.addAll(Arrays.asList(inverse.generateStatements(database)));
    }
  }
 catch (  UnsupportedChangeException e) {
    throw new RollbackImpossibleException(e);
  }
  return statements.toArray(new SqlStatement[statements.size()]);
}
