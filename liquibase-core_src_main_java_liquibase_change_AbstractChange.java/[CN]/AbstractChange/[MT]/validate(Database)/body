{
  ValidationErrors changeValidationErrors=new ValidationErrors();
  for (  ChangeParameterMetaData param : getChangeMetaData().getParameters().values()) {
    if (param.isRequiredFor(database) && param.getCurrentValue(this) == null) {
      changeValidationErrors.addError(param.getParameterName() + " is required for " + getChangeMetaData().getName()+ " on "+ database.getShortName());
    }
  }
  if (changeValidationErrors.hasErrors()) {
    return changeValidationErrors;
  }
  String unsupportedWarning=getChangeMetaData().getName() + " is not supported on " + database.getShortName();
  boolean sawUnsupportedError=false;
  SqlStatement[] statements;
  statements=generateStatements(database);
  if (statements != null) {
    for (    SqlStatement statement : statements) {
      boolean supported=SqlGeneratorFactory.getInstance().supports(statement,database);
      if (!supported && !sawUnsupportedError) {
        if (!statement.skipOnUnsupported()) {
          changeValidationErrors.addError(unsupportedWarning);
          sawUnsupportedError=true;
        }
      }
 else {
        changeValidationErrors.addAll(SqlGeneratorFactory.getInstance().validate(statement,database));
      }
    }
  }
  return changeValidationErrors;
}
