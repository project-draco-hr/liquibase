{
  ValidationErrors changeValidationErrors=new ValidationErrors();
  for (  ChangeParameterMetaData param : getChangeMetaData().getParameters()) {
    if (param.isRequiredFor(database) && param.getCurrentValue(this) == null) {
      changeValidationErrors.addError(param.getParameterName() + " is required for " + getChangeMetaData().getName()+ " on "+ database.getTypeName());
    }
  }
  if (changeValidationErrors.hasErrors()) {
    return changeValidationErrors;
  }
  for (  SqlStatement statement : generateStatements(database)) {
    boolean supported=SqlGeneratorFactory.getInstance().supports(statement,database);
    if (!supported) {
      if (statement.skipOnUnsupported()) {
        LogFactory.getLogger().info(getChangeMetaData().getName() + " is not supported on " + database.getTypeName()+ " but will continue");
      }
 else {
        changeValidationErrors.addError(getChangeMetaData().getName() + " is not supported on " + database.getTypeName());
      }
    }
 else {
      changeValidationErrors.addAll(SqlGeneratorFactory.getInstance().validate(statement,database));
    }
  }
  return changeValidationErrors;
}
