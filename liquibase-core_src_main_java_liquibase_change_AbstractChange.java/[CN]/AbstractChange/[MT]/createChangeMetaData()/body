{
  try {
    DatabaseChange databaseChange=this.getClass().getAnnotation(DatabaseChange.class);
    if (databaseChange == null) {
      throw new UnexpectedLiquibaseException("No @DatabaseChange annotation for " + getClass().getName());
    }
    Set<ChangeParameterMetaData> params=new HashSet<ChangeParameterMetaData>();
    for (    PropertyDescriptor property : Introspector.getBeanInfo(this.getClass()).getPropertyDescriptors()) {
      Method readMethod=property.getReadMethod();
      Method writeMethod=property.getWriteMethod();
      if (readMethod != null && writeMethod != null) {
        DatabaseChangeProperty annotation=readMethod.getAnnotation(DatabaseChangeProperty.class);
        if (annotation == null || annotation.includeInMetaData()) {
          ChangeParameterMetaData param=createChangeParameterMetadata(property.getDisplayName());
          params.add(param);
        }
      }
    }
    return new ChangeMetaData(databaseChange.name(),databaseChange.description(),databaseChange.priority(),databaseChange.appliesTo(),params);
  }
 catch (  Throwable e) {
    throw new UnexpectedLiquibaseException(e);
  }
}
