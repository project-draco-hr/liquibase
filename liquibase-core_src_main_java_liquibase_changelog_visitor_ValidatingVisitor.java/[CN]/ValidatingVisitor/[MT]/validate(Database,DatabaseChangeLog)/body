{
  this.database=database;
  PreconditionContainer preconditions=changeLog.getPreconditions();
  try {
    if (preconditions == null) {
      return;
    }
    preconditions.check(database,changeLog,null);
  }
 catch (  PreconditionFailedException e) {
    LogFactory.getLogger().debug("Precondition Failed: " + e.getMessage(),e);
    failedPreconditions.addAll(e.getFailedPreconditions());
  }
catch (  PreconditionErrorException e) {
    LogFactory.getLogger().debug("Precondition Error: " + e.getMessage(),e);
    errorPreconditions.addAll(e.getErrorPreconditions());
  }
 finally {
    try {
      if (database.getConnection() != null) {
        database.rollback();
      }
    }
 catch (    DatabaseException e) {
      LogFactory.getLogger().warning("Error rolling back after precondition check",e);
    }
  }
}
