{
  if (constraintsNode == null) {
    return;
  }
  ConstraintsConfig constraints=new ConstraintsConfig();
  constraints.setNullable(constraintsNode.getChildValue(null,"nullable",Boolean.class));
  constraints.setPrimaryKey(constraintsNode.getChildValue(null,"primaryKey",Boolean.class));
  constraints.setPrimaryKeyName(constraintsNode.getChildValue(null,"primaryKeyName",String.class));
  constraints.setPrimaryKeyTablespace(constraintsNode.getChildValue(null,"primaryKeyTablespace",String.class));
  constraints.setReferences(constraintsNode.getChildValue(null,"references",String.class));
  constraints.setReferencedTableName(constraintsNode.getChildValue(null,"referencedTableName",String.class));
  constraints.setReferencedColumnNames(constraintsNode.getChildValue(null,"referencedColumnNames",String.class));
  constraints.setUnique(constraintsNode.getChildValue(null,"unique",Boolean.class));
  constraints.setUniqueConstraintName(constraintsNode.getChildValue(null,"uniqueConstraintName",String.class));
  constraints.setCheckConstraint(constraintsNode.getChildValue(null,"checkConstraint",String.class));
  constraints.setDeleteCascade(constraintsNode.getChildValue(null,"deleteCascade",Boolean.class));
  constraints.setForeignKeyName(constraintsNode.getChildValue(null,"foreignKeyName",String.class));
  constraints.setInitiallyDeferred(constraintsNode.getChildValue(null,"initiallyDeferred",Boolean.class));
  constraints.setDeferrable(constraintsNode.getChildValue(null,"deferrable",Boolean.class));
  setConstraints(constraints);
}
