{
  name=parsedNode.getChildValue(null,"name",String.class);
  type=parsedNode.getChildValue(null,"type",String.class);
  encoding=parsedNode.getChildValue(null,"encoding",String.class);
  autoIncrement=parsedNode.getChildValue(null,"autoIncrement",Boolean.class);
  startWith=parsedNode.getChildValue(null,"startWith",BigInteger.class);
  incrementBy=parsedNode.getChildValue(null,"incrementBy",BigInteger.class);
  remarks=parsedNode.getChildValue(null,"remarks",String.class);
  value=parsedNode.getChildValue(null,"value",String.class);
  valueNumeric=parsedNode.getChildValue(null,"valueNumeric",Double.class);
  valueDate=parsedNode.getChildValue(null,"valueDate",Date.class);
  valueBoolean=parsedNode.getChildValue(null,"valueBoolean",Boolean.class);
  valueBlobFile=parsedNode.getChildValue(null,"valueBlobFile",String.class);
  valueClobFile=parsedNode.getChildValue(null,"valueClobFile",String.class);
  String valueComputedString=parsedNode.getChildValue(null,"valueComputed",String.class);
  if (valueComputedString != null) {
    valueComputed=new DatabaseFunction(valueComputedString);
  }
  String valueSequenceNextString=parsedNode.getChildValue(null,"valueSequenceNext",String.class);
  if (valueSequenceNextString != null) {
    valueSequenceNext=new SequenceNextValueFunction(valueSequenceNextString);
  }
  String valueSequenceCurrentString=parsedNode.getChildValue(null,"valueSequenceCurrent",String.class);
  if (valueSequenceCurrentString != null) {
    valueSequenceCurrent=new SequenceCurrentValueFunction(valueSequenceCurrentString);
  }
  defaultValue=parsedNode.getChildValue(null,"defaultValue",String.class);
  defaultValueNumeric=parsedNode.getChildValue(null,"defaultValueNumeric",Double.class);
  defaultValueDate=parsedNode.getChildValue(null,"defaultValueDate",Date.class);
  defaultValueBoolean=parsedNode.getChildValue(null,"defaultValueBoolean",Boolean.class);
  String defaultValueComputedString=parsedNode.getChildValue(null,"defaultValueComputed",String.class);
  if (defaultValueComputedString != null) {
    defaultValueComputed=new DatabaseFunction(defaultValueComputedString);
  }
  String defaultValueSequenceNextString=parsedNode.getChildValue(null,"defaultValueSequenceNext",String.class);
  if (defaultValueSequenceNextString != null) {
    defaultValueSequenceNext=new SequenceNextValueFunction(defaultValueSequenceNextString);
  }
  loadConstraints(parsedNode.getChild(null,"constraints"));
}
