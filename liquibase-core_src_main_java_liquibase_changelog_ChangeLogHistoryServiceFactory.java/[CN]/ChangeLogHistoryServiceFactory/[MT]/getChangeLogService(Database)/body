{
  if (services.containsKey(database)) {
    return services.get(database);
  }
  SortedSet<ChangeLogHistoryService> foundServices=new TreeSet<ChangeLogHistoryService>(new Comparator<ChangeLogHistoryService>(){
    @Override public int compare(    ChangeLogHistoryService o1,    ChangeLogHistoryService o2){
      return -1 * new Integer(o1.getPriority()).compareTo(o2.getPriority());
    }
  }
);
  for (  ChangeLogHistoryService service : registry) {
    if (service.supports(database)) {
      foundServices.add(service);
    }
  }
  if (foundServices.size() == 0) {
    throw new UnexpectedLiquibaseException("Cannot find ChangeLogHistoryService for " + database.getShortName());
  }
  try {
    ChangeLogHistoryService service=foundServices.iterator().next().getClass().newInstance();
    service.setDatabase(database);
    services.put(database,service);
    return service;
  }
 catch (  Exception e) {
    throw new UnexpectedLiquibaseException(e);
  }
}
