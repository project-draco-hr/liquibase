{
  if (runtimeContexts.isEmpty()) {
    return true;
  }
  if (expression.trim().equals(":TRUE")) {
    return true;
  }
  if (expression.trim().equals(":FALSE")) {
    return false;
  }
  while (expression.contains("(")) {
    Pattern pattern=Pattern.compile("(.*?)\\((.*?)\\)(.*)");
    Matcher matcher=pattern.matcher(expression);
    if (!matcher.matches()) {
      throw new UnexpectedLiquibaseException("Cannot parse context pattern " + expression);
    }
    String parenExpression=matcher.group(2);
    parenExpression=":" + String.valueOf(matches(parenExpression,runtimeContexts)).toUpperCase();
    expression=matcher.group(1) + " " + parenExpression+ " "+ matcher.group(3);
  }
  String[] orSplit=expression.split("\\s+or\\s+");
  if (orSplit.length > 1) {
    for (    String split : orSplit) {
      if (matches(split,runtimeContexts)) {
        return true;
      }
    }
    return false;
  }
  String[] andSplit=expression.split("\\s+and\\s+");
  if (andSplit.length > 1) {
    for (    String split : andSplit) {
      if (!matches(split,runtimeContexts)) {
        return false;
      }
    }
    return true;
  }
  boolean notExpression=false;
  if (expression.startsWith("!")) {
    notExpression=true;
    expression=expression.substring(1);
  }
  for (  String context : runtimeContexts.getContexts()) {
    if (context.equalsIgnoreCase(expression)) {
      if (notExpression) {
        return false;
      }
 else {
        return true;
      }
    }
  }
  if (notExpression) {
    return true;
  }
 else {
    return false;
  }
}
