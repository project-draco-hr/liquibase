{
  Database database=createMock(Database.class);
  database.checkDatabaseChangeLogLockTable();
  expectLastCall().anyTimes();
  expect(database.queryForObject(isA(SelectFromDatabaseChangeLogLockStatement.class),eq(Boolean.class),isA(ArrayList.class))).andReturn(true);
  expect(database.queryForObject(isA(SelectFromDatabaseChangeLogLockStatement.class),eq(Boolean.class),isA(ArrayList.class))).andReturn(true);
  expect(database.queryForObject(isA(SelectFromDatabaseChangeLogLockStatement.class),eq(Boolean.class),isA(ArrayList.class))).andReturn(true);
  expect(database.queryForObject(isA(SelectFromDatabaseChangeLogLockStatement.class),eq(Boolean.class),isA(ArrayList.class))).andReturn(false);
  database.comment("Lock Database");
  expectLastCall();
  expect(database.update(isA(LockDatabaseChangeLogStatement.class),isA(ArrayList.class))).andReturn(1);
  database.commit();
  expectLastCall();
  replay(database);
  LockManager manager=LockManager.getInstance(database);
  manager.setChangeLogLockRecheckTime(1);
  manager.waitForLock();
  verify(database);
}
