{
  AddForeignKeyConstraintChange change=new AddForeignKeyConstraintChange();
  change.setConstraintName("FK_NAME");
  change.setBaseTableSchemaName("BASE_SCHEMA_NAME");
  change.setBaseTableName("BASE_TABLE_NAME");
  change.setBaseColumnNames("BASE_COL_NAME");
  change.setReferencedTableSchemaName("REF_SCHEMA_NAME");
  change.setReferencedTableName("REF_TABLE_NAME");
  change.setReferencedColumnNames("REF_COL_NAME");
  change.setDeferrable(true);
  change.setOnDelete("CASCADE");
  change.setOnUpdate("CASCADE");
  change.setInitiallyDeferred(true);
  change.setReferencesUniqueColumn(false);
  Element node=new XMLChangeLogSerializer(DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument()).createNode(change);
  assertEquals("addForeignKeyConstraint",node.getTagName());
  assertEquals("FK_NAME",node.getAttribute("constraintName"));
  assertEquals("BASE_SCHEMA_NAME",node.getAttribute("baseTableSchemaName"));
  assertEquals("BASE_TABLE_NAME",node.getAttribute("baseTableName"));
  assertEquals("BASE_COL_NAME",node.getAttribute("baseColumnNames"));
  assertEquals("REF_SCHEMA_NAME",node.getAttribute("referencedTableSchemaName"));
  assertEquals("REF_TABLE_NAME",node.getAttribute("referencedTableName"));
  assertEquals("REF_COL_NAME",node.getAttribute("referencedColumnNames"));
  assertEquals("true",node.getAttribute("deferrable"));
  assertEquals("true",node.getAttribute("initiallyDeferred"));
  assertEquals("true",node.getAttribute("referencedToPrimary"));
  assertEquals("CASCADE",node.getAttribute("onDelete"));
  assertEquals("CASCADE",node.getAttribute("onUpdate"));
}
