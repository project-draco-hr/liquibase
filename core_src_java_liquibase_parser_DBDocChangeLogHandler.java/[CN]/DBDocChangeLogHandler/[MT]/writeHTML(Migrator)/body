{
  copyFile("liquibase/dbdoc/stylesheet.css");
  copyFile("liquibase/dbdoc/index.html");
  copyFile("liquibase/dbdoc/globalnav.html");
  copyFile("liquibase/dbdoc/overview-summary.html");
  DatabaseSnapshot snapshot=new DatabaseSnapshot(migrator.getDatabase());
  new ChangeLogListWriter(rootOutputDir).writeHTML(changeLogs);
  new TableListWriter(rootOutputDir).writeHTML(new TreeSet<Object>(snapshot.getTables()));
  new AuthorListWriter(rootOutputDir).writeHTML(new TreeSet<Object>(changesByAuthor.keySet()));
  for (  String author : changesByAuthor.keySet()) {
    authorWriter.writeHTML(author,changesByAuthor.get(author),changesToRunByAuthor.get(author),migrator,rootChangeLog);
  }
  for (  Table table : snapshot.getTables()) {
    tableWriter.writeHTML(table,changesByObject.get(table),changesToRunByObject.get(table),migrator,rootChangeLog);
  }
  for (  Column column : snapshot.getColumns()) {
    columnWriter.writeHTML(column,changesByObject.get(column),changesToRunByObject.get(column),migrator,rootChangeLog);
  }
  for (  DatabaseChangeLog changeLog : changeLogs) {
    changeLogWriter.writeChangeLog(changeLog);
  }
  pendingChangesWriter.writeHTML("index",null,changesToRun,migrator,rootChangeLog);
  pendingSQLWriter.writeHTML("sql",null,changesToRun,migrator,rootChangeLog);
  if (recentChanges.size() > MAX_RECENT_CHANGE) {
    recentChanges=recentChanges.subList(0,MAX_RECENT_CHANGE);
  }
  recentChangesWriter.writeHTML("index",recentChanges,null,migrator,rootChangeLog);
}
