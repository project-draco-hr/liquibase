{
  List<SqlStatement> statements=new ArrayList<SqlStatement>();
  String schemaName=getSchemaName() == null ? database.getDefaultSchemaName() : getSchemaName();
  if (database instanceof SQLiteDatabase) {
    AlterTableVisitor rename_alter_visitor=new AlterTableVisitor(){
      public ColumnConfig[] getColumnsToAdd(){
        return new ColumnConfig[0];
      }
      public boolean createThisColumn(      ColumnConfig column){
        return !column.getName().equals(getColumnName());
      }
      public boolean copyThisColumn(      ColumnConfig column){
        return !column.getName().equals(getColumnName());
      }
      public boolean createThisIndex(      Index index){
        return !index.getColumns().contains(getColumnName());
      }
    }
;
    try {
      statements.addAll(SQLiteDatabase.getAlterTableStatements(rename_alter_visitor,database,getSchemaName(),getTableName()));
    }
 catch (    JDBCException e) {
      e.printStackTrace();
    }
  }
 else {
    statements.add(new DropColumnStatement(schemaName,getTableName(),getColumnName()));
    if (database instanceof DB2Database) {
      statements.add(new ReorganizeTableStatement(schemaName,getTableName()));
    }
  }
  return statements.toArray(new SqlStatement[statements.size()]);
}
