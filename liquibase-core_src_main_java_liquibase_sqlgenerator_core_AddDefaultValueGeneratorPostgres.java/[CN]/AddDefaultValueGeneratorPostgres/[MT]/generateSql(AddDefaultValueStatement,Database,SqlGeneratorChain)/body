{
  if (!(statement.getDefaultValue() instanceof SequenceNextValueFunction)) {
    return super.generateSql(statement,database,sqlGeneratorChain);
  }
  List<Sql> commands=new ArrayList<Sql>(Arrays.asList(super.generateSql(statement,database,sqlGeneratorChain)));
  SequenceNextValueFunction sequenceFunction=(SequenceNextValueFunction)statement.getDefaultValue();
  Sql alterSequenceOwner=new UnparsedSql("ALTER SEQUENCE " + database.escapeSequenceName(statement.getCatalogName(),statement.getSchemaName(),sequenceFunction.getValue()) + " OWNED BY "+ database.escapeTableName(statement.getCatalogName(),statement.getSchemaName(),statement.getTableName())+ "."+ database.escapeObjectName(statement.getColumnName(),Column.class),getAffectedColumn(statement),getAffectedSequence(sequenceFunction));
  commands.add(alterSequenceOwner);
  return commands.toArray(new Sql[commands.size()]);
}
