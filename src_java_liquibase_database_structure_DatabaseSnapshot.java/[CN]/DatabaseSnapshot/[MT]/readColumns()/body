{
  updateListeners("Reading columns for " + database.toString() + " ...");
  ResultSet rs=databaseMetaData.getColumns(database.getCatalogName(),database.getSchemaName(),null,null);
  while (rs.next()) {
    Column columnInfo=new Column();
    String tableName=rs.getString("TABLE_NAME");
    String columnName=rs.getString("COLUMN_NAME");
    if (database.isSystemTable(tableName) || database.isLiquibaseTable(tableName)) {
      continue;
    }
    Table table=tablesMap.get(tableName);
    if (table == null) {
      View view=viewsMap.get(tableName);
      if (view == null) {
        throw new JDBCException("Could not find table or view " + tableName + " for column "+ columnName);
      }
 else {
        columnInfo.setView(view);
        view.getColumns().add(columnInfo);
      }
    }
 else {
      columnInfo.setTable(table);
      table.getColumns().add(columnInfo);
    }
    columnInfo.setName(columnName);
    columnInfo.setDataType(rs.getInt("DATA_TYPE"));
    columnInfo.setColumnSize(rs.getInt("COLUMN_SIZE"));
    columnInfo.setDecimalDigits(rs.getInt("DECIMAL_DIGITS"));
    columnInfo.setTypeName(rs.getString("TYPE_NAME"));
    columnInfo.setDefaultValue(rs.getString("COLUMN_DEF"));
    int nullable=rs.getInt("NULLABLE");
    if (nullable == DatabaseMetaData.columnNoNulls) {
      columnInfo.setNullable(false);
    }
 else     if (nullable == DatabaseMetaData.columnNullable) {
      columnInfo.setNullable(true);
    }
    columnsMap.put(columnName,columnInfo);
  }
  rs.close();
}
