{
  if (this.ranChangeSetList == null) {
    Database database=getDatabase();
    String databaseChangeLogTableName=getDatabase().escapeTableName(getLiquibaseCatalogName(),getLiquibaseSchemaName(),getDatabaseChangeLogTableName());
    List<RanChangeSet> ranChangeSetList=new ArrayList<RanChangeSet>();
    if (hasDatabaseChangeLogTable()) {
      LogFactory.getLogger().info("Reading from " + databaseChangeLogTableName);
      List<Map<String,?>> results=queryDatabaseChangeLogTable(database);
      for (      Map rs : results) {
        String fileName=rs.get("FILENAME").toString();
        String author=rs.get("AUTHOR").toString();
        String id=rs.get("ID").toString();
        String md5sum=rs.get("MD5SUM") == null ? null : rs.get("MD5SUM").toString();
        String description=rs.get("DESCRIPTION") == null ? null : rs.get("DESCRIPTION").toString();
        String comments=rs.get("COMMENTS") == null ? null : rs.get("COMMENTS").toString();
        Object tmpDateExecuted=rs.get("DATEEXECUTED");
        Date dateExecuted=null;
        if (tmpDateExecuted instanceof Date) {
          dateExecuted=(Date)tmpDateExecuted;
        }
 else {
          DateFormat df=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
          try {
            dateExecuted=df.parse((String)tmpDateExecuted);
          }
 catch (          ParseException e) {
          }
        }
        String tmpOrderExecuted=rs.get("ORDEREXECUTED").toString();
        Integer orderExecuted=(tmpOrderExecuted == null ? null : new Integer(tmpOrderExecuted));
        String tag=rs.get("TAG") == null ? null : rs.get("TAG").toString();
        String execType=rs.get("EXECTYPE") == null ? null : rs.get("EXECTYPE").toString();
        ContextExpression contexts=new ContextExpression((String)rs.get("CONTEXTS"));
        Labels labels=new Labels((String)rs.get("LABELS"));
        String deploymentId=(String)rs.get("DEPLOYMENT_ID");
        try {
          RanChangeSet ranChangeSet=new RanChangeSet(fileName,id,author,CheckSum.parse(md5sum),dateExecuted,tag,ChangeSet.ExecType.valueOf(execType),description,comments,contexts,labels,deploymentId);
          ranChangeSet.setOrderExecuted(orderExecuted);
          ranChangeSetList.add(ranChangeSet);
        }
 catch (        IllegalArgumentException e) {
          LogFactory.getLogger().severe("Unknown EXECTYPE from database: " + execType);
          throw e;
        }
      }
    }
    this.ranChangeSetList=ranChangeSetList;
  }
  return Collections.unmodifiableList(ranChangeSetList);
}
