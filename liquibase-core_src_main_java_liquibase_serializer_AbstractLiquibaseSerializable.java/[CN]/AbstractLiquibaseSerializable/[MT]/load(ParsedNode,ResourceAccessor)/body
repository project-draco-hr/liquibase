{
  for (  ParsedNode childNode : parsedNode.getChildren()) {
    if (!shouldAutoLoad(childNode)) {
      continue;
    }
    try {
      if (this.getSerializableFields().contains(childNode.getName())) {
        Class dataTypeClass=this.getSerializableFieldDataTypeClass(childNode.getName());
        if (Collection.class.isAssignableFrom(dataTypeClass)) {
          Type[] dataTypeClassParameters=getSerializableFieldDataTypeClassParameters(childNode.getName());
          if (dataTypeClassParameters.length == 1) {
            Class collectionType=null;
            if (dataTypeClassParameters[0] instanceof Class) {
              collectionType=(Class)dataTypeClassParameters[0];
            }
 else             if (dataTypeClassParameters[0] instanceof ParameterizedType) {
              collectionType=(Class)((ParameterizedType)dataTypeClassParameters[0]).getRawType();
            }
            if (collectionType != null && LiquibaseSerializable.class.isAssignableFrom(collectionType) && !collectionType.isInterface() && !Modifier.isAbstract(collectionType.getModifiers())) {
              String elementName=((LiquibaseSerializable)collectionType.newInstance()).getSerializedObjectName();
              List<ParsedNode> elementNodes=Collections.emptyList();
              if (childNode.getName().equals(elementName)) {
                elementNodes=Collections.singletonList(childNode);
              }
 else               if (childNode.getName().equals(childNode.getName())) {
                elementNodes=childNode.getChildren(null,elementName);
              }
              if (!elementNodes.isEmpty()) {
                Collection collection=((Collection)getSerializableFieldValue(childNode.getName()));
                for (                ParsedNode node : elementNodes) {
                  LiquibaseSerializable childObject=(LiquibaseSerializable)collectionType.newInstance();
                  childObject.load(node,resourceAccessor);
                  collection.add(childObject);
                }
              }
            }
          }
        }
        if (LiquibaseSerializable.class.isAssignableFrom(dataTypeClass)) {
          if (!dataTypeClass.isInterface() && !Modifier.isAbstract(dataTypeClass.getModifiers())) {
            LiquibaseSerializable childObject=(LiquibaseSerializable)dataTypeClass.newInstance();
            childObject.load(childNode,resourceAccessor);
            setSerializableFieldValue(childNode.getName(),childObject);
          }
        }
 else         if (childNode.getValue() != null) {
          ObjectUtil.setProperty(this,childNode.getName(),convertEscaped(childNode.getValue().toString()));
        }
      }
 else {
        for (        String field : this.getSerializableFields()) {
          Class dataTypeClass=this.getSerializableFieldDataTypeClass(field);
          if (Collection.class.isAssignableFrom(dataTypeClass)) {
            Type[] dataTypeClassParameters=getSerializableFieldDataTypeClassParameters(field);
            if (dataTypeClassParameters.length == 1) {
              Class collectionType=null;
              if (dataTypeClassParameters[0] instanceof Class) {
                collectionType=(Class)dataTypeClassParameters[0];
              }
 else               if (dataTypeClassParameters[0] instanceof ParameterizedType) {
                collectionType=(Class)((ParameterizedType)dataTypeClassParameters[0]).getRawType();
              }
              if (collectionType != null && LiquibaseSerializable.class.isAssignableFrom(collectionType) && !collectionType.isInterface() && !Modifier.isAbstract(collectionType.getModifiers())) {
                String elementName=((LiquibaseSerializable)collectionType.newInstance()).getSerializedObjectName();
                List<ParsedNode> elementNodes=Collections.emptyList();
                if (childNode.getName().equals(elementName)) {
                  elementNodes=Collections.singletonList(childNode);
                }
 else                 if (childNode.getName().equals(field)) {
                  elementNodes=childNode.getChildren(null,elementName);
                }
                if (!elementNodes.isEmpty()) {
                  Collection collection=((Collection)getSerializableFieldValue(field));
                  for (                  ParsedNode node : elementNodes) {
                    LiquibaseSerializable childObject=(LiquibaseSerializable)collectionType.newInstance();
                    childObject.load(node,resourceAccessor);
                    collection.add(childObject);
                  }
                }
              }
            }
          }
        }
      }
    }
 catch (    Exception e) {
      throw new ParsedNodeException("Error setting property",e);
    }
  }
  if (parsedNode.getValue() != null) {
    for (    String field : this.getSerializableFields()) {
      SerializationType type=this.getSerializableFieldType(field);
      if (type == SerializationType.DIRECT_VALUE) {
        Object value=parsedNode.getValue(String.class);
        value=convertEscaped(value);
        ObjectUtil.setProperty(this,field,value);
      }
 else       if (type == SerializationType.NAMED_FIELD) {
        Object value=parsedNode.getChildValue(null,field,Object.class);
        value=convertEscaped(value);
        ObjectUtil.setProperty(this,field,value);
      }
    }
  }
}
