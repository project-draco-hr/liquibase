{
  try {
    new AbstractChange(){
      @Override public String getConfirmationMessage(){
        return null;
      }
      @Override public SqlStatement[] generateStatements(      Database database){
        return null;
      }
      @Override public String getSerializedObjectNamespace(){
        return STANDARD_OBJECTS_NAMESPACE;
      }
    }
.createChangeMetaData();
    fail("Did not throw exception");
  }
 catch (  UnexpectedLiquibaseException e) {
    assertTrue("Incorrect message: " + e.getMessage(),e.getMessage().startsWith("liquibase.exception.UnexpectedLiquibaseException: No @DatabaseChange annotation for "));
  }
}
