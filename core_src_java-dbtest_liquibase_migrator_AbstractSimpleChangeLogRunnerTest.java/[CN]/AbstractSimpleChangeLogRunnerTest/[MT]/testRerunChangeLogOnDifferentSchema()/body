{
  if (database == null) {
    return;
  }
  if (!database.supportsSchemas()) {
    return;
  }
  runCompleteChangeLog();
  DatabaseConnection connection2=TestContext.getInstance().getConnection(url);
  Database database2=DatabaseFactory.getInstance().findCorrectDatabaseImplementation(connection2);
  database2.setDefaultSchemaName("liquibaseb");
{
    Field changeLogTableExistsField=AbstractDatabase.class.getDeclaredField("changeLogTableExists");
    changeLogTableExistsField.setAccessible(true);
    changeLogTableExistsField.set(database2,false);
    Field changeLogCreateAttemptedField=AbstractDatabase.class.getDeclaredField("changeLogCreateAttempted");
    changeLogCreateAttemptedField.setAccessible(true);
    changeLogCreateAttemptedField.set(database2,false);
    Field changeLogLockTableExistsField=AbstractDatabase.class.getDeclaredField("changeLogLockTableExists");
    changeLogLockTableExistsField.setAccessible(true);
    changeLogLockTableExistsField.set(database2,false);
    Field changeLogLockCreateAttemptedField=AbstractDatabase.class.getDeclaredField("changeLogLockCreateAttempted");
    changeLogLockCreateAttemptedField.setAccessible(true);
    changeLogLockCreateAttemptedField.set(database2,false);
  }
  database2.checkDatabaseChangeLogTable();
  database2.dropDatabaseObjects(database2.getDefaultSchemaName());
  dropDatabaseChangeLogTable(database2.getDefaultSchemaName(),database2);
  JUnitFileOpener fileOpener=new JUnitFileOpener();
  Liquibase liquibase=new Liquibase(completeChangeLog,fileOpener,database2);
  liquibase.update(this.contexts);
}
