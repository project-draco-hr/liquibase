{
  String shouldRunProperty=System.getProperty(Liquibase.SHOULD_RUN_SYSTEM_PROPERTY);
  if (shouldRunProperty != null && !Boolean.valueOf(shouldRunProperty)) {
    LogFactory.getLogger().info("Liquibase did not run because '" + Liquibase.SHOULD_RUN_SYSTEM_PROPERTY + "' system property was set to false");
    return;
  }
  if (!shouldRun) {
    LogFactory.getLogger().info("Liquibase did not run because 'shouldRun' " + "property was set to false on " + getBeanName() + " Liquibase Spring bean.");
    return;
  }
  Connection c=null;
  Liquibase liquibase=null;
  try {
    c=getDataSource().getConnection();
    liquibase=createLiquibase(c);
    generateRollbackFile(liquibase);
    performUpdate(liquibase);
  }
 catch (  SQLException e) {
    throw new DatabaseException(e);
  }
 finally {
    if (c != null) {
      try {
        c.rollback();
        c.close();
      }
 catch (      SQLException e) {
      }
    }
  }
}
