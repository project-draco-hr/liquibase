{
  StringBuffer message=new StringBuffer();
  message.append("Validation Failed:").append(StreamUtil.getLineSeparator());
  if (invalidMD5Sums.size() > 0) {
    message.append("     ").append(invalidMD5Sums.size()).append(" change sets check sum").append(StreamUtil.getLineSeparator());
    for (int i=0; i < invalidMD5Sums.size(); i++) {
      if (i > 25) {
        break;
      }
      ChangeSet invalid=invalidMD5Sums.get(i);
      message.append("          ").append(invalid.toString(true));
      message.append(StreamUtil.getLineSeparator());
    }
  }
  if (failedPreconditions.size() > 0) {
    message.append("     ").append(failedPreconditions.size()).append(" preconditions failed").append(StreamUtil.getLineSeparator());
    for (    FailedPrecondition invalid : failedPreconditions) {
      message.append("     ").append(invalid.toString());
      message.append(StreamUtil.getLineSeparator());
    }
  }
  if (errorPreconditions.size() > 0) {
    message.append("     ").append(errorPreconditions.size()).append(" preconditions generated an error").append(StreamUtil.getLineSeparator());
    for (    ErrorPrecondition invalid : errorPreconditions) {
      message.append("     ").append(invalid.toString());
      message.append(StreamUtil.getLineSeparator());
    }
  }
  if (duplicateChangeSets.size() > 0) {
    message.append("     ").append(duplicateChangeSets.size()).append(" change sets had duplicate identifiers").append(StreamUtil.getLineSeparator());
    for (    ChangeSet invalid : duplicateChangeSets) {
      message.append("          ").append(invalid.toString(false));
      message.append(StreamUtil.getLineSeparator());
    }
  }
  if (setupExceptions.size() > 0) {
    message.append("     ").append(setupExceptions.size()).append(" changes have failures").append(StreamUtil.getLineSeparator());
    for (    SetupException invalid : setupExceptions) {
      message.append("          ").append(invalid.toString());
      message.append(StreamUtil.getLineSeparator());
    }
  }
  if (changeValidationExceptions.size() > 0) {
    message.append("     ").append(changeValidationExceptions.size()).append(" changes have validation errors").append(StreamUtil.getLineSeparator());
    for (    Throwable invalid : changeValidationExceptions) {
      message.append("          ").append(invalid.toString());
      message.append(StreamUtil.getLineSeparator());
    }
  }
  if (validationErrors.hasErrors()) {
    message.append("     ").append(validationErrors.getErrorMessages().size()).append(" changes have validation failures").append(StreamUtil.getLineSeparator());
    for (    String invalid : validationErrors.getErrorMessages()) {
      message.append("          ").append(invalid);
      message.append(StreamUtil.getLineSeparator());
    }
  }
  return message.toString();
}
