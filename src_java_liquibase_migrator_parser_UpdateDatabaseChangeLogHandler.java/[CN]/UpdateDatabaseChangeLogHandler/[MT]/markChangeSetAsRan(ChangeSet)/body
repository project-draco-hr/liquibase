{
  Migrator migrator=changeSet.getDatabaseChangeLog().getMigrator();
  String dateValue=migrator.getDatabase().getCurrentDateTimeFunction();
  String sql="INSERT INTO DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, MD5SUM, DESCRIPTION, COMMENTS, LIQUIBASE) VALUES ('?', '?', '?', " + dateValue + ", '?', '?', '?', '?')";
  sql=sql.replaceFirst("\\?",escapeStringForDatabase(escapeStringForDatabase(changeSet.getId())));
  sql=sql.replaceFirst("\\?",escapeStringForDatabase(changeSet.getAuthor()));
  sql=sql.replaceFirst("\\?",escapeStringForDatabase(changeSet.getDatabaseChangeLog().getFilePath()));
  sql=sql.replaceFirst("\\?",escapeStringForDatabase(changeSet.getMd5sum()));
  sql=sql.replaceFirst("\\?",escapeStringForDatabase(limitSize(changeSet.getDescription())));
  sql=sql.replaceFirst("\\?",escapeStringForDatabase(limitSize(StringUtils.trimToEmpty(changeSet.getComments()))));
  sql=sql.replaceFirst("\\?",escapeStringForDatabase(changeSet.getDatabaseChangeLog().getMigrator().getBuildVersion()));
  Writer sqlOutputWriter=migrator.getOutputSQLWriter();
  if (sqlOutputWriter == null) {
    Connection connection=migrator.getDatabase().getConnection();
    try {
      Statement statement=connection.createStatement();
      statement.executeUpdate(sql);
      statement.close();
      connection.commit();
    }
 catch (    SQLException e) {
      throw new JDBCException(e);
    }
  }
 else {
    sqlOutputWriter.write(sql + ";" + StreamUtil.getLineSeparator()+ StreamUtil.getLineSeparator());
  }
  migrator.getRanChangeSetList().add(new RanChangeSet(changeSet));
}
