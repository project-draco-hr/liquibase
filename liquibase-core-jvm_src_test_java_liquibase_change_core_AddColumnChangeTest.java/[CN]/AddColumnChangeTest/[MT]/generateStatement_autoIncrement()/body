{
  AddColumnChange refactoring=new AddColumnChange();
  refactoring.setSchemaName("SCHEMA");
  refactoring.setTableName("TAB");
  ColumnConfig column=new ColumnConfig();
  column.setName("NEWCOL");
  column.setType("TYP");
  ConstraintsConfig constraints=new ConstraintsConfig();
  constraints.setNullable(Boolean.FALSE);
  constraints.setPrimaryKey(Boolean.TRUE);
  column.setAutoIncrement(Boolean.TRUE);
  column.setConstraints(constraints);
  refactoring.addColumn(column);
  testChangeOnAll(refactoring,new GenerateAllValidator(){
    public void validate(    SqlStatement[] sqlStatements,    Database database){
      if (database instanceof DB2Database) {
        assertEquals(2,sqlStatements.length);
        assertTrue(sqlStatements[0] instanceof AddColumnStatement);
        assertTrue(sqlStatements[1] instanceof ReorganizeTableStatement);
      }
 else {
        assertEquals(1,sqlStatements.length);
        assertTrue(sqlStatements[0] instanceof AddColumnStatement);
      }
      assertTrue(((AddColumnStatement)sqlStatements[0]).isPrimaryKey());
      assertTrue(((AddColumnStatement)sqlStatements[0]).isAutoIncrement());
    }
  }
);
}
