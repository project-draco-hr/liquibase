{
  Migrator migrator=getDatabaseChangeLog().getMigrator();
  try {
    RunStatus isChangeSetRan=isChangeSetRan();
    if (shouldAlwaysRun() || !isChangeSetRan.equals(RunStatus.ALREADY_RAN)) {
      if (migrator.getMode().equals(Migrator.EXECUTE_MODE)) {
        log.finest("Reading ChangeSet: " + toString());
        for (        AbstractChange change : getRefactorings()) {
          change.executeStatement(migrator.getDatabase());
          log.finest(change.getConfirmationMessage());
        }
        migrator.getDatabase().getConnection().commit();
        log.finest("ChangeSet " + toString() + " has been successfully ran.");
      }
 else       if (migrator.getMode().equals(Migrator.OUTPUT_SQL_MODE)) {
        getDatabaseChangeLog().getMigrator().getOutputSQLWriter().write("-- Changeset " + toString() + "\n");
        for (        AbstractChange change : getRefactorings()) {
          change.saveStatement(getDatabaseChangeLog().getMigrator().getDatabase(),getDatabaseChangeLog().getMigrator().getOutputSQLWriter());
        }
      }
      if (isChangeSetRan.equals(RunStatus.NOT_RAN)) {
        markChangeSetAsRan();
      }
 else {
        markChangeSetAsReRan();
      }
    }
    migrator.getDatabase().getConnection().commit();
  }
 catch (  Exception e) {
    try {
      migrator.getDatabase().getConnection().rollback();
    }
 catch (    SQLException e1) {
      throw new MigrationFailedException("Unable to process change set: " + toString() + ": "+ e.getMessage(),e);
    }
    throw new MigrationFailedException("Unable to process change set: " + toString() + ": "+ e.getMessage(),e);
  }
}
