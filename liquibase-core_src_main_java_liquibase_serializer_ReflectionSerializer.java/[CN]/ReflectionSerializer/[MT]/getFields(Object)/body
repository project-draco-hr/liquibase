{
  if (!reflectionCache.containsKey(object.getClass())) {
    Map<String,Field> fields=new HashMap<String,Field>();
    Set<Field> allFields=new HashSet<Field>();
    Class classToExtractFieldsFrom=object.getClass();
    while (!classToExtractFieldsFrom.equals(Object.class)) {
      allFields.addAll(Arrays.asList(classToExtractFieldsFrom.getDeclaredFields()));
      classToExtractFieldsFrom=classToExtractFieldsFrom.getSuperclass();
    }
    for (    Field field : allFields) {
      if (field.getName().equals("serialVersionUID") || field.getName().equals("serializableFields")) {
        continue;
      }
      if (field.isSynthetic() || field.getName().equals("$VRc")) {
        continue;
      }
      fields.put(field.getName(),field);
      field.setAccessible(true);
    }
    reflectionCache.put(object.getClass(),fields);
  }
  return reflectionCache.get(object.getClass()).keySet();
}
