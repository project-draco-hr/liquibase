{
  if (!reflectionCache.containsKey(object.getClass())) {
    getFields(object);
  }
  Map<String,Field> fieldsByName=reflectionCache.get(object.getClass());
  Field foundField=fieldsByName.get(field);
  try {
    if (foundField == null) {
      Class<? extends Object> classToCheck=object.getClass();
      while (foundField == null && !classToCheck.equals(Object.class)) {
        try {
          foundField=classToCheck.getDeclaredField(field);
        }
 catch (        NoSuchFieldException e) {
          classToCheck=classToCheck.getSuperclass();
        }
      }
      if (foundField == null) {
        throw new UnexpectedLiquibaseException("No field " + field + " on "+ object.getClass());
      }
      foundField.setAccessible(true);
      fieldsByName.put(field,foundField);
    }
    return foundField.get(object);
  }
 catch (  Exception e) {
    throw new UnexpectedLiquibaseException(e);
  }
}
