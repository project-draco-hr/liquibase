{
  List<SqlStatement> statements=new ArrayList<SqlStatement>();
  AddColumnChange addNewColumnChange=new AddColumnChange();
  String schemaName=getSchemaName() == null ? database.getDefaultSchemaName() : getSchemaName();
  addNewColumnChange.setSchemaName(schemaName);
  addNewColumnChange.setTableName(getTableName());
  ColumnConfig columnConfig=new ColumnConfig();
  columnConfig.setName(getFinalColumnName());
  columnConfig.setType(getFinalColumnType());
  addNewColumnChange.addColumn(columnConfig);
  statements.addAll(Arrays.asList(addNewColumnChange.generateStatements(database)));
  String updateStatement="UPDATE " + database.escapeTableName(schemaName,getTableName()) + " SET "+ getFinalColumnName()+ " = "+ database.getConcatSql(getColumn1Name(),"'" + getJoinString() + "'",getColumn2Name());
  statements.add(new RawSqlStatement(updateStatement));
  DropColumnChange dropColumn1Change=new DropColumnChange();
  dropColumn1Change.setSchemaName(schemaName);
  dropColumn1Change.setTableName(getTableName());
  dropColumn1Change.setColumnName(getColumn1Name());
  statements.addAll(Arrays.asList(dropColumn1Change.generateStatements(database)));
  DropColumnChange dropColumn2Change=new DropColumnChange();
  dropColumn2Change.setSchemaName(schemaName);
  dropColumn2Change.setTableName(getTableName());
  dropColumn2Change.setColumnName(getColumn2Name());
  statements.addAll(Arrays.asList(dropColumn2Change.generateStatements(database)));
  return statements.toArray(new SqlStatement[statements.size()]);
}
