{
  if (collection.size() == 0) {
    return "[]";
  }
  String returnString="{\n";
  TreeSet sortedCollection=new TreeSet(new Comparator(){
    @Override public int compare(    Object o1,    Object o2){
      if (o1 instanceof Comparable) {
        return ((Comparable)o1).compareTo(o2);
      }
 else       if (o1 instanceof Class) {
        return ((Class)o1).getName().compareTo(((Class)o2).getName());
      }
 else {
        throw new ClassCastException(o1.getClass().getName() + " cannot be cast to java.lang.Comparable or java.lang.Class");
      }
    }
  }
);
  sortedCollection.addAll(collection.keySet());
  for (  Object key : sortedCollection) {
    returnString+=indent(indent) + key.toString() + "=\""+ collection.get(key)+ "\",\n";
  }
  returnString=returnString.replaceFirst(",$","");
  returnString+=indent(indent - 1) + "}";
  return returnString;
}
