{
  if (col.getValue() != null) {
    stmt.setString(i,col.getValue());
  }
 else   if (col.getValueBoolean() != null) {
    stmt.setBoolean(i,col.getValueBoolean());
  }
 else   if (col.getValueNumeric() != null) {
    Number number=col.getValueNumeric();
    if (number instanceof Long) {
      stmt.setLong(i,number.longValue());
    }
 else     if (number instanceof Integer) {
      stmt.setInt(i,number.intValue());
    }
 else     if (number instanceof Double) {
      stmt.setDouble(i,number.doubleValue());
    }
 else     if (number instanceof Float) {
      stmt.setFloat(i,number.floatValue());
    }
 else     if (number instanceof BigDecimal) {
      stmt.setBigDecimal(i,(BigDecimal)number);
    }
 else     if (number instanceof BigInteger) {
      stmt.setInt(i,number.intValue());
    }
  }
 else   if (col.getValueDate() != null) {
    stmt.setDate(i,new java.sql.Date(col.getValueDate().getTime()));
  }
 else {
    String valueBlobFileName=col.getValueBlobFile();
    if (valueBlobFileName != null) {
      try {
        File file=new File(valueBlobFileName);
        InputStream in;
        if (file.exists()) {
          in=new FileInputStream(file);
        }
 else {
          in=getClass().getResourceAsStream(valueBlobFileName);
        }
        stmt.setBinaryStream(i,new BufferedInputStream(in),(int)file.length());
      }
 catch (      FileNotFoundException e) {
        throw new DatabaseException(e.getMessage(),e);
      }
    }
 else     if (col.getValueClobFile() != null) {
      try {
        File file=new File(col.getValueClobFile());
        stmt.setCharacterStream(i,new BufferedReader(new FileReader(file)),(int)file.length());
      }
 catch (      FileNotFoundException e) {
        throw new DatabaseException(e.getMessage(),e);
      }
    }
 else {
      stmt.setNull(i,java.sql.Types.NULL);
    }
  }
}
