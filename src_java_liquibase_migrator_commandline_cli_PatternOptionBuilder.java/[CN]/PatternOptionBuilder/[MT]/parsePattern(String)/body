{
  int sz=pattern.length();
  char opt=' ';
  char ch=' ';
  boolean required=false;
  Object type=null;
  Options options=new Options();
  for (int i=0; i < sz; i++) {
    ch=pattern.charAt(i);
    if (!isValueCode(ch)) {
      if (opt != ' ') {
        options.addOption(OptionBuilder.hasArg(type != null).isRequired(required).withType(type).create(opt));
        required=false;
        type=null;
        opt=' ';
      }
      opt=ch;
    }
 else     if (ch == '!') {
      required=true;
    }
 else {
      type=getValueClass(ch);
    }
  }
  if (opt != ' ') {
    options.addOption(OptionBuilder.hasArg(type != null).isRequired(required).withType(type).create(opt));
  }
  return options;
}
