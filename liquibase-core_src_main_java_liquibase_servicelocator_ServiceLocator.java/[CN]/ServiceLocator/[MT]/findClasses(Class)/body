{
  logger.debug("ServiceLocator.findClasses for " + requiredInterface.getName());
  try {
    Class.forName(requiredInterface.getName());
    if (!classesBySuperclass.containsKey(requiredInterface)) {
      classesBySuperclass.put(requiredInterface,new ArrayList<Class>());
      for (      String packageName : packagesToScan) {
        logger.debug("ServiceLocator scanning " + packageName + " with resoureAccessor "+ resourceAccessor.getClass().getName());
        String path=packageName.replace('.','/');
        Enumeration<URL> resources=resourceAccessor.getResources(path);
        while (resources.hasMoreElements()) {
          URL resource=resources.nextElement();
          logger.debug("Found " + packageName + " in "+ resource.toExternalForm());
          classesBySuperclass.get(requiredInterface).addAll(findClasses(resource,packageName,requiredInterface));
        }
      }
    }
  }
 catch (  Exception e) {
    throw new ServiceNotFoundException(e);
  }
  List<Class> classes=classesBySuperclass.get(requiredInterface);
  HashSet<Class> uniqueClasses=new HashSet<Class>(classes);
  return uniqueClasses.toArray(new Class[uniqueClasses.size()]);
}
