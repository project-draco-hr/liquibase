{
  Index index=(Index)changedObject;
  if (index.getTable() != null && index.getTable().getPrimaryKey() != null && DatabaseObjectComparatorFactory.getInstance().isSameObject(index.getTable().getPrimaryKey().getBackingIndex(),changedObject,comparisonDatabase)) {
    return ChangeGeneratorFactory.getInstance().fixChanged(index.getTable().getPrimaryKey(),differences,control,referenceDatabase,comparisonDatabase);
  }
  DropIndexChange dropIndexChange=createDropIndexChange();
  dropIndexChange.setTableName(index.getTable().getName());
  dropIndexChange.setIndexName(index.getName());
  CreateIndexChange addIndexChange=createCreateIndexChange();
  addIndexChange.setTableName(index.getTable().getName());
  List<AddColumnConfig> columns=new ArrayList<AddColumnConfig>();
  for (  Column col : index.getColumns()) {
    columns.add(new AddColumnConfig(col));
  }
  addIndexChange.setColumns(columns);
  addIndexChange.setIndexName(index.getName());
  if (control.getIncludeCatalog()) {
    dropIndexChange.setCatalogName(index.getSchema().getCatalogName());
    addIndexChange.setCatalogName(index.getSchema().getCatalogName());
  }
  if (control.getIncludeSchema()) {
    dropIndexChange.setSchemaName(index.getSchema().getName());
    addIndexChange.setSchemaName(index.getSchema().getName());
  }
  Difference columnsDifference=differences.getDifference("columns");
  if (columnsDifference != null) {
    List<Column> referenceColumns=(List<Column>)columnsDifference.getReferenceValue();
    List<Column> comparedColumns=(List<Column>)columnsDifference.getComparedValue();
    StringUtils.StringUtilsFormatter<Column> formatter=new StringUtils.StringUtilsFormatter<Column>(){
      @Override public String toString(      Column obj){
        return obj.toString(false);
      }
    }
;
    control.setAlreadyHandledChanged(new Index().setTable(index.getTable()).setColumns(referenceColumns));
    if (!StringUtils.join(referenceColumns,",",formatter).equalsIgnoreCase(StringUtils.join(comparedColumns,",",formatter))) {
      control.setAlreadyHandledChanged(new Index().setTable(index.getTable()).setColumns(comparedColumns));
    }
    if (index.isUnique() != null && index.isUnique()) {
      control.setAlreadyHandledChanged(new UniqueConstraint().setTable(index.getTable()).setColumns(referenceColumns));
      if (!StringUtils.join(referenceColumns,",",formatter).equalsIgnoreCase(StringUtils.join(comparedColumns,",",formatter))) {
        control.setAlreadyHandledChanged(new UniqueConstraint().setTable(index.getTable()).setColumns(comparedColumns));
      }
    }
  }
  return new Change[]{dropIndexChange,addIndexChange};
}
