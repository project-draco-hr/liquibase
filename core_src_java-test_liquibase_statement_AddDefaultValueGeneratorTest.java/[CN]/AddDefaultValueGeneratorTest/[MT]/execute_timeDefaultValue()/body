{
  final java.sql.Time time=new java.sql.Time(new Date().getTime());
  new DatabaseTestTemplate().testOnAvailableDatabases(new SqlStatementDatabaseTest(null,new AddDefaultValueStatement(null,TABLE_NAME,COLUMN_NAME,null,time)){
    protected void setup(    Database database) throws Exception {
      new Executor(database).execute(new CreateTableStatement(null,TABLE_NAME).addColumn("id","int").addColumn(COLUMN_NAME,database.getTimeType().getDataTypeName()));
      super.setup(database);
    }
    protected void preExecuteAssert(    DatabaseSnapshot snapshot){
      assertNull(snapshot.getTable(TABLE_NAME).getColumn(COLUMN_NAME).getDefaultValue());
    }
    protected void postExecuteAssert(    DatabaseSnapshot snapshot){
      Object defaultValue=snapshot.getTable(TABLE_NAME).getColumn(COLUMN_NAME).getDefaultValue();
      if (defaultValue instanceof java.sql.Time) {
        assertEquals(new ISODateFormat().format(time),new ISODateFormat().format(((java.sql.Time)defaultValue)));
      }
 else {
        Calendar cal=Calendar.getInstance();
        cal.setTime(time);
        cal.set(Calendar.DAY_OF_YEAR,0);
        cal.set(Calendar.YEAR,0);
        assertEquals(new ISODateFormat().format(new java.sql.Time(cal.getTimeInMillis())),new ISODateFormat().format(new java.sql.Time(((Date)defaultValue).getTime())));
      }
    }
  }
);
}
