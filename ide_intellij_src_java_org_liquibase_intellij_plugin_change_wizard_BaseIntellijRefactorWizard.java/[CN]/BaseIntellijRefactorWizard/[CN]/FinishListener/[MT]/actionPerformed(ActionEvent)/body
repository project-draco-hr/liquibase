{
  try {
    DatabaseChangeLog changeLog=new DatabaseChangeLog(getMigrator(),getCurrentChangeLog());
    final ChangeSet changeSet=new ChangeSet(StringUtils.trimToEmpty(metaDataPage.getId()),StringUtils.trimToEmpty(metaDataPage.getAuthor()),metaDataPage.isAlwaysRun(),metaDataPage.isRunOnChange(),changeLog,StringUtils.trimToNull(metaDataPage.getContext()),StringUtils.trimToNull(metaDataPage.getDbms()));
    changeSet.setComments(metaDataPage.getComments());
    for (    Change change : createChanges()) {
      changeSet.addChange(change);
    }
    liquibase.database.Database liquibaseDatabase=DatabaseFactory.getInstance().findCorrectDatabaseImplementation(connection);
    for (    Change change : changeSet.getChanges()) {
      for (      SqlStatement sql : change.generateStatements(liquibaseDatabase)) {
        new JdbcTemplate(liquibaseDatabase).execute(sql);
      }
    }
    getMigrator().markChangeSetAsRan(changeSet);
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      public void run(){
        try {
          DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
          DocumentBuilder documentBuilder=factory.newDocumentBuilder();
          documentBuilder.setEntityResolver(new MigratorSchemaResolver());
          VirtualFile file=LiquibaseProjectComponent.getInstance().getChangeLogFile().getVirtualFile();
          Document doc;
          if (!file.isValid() || file.getLength() == 0) {
            doc=documentBuilder.newDocument();
            Element changeLogElement=doc.createElement("databaseChangeLog");
            changeLogElement.setAttribute("xmlns","http://www.liquibase.org/xml/ns/dbchangelog/1.3");
            changeLogElement.setAttribute("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
            changeLogElement.setAttribute("xsi:schemaLocation","http://www.liquibase.org/xml/ns/dbchangelog/1.3 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.3.xsd");
            doc.appendChild(changeLogElement);
          }
 else {
            doc=documentBuilder.parse(file.getInputStream());
          }
          doc.getDocumentElement().appendChild(changeSet.createNode(doc));
          OutputFormat format=new OutputFormat(doc);
          format.setIndenting(true);
          XMLSerializer serializer=new XMLSerializer(file.getOutputStream(null),format);
          serializer.asDOMSerializer();
          serializer.serialize(doc);
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
);
    refresh();
  }
 catch (  Throwable e) {
    e.printStackTrace();
  }
}
