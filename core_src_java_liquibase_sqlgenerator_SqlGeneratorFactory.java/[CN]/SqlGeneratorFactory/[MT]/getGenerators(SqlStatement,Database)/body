{
  SortedSet<SqlGenerator> validGenerators=new TreeSet<SqlGenerator>(new SqlGeneratorComparator());
  for (  SqlGenerator generator : getGenerators()) {
    Class clazz=generator.getClass();
    while (clazz != null) {
      Type[] interfaces=new Type[0];
      try {
        interfaces=clazz.getGenericInterfaces();
      }
 catch (      Exception e) {
        System.out.println("No interfaces for " + clazz + ": "+ e.getMessage());
      }
      for (      Type type : interfaces) {
        if (type instanceof ParameterizedType && Arrays.asList(((ParameterizedType)type).getActualTypeArguments()).contains(statement.getClass())) {
          if (generator.supports(statement,database)) {
            validGenerators.add(generator);
          }
        }
 else         if (type.equals(SqlGenerator.class)) {
          if (generator.supports(statement,database)) {
            validGenerators.add(generator);
          }
        }
      }
      clazz=clazz.getSuperclass();
    }
  }
  return validGenerators;
}
