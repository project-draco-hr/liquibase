{
  ChangeMetaData changeMetaData=ChangeFactory.getInstance().getChangeMetaData(getChangeName());
  SortedSet<Set<String>> parameterSets=new TreeSet<Set<String>>(new Comparator<Set<String>>(){
    @Override public int compare(    Set<String> o1,    Set<String> o2){
      int sizeCompare=Integer.valueOf(o1.size()).compareTo(o2.size());
      if (sizeCompare != 0) {
        return sizeCompare;
      }
      return StringUtils.join(new TreeSet<String>(o1),",").compareTo(StringUtils.join(new TreeSet<String>(o2),","));
    }
  }
);
  parameterSets.addAll(CollectionUtil.powerSet(changeMetaData.getParameters().keySet()));
  List<Change> returnList=new ArrayList<Change>();
  for (  Set<String> params : parameterSets) {
    Change change=ChangeFactory.getInstance().create(getChangeName());
    for (    String param : params) {
      ChangeParameterMetaData changeParam=changeMetaData.getParameters().get(param);
      Object exampleValue=changeParam.getExampleValue(database);
      changeParam.setValue(change,exampleValue);
    }
    returnList.add(change);
  }
  return returnList;
}
