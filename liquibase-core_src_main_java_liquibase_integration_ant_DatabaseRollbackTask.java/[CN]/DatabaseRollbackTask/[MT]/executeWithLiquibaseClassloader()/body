{
  Writer writer=null;
  Liquibase liquibase=getLiquibase();
  try {
    FileResource outputFile=getOutputFile();
    if (rollbackCount != null) {
      if (outputFile != null) {
        writer=getOutputFileWriter();
        liquibase.rollback(rollbackCount,rollbackScript,new Contexts(getContexts()),getLabels(),writer);
      }
 else {
        liquibase.rollback(rollbackCount,rollbackScript,new Contexts(getContexts()),getLabels());
      }
    }
 else     if (rollbackTag != null) {
      if (outputFile != null) {
        writer=getOutputFileWriter();
        liquibase.rollback(rollbackTag,rollbackScript,new Contexts(getContexts()),getLabels(),writer);
      }
 else {
        liquibase.rollback(rollbackTag,rollbackScript,new Contexts(getContexts()),getLabels());
      }
    }
 else     if (rollbackDate != null) {
      if (outputFile != null) {
        writer=getOutputFileWriter();
        liquibase.rollback(rollbackDate,rollbackScript,new Contexts(getContexts()),getLabels(),writer);
      }
 else {
        liquibase.rollback(rollbackDate,rollbackScript,new Contexts(getContexts()),getLabels());
      }
    }
 else {
      throw new BuildException("Unable to rollback database. No count, tag, or date set.");
    }
  }
 catch (  LiquibaseException e) {
    throw new BuildException("Unable to rollback database.",e);
  }
catch (  UnsupportedEncodingException e) {
    throw new BuildException("Unable to generate rollback SQL. Encoding [" + getOutputEncoding() + "] is not supported.",e);
  }
catch (  IOException e) {
    throw new BuildException("Unable to generate rollback SQL. Error creating output writer.",e);
  }
 finally {
    FileUtils.close(writer);
  }
}
