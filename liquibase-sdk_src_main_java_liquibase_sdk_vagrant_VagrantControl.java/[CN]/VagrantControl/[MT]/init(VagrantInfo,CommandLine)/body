{
  List<String> configs=commandLine.getArgList().subList(2,commandLine.getArgList().size());
  mainApp.out("Vagrant Machine Setup:");
  mainApp.divider();
  mainApp.out(StringUtils.indent("Local Path: " + vagrantInfo.boxDir.getAbsolutePath()));
  mainApp.out(StringUtils.indent("Box name: " + vagrantInfo.boxName));
  mainApp.out(StringUtils.indent("Database Config(s): " + StringUtils.join(configs,", ")));
  Collection<ConnectionConfiguration> databases=null;
  try {
    databases=ConnectionConfigurationFactory.getInstance().findConfigurations(configs);
  }
 catch (  ConnectionConfigurationFactory.UnknownDatabaseException e) {
    mainApp.fatal(e);
  }
  String[] boxInfo=null;
  for (  ConnectionConfiguration connectionConfig : databases) {
    String[] absoluteBox=getAbsoluteBox(connectionConfig.getVagrantBoxName(),vagrantInfo);
    if (boxInfo == null) {
      boxInfo=absoluteBox;
    }
 else {
      if (!boxInfo[0].equals(absoluteBox[0])) {
        throw new UnexpectedLiquibaseException("Configuration " + connectionConfig + " needs vagrant box "+ absoluteBox[0]+ ", not "+ boxInfo[0]+ " like other configurations");
      }
    }
    if (vagrantInfo.hostName == null) {
      vagrantInfo.hostName=connectionConfig.getHostname();
    }
 else {
      if (!vagrantInfo.hostName.equals(connectionConfig.getHostname())) {
        throw new UnexpectedLiquibaseException("Configuration " + connectionConfig + " does not match previously defined hostname "+ vagrantInfo.hostName);
      }
    }
  }
  if (boxInfo == null) {
    throw new UnexpectedLiquibaseException("Null boxInfo");
  }
  mainApp.out(StringUtils.indent("Base Box Url: " + vagrantInfo.boxUrl));
  mainApp.out(StringUtils.indent("Hostname: " + vagrantInfo.hostName));
  mainApp.out("");
  for (  ConnectionConfiguration config : databases) {
    mainApp.out("Connection Configuration For '" + config.toString() + "':");
    mainApp.divider();
    mainApp.out(StringUtils.indent(config.getDescription()));
    mainApp.out("");
  }
  writeVagrantFile(vagrantInfo);
  writePuppetFiles(vagrantInfo,databases);
}
