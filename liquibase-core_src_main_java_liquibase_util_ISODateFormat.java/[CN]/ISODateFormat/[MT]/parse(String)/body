{
  int length=dateAsString.length();
switch (length) {
case 8:
    return new java.sql.Time(timeFormat.parse(dateAsString).getTime());
case 10:
  return new java.sql.Date(dateFormat.parse(dateAsString).getTime());
case 19:
if (dateAsString.contains(" ")) {
  return new java.sql.Timestamp(dateTimeFormatWithSpace.parse(dateAsString).getTime());
}
 else {
  return new java.sql.Timestamp(dateTimeFormat.parse(dateAsString).getTime());
}
default :
if (length < 19 || dateAsString.charAt(19) != '.') {
throw new ParseException(String.format("Unknown date format to parse: %s.",dateAsString),0);
}
long time=0;
if (dateAsString.contains(" ")) {
time=dateTimeFormatWithSpace.parse(dateAsString.substring(0,19)).getTime();
}
 else {
time=dateTimeFormat.parse(dateAsString.substring(0,19)).getTime();
}
int nanos=Integer.parseInt(dateAsString.substring(20));
for (; length < 29; length++) {
nanos*=10;
}
java.sql.Timestamp timestamp=new java.sql.Timestamp(time);
timestamp.setNanos(nanos);
return timestamp;
}
}
