{
  if (inValue == null) {
    if (sqlType == SqlTypeValue.TYPE_UNKNOWN) {
      boolean useSetObject=false;
      try {
        useSetObject=(ps.getConnection().getMetaData().getDatabaseProductName().indexOf("Informix") != -1);
      }
 catch (      Throwable ex) {
      }
      if (useSetObject) {
        ps.setObject(paramIndex,null);
      }
 else {
        ps.setNull(paramIndex,Types.NULL);
      }
    }
 else     if (typeName != null) {
      ps.setNull(paramIndex,sqlType,typeName);
    }
 else {
      ps.setNull(paramIndex,sqlType);
    }
  }
 else {
    if (inValue instanceof SqlTypeValue) {
      ((SqlTypeValue)inValue).setTypeValue(ps,paramIndex,sqlType,typeName);
    }
 else     if (sqlType == Types.VARCHAR) {
      ps.setString(paramIndex,inValue.toString());
    }
 else     if (sqlType == Types.DECIMAL || sqlType == Types.NUMERIC) {
      if (inValue instanceof BigDecimal) {
        ps.setBigDecimal(paramIndex,(BigDecimal)inValue);
      }
 else       if (scale != null) {
        ps.setObject(paramIndex,inValue,sqlType,scale);
      }
 else {
        ps.setObject(paramIndex,inValue,sqlType);
      }
    }
 else     if (sqlType == Types.DATE) {
      if (inValue instanceof java.util.Date) {
        if (inValue instanceof java.sql.Date) {
          ps.setDate(paramIndex,(java.sql.Date)inValue);
        }
 else {
          ps.setDate(paramIndex,new java.sql.Date(((java.util.Date)inValue).getTime()));
        }
      }
 else       if (inValue instanceof Calendar) {
        Calendar cal=(Calendar)inValue;
        ps.setDate(paramIndex,new java.sql.Date(cal.getTime().getTime()),cal);
      }
 else {
        ps.setObject(paramIndex,inValue,Types.DATE);
      }
    }
 else     if (sqlType == Types.TIME) {
      if (inValue instanceof java.util.Date) {
        if (inValue instanceof java.sql.Time) {
          ps.setTime(paramIndex,(java.sql.Time)inValue);
        }
 else {
          ps.setTime(paramIndex,new java.sql.Time(((java.util.Date)inValue).getTime()));
        }
      }
 else       if (inValue instanceof Calendar) {
        Calendar cal=(Calendar)inValue;
        ps.setTime(paramIndex,new java.sql.Time(cal.getTime().getTime()),cal);
      }
 else {
        ps.setObject(paramIndex,inValue,Types.TIME);
      }
    }
 else     if (sqlType == Types.TIMESTAMP) {
      if (inValue instanceof java.util.Date) {
        if (inValue instanceof java.sql.Timestamp) {
          ps.setTimestamp(paramIndex,(java.sql.Timestamp)inValue);
        }
 else {
          ps.setTimestamp(paramIndex,new java.sql.Timestamp(((java.util.Date)inValue).getTime()));
        }
      }
 else       if (inValue instanceof Calendar) {
        Calendar cal=(Calendar)inValue;
        ps.setTimestamp(paramIndex,new java.sql.Timestamp(cal.getTime().getTime()),cal);
      }
 else {
        ps.setObject(paramIndex,inValue,Types.TIMESTAMP);
      }
    }
 else     if (sqlType == SqlTypeValue.TYPE_UNKNOWN) {
      if (isStringValue(inValue)) {
        ps.setString(paramIndex,inValue.toString());
      }
 else       if (isDateValue(inValue)) {
        ps.setTimestamp(paramIndex,new java.sql.Timestamp(((java.util.Date)inValue).getTime()));
      }
 else       if (inValue instanceof Calendar) {
        Calendar cal=(Calendar)inValue;
        ps.setTimestamp(paramIndex,new java.sql.Timestamp(cal.getTime().getTime()));
      }
 else {
        ps.setObject(paramIndex,inValue);
      }
    }
 else {
      ps.setObject(paramIndex,inValue,sqlType);
    }
  }
}
