{
  CatalogAndSchema[] schemas;
  if (compareControl == null || compareControl.getSchemaComparisons() == null) {
    schemas=new CatalogAndSchema[]{targetDatabase.getDefaultSchema()};
  }
 else {
    schemas=new CatalogAndSchema[compareControl.getSchemaComparisons().length];
    int i=0;
    for (    CompareControl.SchemaComparison comparison : compareControl.getSchemaComparisons()) {
      CatalogAndSchema schema;
      if (referenceDatabase.supportsSchemas()) {
        schema=new CatalogAndSchema(referenceDatabase.getDefaultCatalogName(),comparison.getReferenceSchema().getSchemaName());
      }
 else {
        schema=new CatalogAndSchema(comparison.getReferenceSchema().getSchemaName(),comparison.getReferenceSchema().getSchemaName());
      }
      schemas[i++]=schema;
    }
  }
  SnapshotControl snapshotControl=getReferenceSnapshotControl();
  if (snapshotControl == null) {
    snapshotControl=new SnapshotControl(referenceDatabase,snapshotTypes);
  }
  if (getSnapshotListener() != null) {
    snapshotControl.setSnapshotListener(getSnapshotListener());
  }
  ObjectQuotingStrategy originalStrategy=referenceDatabase.getObjectQuotingStrategy();
  try {
    referenceDatabase.setObjectQuotingStrategy(ObjectQuotingStrategy.QUOTE_ALL_OBJECTS);
    return SnapshotGeneratorFactory.getInstance().createSnapshot(schemas,referenceDatabase,snapshotControl);
  }
  finally {
    referenceDatabase.setObjectQuotingStrategy(originalStrategy);
  }
}
