{
  try {
    Map<String,DatabaseObject> objects=new HashMap<String,DatabaseObject>();
    ParsedNode databaseNode=parsedNode.getChild(null,"database");
    DatabaseConnection connection=getDatabase().getConnection();
    if (databaseNode != null && connection instanceof OfflineConnection) {
      ((OfflineConnection)connection).setDatabaseMajorVersion(databaseNode.getChildValue(null,"majorVersion",Integer.class));
      ((OfflineConnection)connection).setDatabaseMinorVersion(databaseNode.getChildValue(null,"minorVersion",Integer.class));
      ((OfflineConnection)connection).setProductVersion(databaseNode.getChildValue(null,"productVersion",String.class));
      ((OfflineConnection)connection).setConnectionUserName(databaseNode.getChildValue(null,"user",String.class));
    }
    for (    ParsedNode typeNode : parsedNode.getChild(null,"objects").getChildren()) {
      Class<? extends DatabaseObject> objectType=(Class<? extends DatabaseObject>)Class.forName(typeNode.getName());
      for (      ParsedNode objectNode : typeNode.getChildren()) {
        DatabaseObject databaseObject=objectType.newInstance();
        databaseObject.load(objectNode,resourceAccessor);
        objects.put(objectType.getName() + "#" + databaseObject.getSnapshotId(),databaseObject);
      }
    }
    for (    DatabaseObject object : objects.values()) {
      for (      String attr : new ArrayList<String>(object.getAttributes())) {
        Object value=object.getAttribute(attr,Object.class);
        if (value instanceof String && objects.containsKey(value)) {
          if (ObjectUtil.hasProperty(object,attr)) {
            ObjectUtil.setProperty(object,attr,objects.get(value));
          }
 else {
            object.setAttribute(attr,objects.get(value));
          }
        }
 else         if (value instanceof Collection && ((Collection)value).size() > 0 && objects.containsKey(((Collection)value).iterator().next())) {
          List newList=new ArrayList();
          for (          String element : (Collection<String>)value) {
            newList.add(objects.get(element));
          }
          if (ObjectUtil.hasProperty(object,attr)) {
            ObjectUtil.setProperty(object,attr,newList);
          }
 else {
            object.setAttribute(attr,newList);
          }
        }
 else {
          if (ObjectUtil.hasProperty(object,attr)) {
            object.setAttribute(attr,null);
            ObjectUtil.setProperty(object,attr,value);
          }
        }
      }
    }
    for (    DatabaseObject object : objects.values()) {
      this.allFound.add(object);
    }
  }
 catch (  Exception e) {
    throw new ParsedNodeException(e);
  }
}
