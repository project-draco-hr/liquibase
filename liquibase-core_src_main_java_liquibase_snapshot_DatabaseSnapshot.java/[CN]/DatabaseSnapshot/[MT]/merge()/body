{
  try {
    for (    SchemaSnapshot snapshot : schemaSnapshots.values()) {
      for (      Map.Entry<Class<? extends DatabaseObject>,Set<DatabaseObject>> objEntry : snapshot.databaseObjects.entrySet()) {
        for (        DatabaseObject obj : objEntry.getValue()) {
          for (          Field field : obj.getClass().getDeclaredFields()) {
            field.setAccessible(true);
            if (DatabaseObject.class.isAssignableFrom(field.getType())) {
              DatabaseObject fieldValue=(DatabaseObject)field.get(obj);
              if (fieldValue != null && fieldValue.isPartial()) {
                DatabaseObject fullValue=null;
                for (                DatabaseObject potentialMatch : schemaSnapshots.get(snapshot.schema).databaseObjects.get(fieldValue.getClass())) {
                  if (potentialMatch.equals(fieldValue,getDatabase())) {
                    fullValue=potentialMatch;
                    break;
                  }
                }
                if (fullValue != null) {
                  field.set(obj,fullValue);
                }
              }
            }
          }
        }
      }
    }
  }
 catch (  IllegalAccessException e) {
    throw new UnexpectedLiquibaseException(e);
  }
}
