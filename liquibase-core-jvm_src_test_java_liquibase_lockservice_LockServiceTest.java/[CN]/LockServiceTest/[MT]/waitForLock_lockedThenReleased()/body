{
  Database database=createMock(Database.class);
  Executor executor=createMock(Executor.class);
  database.checkDatabaseChangeLogLockTable();
  expectLastCall().anyTimes();
  expect(executor.queryForObject(isA(SelectFromDatabaseChangeLogLockStatement.class),eq(Boolean.class),isA(ArrayList.class))).andReturn(true);
  expect(executor.queryForObject(isA(SelectFromDatabaseChangeLogLockStatement.class),eq(Boolean.class),isA(ArrayList.class))).andReturn(true);
  expect(executor.queryForObject(isA(SelectFromDatabaseChangeLogLockStatement.class),eq(Boolean.class),isA(ArrayList.class))).andReturn(true);
  expect(executor.queryForObject(isA(SelectFromDatabaseChangeLogLockStatement.class),eq(Boolean.class),isA(ArrayList.class))).andReturn(false);
  executor.comment("Lock Database");
  expectLastCall();
  database.rollback();
  expectLastCall().anyTimes();
  expect(executor.update(isA(LockDatabaseChangeLogStatement.class),isA(ArrayList.class))).andReturn(1);
  database.commit();
  expectLastCall();
  replay(database);
  replay(executor);
  ExecutorService.getInstance().setExecutor(database,executor);
  LockService service=LockService.getInstance(database);
  service.setChangeLogLockRecheckTime(1);
  service.waitForLock();
  verify(database);
  verify(executor);
}
