{
  String charTypeName=getCharTypeName(database);
  String dateTimeTypeString=getDateTimeTypeString(database);
  CreateTableStatement createTableStatement=new CreateTableStatement(database.getLiquibaseCatalogName(),database.getLiquibaseSchemaName(),database.getDatabaseChangeLogTableName()).setTablespace(database.getLiquibaseTablespaceName()).addColumn("ID",DataTypeFactory.getInstance().fromDescription(charTypeName + "(" + getIdColumnSize()+ ")",database),null,null,new NotNullConstraint()).addColumn("AUTHOR",DataTypeFactory.getInstance().fromDescription(charTypeName + "(" + getAuthorColumnSize()+ ")",database),null,null,new NotNullConstraint()).addColumn("FILENAME",DataTypeFactory.getInstance().fromDescription(charTypeName + "(" + getFilenameColumnSize()+ ")",database),null,null,new NotNullConstraint()).addColumn("DATEEXECUTED",DataTypeFactory.getInstance().fromDescription(dateTimeTypeString,database),null,null,new NotNullConstraint()).addColumn("ORDEREXECUTED",DataTypeFactory.getInstance().fromDescription("int",database),null,null,new NotNullConstraint()).addColumn("EXECTYPE",DataTypeFactory.getInstance().fromDescription(charTypeName + "(10)",database),null,null,new NotNullConstraint()).addColumn("MD5SUM",DataTypeFactory.getInstance().fromDescription(charTypeName + "(35)",database)).addColumn("DESCRIPTION",DataTypeFactory.getInstance().fromDescription(charTypeName + "(255)",database)).addColumn("COMMENTS",DataTypeFactory.getInstance().fromDescription(charTypeName + "(255)",database)).addColumn("TAG",DataTypeFactory.getInstance().fromDescription(charTypeName + "(255)",database)).addColumn("LIQUIBASE",DataTypeFactory.getInstance().fromDescription(charTypeName + "(20)",database)).addColumn("CONTEXTS",DataTypeFactory.getInstance().fromDescription(charTypeName + "(" + getContextsSize()+ ")",database)).addColumn("LABELS",DataTypeFactory.getInstance().fromDescription(charTypeName + "(" + getLabelsSize()+ ")",database)).addColumn("DEPLOYMENT_ID",DataTypeFactory.getInstance().fromDescription(charTypeName + "(10)",database));
  return SqlGeneratorFactory.getInstance().generateSql(createTableStatement,database);
}
