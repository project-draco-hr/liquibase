{
  TypeConverter typeConverter=TypeConverterFactory.getInstance().findTypeConverter(database);
  CreateTableStatement createTableStatement=new CreateTableStatement(database.getLiquibaseSchemaName(),database.getDatabaseChangeLogTableName()).addPrimaryKeyColumn("ID",typeConverter.getDataType("VARCHAR(" + getIdColumnSize() + ")",false),null,null,null,new NotNullConstraint()).addPrimaryKeyColumn("AUTHOR",typeConverter.getDataType("VARCHAR(" + getAuthorColumnSize() + ")",false),null,null,null,new NotNullConstraint()).addPrimaryKeyColumn("FILENAME",typeConverter.getDataType("VARCHAR(" + getFilenameColumnSize() + ")",false),null,null,null,new NotNullConstraint()).addColumn("DATEEXECUTED",typeConverter.getDateTimeType(),null,new NotNullConstraint()).addColumn("ORDEREXECUTED",typeConverter.getDataType("INT",false),new NotNullConstraint()).addColumn("EXECTYPE",typeConverter.getDataType("VARCHAR(10)",false),new NotNullConstraint()).addColumn("MD5SUM",typeConverter.getDataType("VARCHAR(35)",false)).addColumn("DESCRIPTION",typeConverter.getDataType("VARCHAR(255)",false)).addColumn("COMMENTS",typeConverter.getDataType("VARCHAR(255)",false)).addColumn("TAG",typeConverter.getDataType("VARCHAR(255)",false)).addColumn("LIQUIBASE",typeConverter.getDataType("VARCHAR(20)",false));
  return SqlGeneratorFactory.getInstance().generateSql(createTableStatement,database);
}
