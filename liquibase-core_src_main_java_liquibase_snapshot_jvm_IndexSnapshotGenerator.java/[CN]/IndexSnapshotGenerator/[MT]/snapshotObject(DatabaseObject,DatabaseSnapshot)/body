{
  Database database=snapshot.getDatabase();
  Table exampleTable=((Index)example).getTable();
  for (int i=0; i < ((Index)example).getColumns().size(); i++) {
    ((Index)example).getColumns().set(i,database.correctObjectName(((Index)example).getColumns().get(i),Column.class));
  }
  Schema schema=new Schema(database.getDefaultCatalogName(),database.getDefaultSchemaName());
  String exampleName=example.getName();
  if (exampleName != null) {
    exampleName=database.correctObjectName(exampleName,Index.class);
  }
  List<Table> tables=new ArrayList<Table>();
  if (exampleTable == null || exampleTable.getName() == null) {
    DatabaseSnapshot tableSnapshot=SnapshotGeneratorFactory.getInstance().createSnapshot(schema.toCatalogAndSchema(),database,new SnapshotControl(snapshot.getDatabase(),Table.class,Schema.class,Catalog.class));
    tables.addAll(tableSnapshot.get(Table.class));
  }
 else {
    Table snapshotTable=snapshot.get(exampleTable);
    if (snapshotTable == null) {
      tables.add(exampleTable);
    }
 else {
      tables.add(snapshotTable);
    }
  }
  Map<String,Index> foundIndexes=new HashMap<String,Index>();
  for (  Table table : tables) {
    JdbcDatabaseSnapshot.CachingDatabaseMetaData databaseMetaData=null;
    List<CachedRow> rs=null;
    try {
      databaseMetaData=((JdbcDatabaseSnapshot)snapshot).getMetaData();
      rs=databaseMetaData.getIndexInfo(((AbstractJdbcDatabase)database).getJdbcCatalogName(schema),((AbstractJdbcDatabase)database).getJdbcSchemaName(schema),table.getName());
      for (      CachedRow row : rs) {
        String indexName=database.correctObjectName(cleanNameFromDatabase(row.getString("INDEX_NAME"),database),Index.class);
        if (indexName == null) {
          continue;
        }
        if (database.isCaseSensitive()) {
          if (exampleName != null && !exampleName.equals(indexName)) {
            continue;
          }
        }
 else {
          if (exampleName != null && !exampleName.equalsIgnoreCase(indexName)) {
            continue;
          }
        }
        if (database instanceof InformixDatabase && indexName.startsWith(" ")) {
          indexName="_generated_index_" + indexName.substring(1);
        }
        short type=row.getShort("TYPE");
        Boolean nonUnique=row.getBoolean("NON_UNIQUE");
        if (nonUnique == null) {
          nonUnique=true;
        }
        String columnName=cleanNameFromDatabase(row.getString("COLUMN_NAME"),database);
        short position=row.getShort("ORDINAL_POSITION");
        if (database instanceof InformixDatabase && type != DatabaseMetaData.tableIndexStatistic && position == 0) {
          System.out.println(this.getClass().getName() + ": corrected position to " + ++position);
        }
        String filterCondition=row.getString("FILTER_CONDITION");
        if (type == DatabaseMetaData.tableIndexStatistic) {
          continue;
        }
        if (columnName == null) {
          continue;
        }
        Index returnIndex=foundIndexes.get(indexName);
        if (returnIndex == null) {
          returnIndex=new Index();
          returnIndex.setTable(table);
          returnIndex.setName(indexName);
          returnIndex.setUnique(!nonUnique);
          returnIndex.setFilterCondition(filterCondition);
          foundIndexes.put(indexName,returnIndex);
        }
        for (int i=returnIndex.getColumns().size(); i < position; i++) {
          returnIndex.getColumns().add(null);
        }
        returnIndex.getColumns().set(position - 1,columnName);
      }
    }
 catch (    Exception e) {
      throw new DatabaseException(e);
    }
  }
  if (exampleName != null) {
    return foundIndexes.get(exampleName);
  }
 else {
    for (    Index index : foundIndexes.values()) {
      if (DatabaseObjectComparatorFactory.getInstance().isSameObject(index.getTable(),exampleTable,database)) {
        if (database.isCaseSensitive()) {
          if (index.getColumnNames().equals(((Index)example).getColumnNames())) {
            return index;
          }
        }
 else {
          if (index.getColumnNames().equalsIgnoreCase(((Index)example).getColumnNames())) {
            return index;
          }
        }
      }
    }
    return null;
  }
}
