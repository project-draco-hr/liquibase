{
  if (database instanceof DerbyDatabase) {
    throw new UnsupportedChangeException("Add Lookup Table currently not supported in Derby");
  }
 else   if (database instanceof HsqlDatabase) {
    throw new UnsupportedChangeException("Add Lookup Table currently not supported in HSQLDB");
  }
 else   if (database instanceof CacheDatabase) {
    throw new UnsupportedChangeException("Add Lookup Table not currently supported for Cache");
  }
  List<String> statements=new ArrayList<String>();
  String[] createTablesSQL={"CREATE TABLE " + getNewTableName() + " AS SELECT DISTINCT "+ getExistingColumnName()+ " AS "+ getNewColumnName()+ " FROM "+ getExistingTableName()+ " WHERE "+ getExistingColumnName()+ " IS NOT NULL"};
  if (database instanceof MSSQLDatabase) {
    createTablesSQL=new String[]{"SELECT DISTINCT " + getExistingColumnName() + " AS "+ getNewColumnName()+ " INTO "+ getNewTableName()+ " FROM "+ getExistingTableName()+ " WHERE "+ getExistingColumnName()+ " IS NOT NULL"};
  }
 else   if (database instanceof DB2Database) {
    createTablesSQL=new String[]{"CREATE TABLE " + getNewTableName() + " AS (SELECT "+ getExistingColumnName()+ " AS "+ getNewColumnName()+ " FROM "+ getExistingTableName()+ ") WITH NO DATA","INSERT INTO " + getNewTableName() + " SELECT DISTINCT "+ getExistingColumnName()+ " FROM "+ getExistingTableName()+ " WHERE "+ getExistingColumnName()+ " IS NOT NULL"};
  }
  statements.addAll(Arrays.asList(createTablesSQL));
  if (!(database instanceof OracleDatabase)) {
    AddNotNullConstraintChange addNotNullChange=new AddNotNullConstraintChange();
    addNotNullChange.setTableName(getNewTableName());
    addNotNullChange.setColumnName(getNewColumnName());
    addNotNullChange.setColumnDataType(getNewColumnDataType());
    statements.addAll(Arrays.asList(addNotNullChange.generateStatements(database)));
  }
  if (database instanceof DB2Database) {
    statements.add("CALL SYSPROC.ADMIN_CMD ('REORG TABLE " + getNewTableName() + "')");
  }
  AddPrimaryKeyChange addPKChange=new AddPrimaryKeyChange();
  addPKChange.setTableName(getNewTableName());
  addPKChange.setColumnNames(getNewColumnName());
  statements.addAll(Arrays.asList(addPKChange.generateStatements(database)));
  if (database instanceof DB2Database) {
    statements.add("CALL SYSPROC.ADMIN_CMD ('REORG TABLE " + getNewTableName() + "')");
  }
  AddForeignKeyConstraintChange addFKChange=new AddForeignKeyConstraintChange();
  addFKChange.setBaseTableName(getExistingTableName());
  addFKChange.setBaseColumnNames(getExistingColumnName());
  addFKChange.setReferencedTableName(getNewTableName());
  addFKChange.setReferencedColumnNames(getNewColumnName());
  addFKChange.setConstraintName(getFinalConstraintName());
  statements.addAll(Arrays.asList(addFKChange.generateStatements(database)));
  return statements.toArray(new String[statements.size()]);
}
