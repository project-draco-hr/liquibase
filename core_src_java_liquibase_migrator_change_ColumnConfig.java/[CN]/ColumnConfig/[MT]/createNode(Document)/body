{
  Element element=document.createElement("column");
  element.setAttribute("name",getName());
  if (getType() != null) {
    element.setAttribute("type",getType());
  }
  if (getDefaultValue() != null) {
    element.setAttribute("defaultValue",getDefaultValue());
  }
  if (getDefaultValueNumeric() != null) {
    element.setAttribute("defaultValueNumeric",getDefaultValueNumeric());
  }
  if (getDefaultValueDate() != null) {
    element.setAttribute("defaultValueDate",getDefaultValueDate());
  }
  if (getDefaultValueBoolean() != null) {
    element.setAttribute("defaultValueBoolean",getDefaultValueBoolean().toString());
  }
  if (getValue() != null) {
    element.setAttribute("value",getValue());
  }
  if (getValueNumeric() != null) {
    element.setAttribute("valueNumeric",getValueNumeric());
  }
  if (getValueBoolean() != null) {
    element.setAttribute("valueBoolean",getValueBoolean().toString());
  }
  if (getValueDate() != null) {
    element.setAttribute("valueDate",getValueDate());
  }
  if (isAutoIncrement() != null && isAutoIncrement()) {
    element.setAttribute("autoIncrement","true");
  }
  ConstraintsConfig constraints=getConstraints();
  if (constraints != null) {
    Element constraintsElement=document.createElement("constraints");
    if (constraints.getCheck() != null) {
      constraintsElement.setAttribute("check",constraints.getCheck());
    }
    if (constraints.getForeignKeyName() != null) {
      constraintsElement.setAttribute("foreignKeyName",constraints.getForeignKeyName());
    }
    if (constraints.getReferences() != null) {
      constraintsElement.setAttribute("references",constraints.getReferences());
    }
    if (constraints.isDeferrable() != null) {
      constraintsElement.setAttribute("deferrable",constraints.isDeferrable().toString());
    }
    if (constraints.isDeleteCascade() != null) {
      constraintsElement.setAttribute("deleteCascade",constraints.isDeleteCascade().toString());
    }
    if (constraints.isInitiallyDeferred() != null) {
      constraintsElement.setAttribute("initiallyDeferred",constraints.isInitiallyDeferred().toString());
    }
    if (constraints.isNullable() != null) {
      constraintsElement.setAttribute("nullable",constraints.isNullable().toString());
    }
    if (constraints.isPrimaryKey() != null) {
      constraintsElement.setAttribute("primaryKey",constraints.isPrimaryKey().toString());
    }
    if (constraints.isUnique() != null) {
      constraintsElement.setAttribute("unique",constraints.isUnique().toString());
    }
    element.appendChild(constraintsElement);
  }
  return element;
}
