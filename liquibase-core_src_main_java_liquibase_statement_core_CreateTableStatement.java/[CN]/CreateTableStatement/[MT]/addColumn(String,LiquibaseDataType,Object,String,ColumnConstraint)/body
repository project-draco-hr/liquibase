{
  this.getColumns().add(columnName);
  this.columnTypes.put(columnName,columnType);
  if (defaultValue != null) {
    defaultValues.put(columnName,defaultValue);
  }
  if (remarks != null) {
    this.columnRemarks.put(columnName,remarks);
  }
  if (constraints != null) {
    for (    ColumnConstraint constraint : constraints) {
      if (constraint == null) {
        continue;
      }
      if (constraint instanceof PrimaryKeyConstraint) {
        if (this.getPrimaryKeyConstraint() == null) {
          this.primaryKeyConstraint=(PrimaryKeyConstraint)constraint;
        }
 else {
          for (          String column : ((PrimaryKeyConstraint)constraint).getColumns()) {
            this.getPrimaryKeyConstraint().addColumns(column);
          }
        }
      }
 else       if (constraint instanceof NotNullConstraint) {
        ((NotNullConstraint)constraint).setColumnName(columnName);
        getNotNullColumns().add(columnName);
      }
 else       if (constraint instanceof ForeignKeyConstraint) {
        ((ForeignKeyConstraint)constraint).setColumn(columnName);
        getForeignKeyConstraints().add(((ForeignKeyConstraint)constraint));
      }
 else       if (constraint instanceof UniqueConstraint) {
        ((UniqueConstraint)constraint).addColumns(columnName);
        getUniqueConstraints().add(((UniqueConstraint)constraint));
      }
 else       if (constraint instanceof AutoIncrementConstraint) {
        autoIncrementConstraints.add((AutoIncrementConstraint)constraint);
      }
 else {
        throw new RuntimeException("Unknown constraint type: " + constraint.getClass().getName());
      }
    }
  }
  return this;
}
