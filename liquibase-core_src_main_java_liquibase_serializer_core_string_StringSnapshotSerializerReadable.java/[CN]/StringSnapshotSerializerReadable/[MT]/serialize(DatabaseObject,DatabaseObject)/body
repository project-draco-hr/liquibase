{
  StringBuilder buffer=new StringBuilder();
  final List<String> attributes=sort(databaseObject.getAttributes());
  for (  String attribute : attributes) {
    if (attribute.equals("name")) {
      continue;
    }
    if (attribute.equals("schema")) {
      continue;
    }
    if (attribute.equals("catalog")) {
      continue;
    }
    Object value=databaseObject.getAttribute(attribute,Object.class);
    if (value instanceof Schema) {
      continue;
    }
    if (value instanceof DatabaseObject) {
      if (parentObject != null && ((DatabaseObject)value).getSnapshotId().equals(parentObject.getSnapshotId())) {
        continue;
      }
      boolean expandContainedObjects=shouldExpandNestedObject(value,databaseObject);
      if (expandContainedObjects) {
        value=((DatabaseObject)value).getName() + "\n" + StringUtils.indent(serialize((DatabaseObject)value,databaseObject),INDENT_LENGTH);
      }
 else {
        value=databaseObject.getSerializableFieldValue(attribute);
      }
    }
 else     if (value instanceof Collection) {
      if (((Collection)value).size() == 0) {
        value=null;
      }
 else {
        if (((Collection)value).iterator().next() instanceof DatabaseObject) {
          value=StringUtils.join(new TreeSet<DatabaseObject>((Collection<DatabaseObject>)value),"\n",new StringUtils.StringUtilsFormatter(){
            @Override public String toString(            Object obj){
              if (obj instanceof DatabaseObject) {
                if (shouldExpandNestedObject(obj,databaseObject)) {
                  return ((DatabaseObject)obj).getName() + "\n" + StringUtils.indent(serialize(((DatabaseObject)obj),databaseObject),INDENT_LENGTH);
                }
 else {
                  return ((DatabaseObject)obj).getName();
                }
              }
 else {
                return obj.toString();
              }
            }
          }
);
          value="\n" + StringUtils.indent((String)value,INDENT_LENGTH);
        }
 else {
          value=databaseObject.getSerializableFieldValue(attribute);
        }
      }
    }
 else {
      value=databaseObject.getSerializableFieldValue(attribute);
    }
    if (value != null) {
      buffer.append(attribute).append(": ").append(value).append("\n");
    }
  }
  return buffer.toString().replaceFirst("\n$","");
}
