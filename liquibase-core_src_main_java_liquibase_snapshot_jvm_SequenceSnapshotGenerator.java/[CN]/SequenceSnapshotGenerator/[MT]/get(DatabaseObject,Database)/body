{
  if (!(container instanceof Schema)) {
    return new Sequence[0];
  }
  Schema schema=(Schema)container;
  if (!database.supportsSequences()) {
    updateListeners("Sequences not supported for " + database.toString() + " ...");
    return new Sequence[0];
  }
  updateListeners("Reading sequences for " + database.toString() + " ...");
  List<Sequence> returnSequences=new ArrayList<Sequence>();
  List<String> sequenceNames=(List<String>)ExecutorService.getInstance().getExecutor(database).queryForList(new RawSqlStatement(getSelectSequenceSql(schema,database)),String.class);
  if (sequenceNames != null) {
    for (    String sequenceName : sequenceNames) {
      Sequence seq=new Sequence();
      seq.setName(sequenceName.trim());
      seq.setSchema(new Schema(schema.getCatalogName(),schema.getName()));
      returnSequences.add(seq);
    }
  }
  return returnSequences.toArray(new Sequence[returnSequences.size()]);
}
