{
  Comparator<String> comparator;
  comparator=getComparator(object);
  Map<String,Object> objectMap=new TreeMap<String,Object>(comparator);
  for (  String field : object.getSerializableFields()) {
    Object value=object.getSerializableFieldValue(field);
    if (value != null) {
      if (value instanceof DataType) {
        value=((Map)toMap((DataType)value)).values().iterator().next();
      }
      if (value instanceof Column.AutoIncrementInformation) {
        value=((Map)toMap((Column.AutoIncrementInformation)value)).values().iterator().next();
      }
      if (value instanceof LiquibaseSerializable) {
        value=toMap((LiquibaseSerializable)value);
      }
      if (value instanceof Collection) {
        List valueAsList=new ArrayList((Collection)value);
        if (valueAsList.size() == 0) {
          continue;
        }
        for (int i=0; i < valueAsList.size(); i++) {
          if (valueAsList.get(i) instanceof LiquibaseSerializable) {
            valueAsList.set(i,toMap((LiquibaseSerializable)valueAsList.get(i)));
          }
        }
        value=valueAsList;
      }
      if (value instanceof Map) {
        if (((Map)value).size() == 0) {
          continue;
        }
        for (        Object key : ((Map)value).keySet()) {
          Object mapValue=((Map)value).get(key);
          if (mapValue instanceof LiquibaseSerializable) {
            ((Map)value).put(key,toMap((LiquibaseSerializable)mapValue));
          }
 else           if (mapValue instanceof Collection) {
            List valueAsList=new ArrayList((Collection)mapValue);
            if (valueAsList.size() == 0) {
              continue;
            }
            for (int i=0; i < valueAsList.size(); i++) {
              if (valueAsList.get(i) instanceof LiquibaseSerializable) {
                valueAsList.set(i,toMap((LiquibaseSerializable)valueAsList.get(i)));
              }
            }
            ((Map)value).put(key,valueAsList);
          }
        }
      }
      objectMap.put(field,value);
    }
  }
  Map<String,Object> containerMap=new HashMap<String,Object>();
  containerMap.put(object.getSerializedObjectName(),objectMap);
  return containerMap;
}
